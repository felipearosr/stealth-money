{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/faros/stealth-money/packages/web/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["file:///home/faros/stealth-money/packages/web/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n"],"names":[],"mappings":";;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sIAAA,CAAA,KAAE,AAAD,EACV,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sIAAA,CAAA,KAAE,AAAD,EACV,8JACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sIAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAoC;IAC3E,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sIAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sIAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sIAAA,CAAA,KAAE,AAAD,EAAE,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sIAAA,CAAA,KAAE,AAAD,EAAE,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 120, "column": 0}, "map": {"version":3,"sources":["file:///home/faros/stealth-money/packages/web/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,+bACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF;IACD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sIAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 177, "column": 0}, "map": {"version":3,"sources":["file:///home/faros/stealth-money/packages/web/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants } "],"names":[],"mappings":";;;;;AACA;AACA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,8OAAC;QAAI,WAAW,CAAA,GAAA,sIAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE","debugId":null}},
    {"offset": {"line": 219, "column": 0}, "map": {"version":3,"sources":["file:///home/faros/stealth-money/packages/web/src/components/ui/progress.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-2 w-full overflow-hidden rounded-full bg-gray-200\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-gradient-to-r from-blue-500 to-indigo-600 transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG9B,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,GAAG,OAAO,EAAE,oBACjC,8OAAC,oKAAA,CAAA,OAAsB;QACrB,KAAK;QACL,WAAW,CAAA,GAAA,sIAAA,CAAA,KAAE,AAAD,EACV,gEACA;QAED,GAAG,KAAK;kBAET,cAAA,8OAAC,oKAAA,CAAA,YAA2B;YAC1B,WAAU;YACV,OAAO;gBAAE,WAAW,CAAC,YAAY,EAAE,MAAM,CAAC,SAAS,CAAC,EAAE,EAAE,CAAC;YAAC;;;;;;;;;;;AAIhE,SAAS,WAAW,GAAG,oKAAA,CAAA,OAAsB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 258, "column": 0}, "map": {"version":3,"sources":["file:///home/faros/stealth-money/packages/web/src/app/mvp-demo/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from \"react\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Progress } from \"@/components/ui/progress\";\nimport { \n  CheckCircle, \n  User, \n  CreditCard, \n  Send, \n  ArrowRight, \n  Shield, \n  Globe,\n  DollarSign,\n  Clock,\n  AlertCircle\n} from \"lucide-react\";\n\ntype DemoStep = 'verification' | 'selection' | 'payment' | 'results';\n\ninterface MockUser {\n  id: string;\n  name: string;\n  email: string;\n  country: string;\n  acceptedCurrencies: string[];\n  firstName: string;\n  lastName: string;\n}\n\nconst mockUsers: MockUser[] = [\n  {\n    id: '1',\n    name: 'María González',\n    firstName: 'María',\n    lastName: 'González',\n    email: 'maria@example.cl',\n    country: 'Chile',\n    acceptedCurrencies: ['CLP', 'USD']\n  },\n  {\n    id: '2',\n    name: 'Carlos Rodriguez',\n    firstName: 'Carlos',\n    lastName: 'Rodriguez',\n    email: 'carlos@example.cl',\n    country: 'Chile',\n    acceptedCurrencies: ['CLP']\n  },\n  {\n    id: '3',\n    name: 'Ana Silva',\n    firstName: 'Ana',\n    lastName: 'Silva',\n    email: 'ana@example.cl',\n    country: 'Chile',\n    acceptedCurrencies: ['CLP', 'USD', 'EUR']\n  },\n  {\n    id: '4',\n    name: 'Diego Morales',\n    firstName: 'Diego',\n    lastName: 'Morales',\n    email: 'diego@example.cl',\n    country: 'Chile',\n    acceptedCurrencies: ['CLP']\n  },\n  {\n    id: '5',\n    name: 'Isabella Torres',\n    firstName: 'Isabella',\n    lastName: 'Torres',\n    email: 'isabella@example.cl',\n    country: 'Chile',\n    acceptedCurrencies: ['CLP', 'USD']\n  },\n  {\n    id: '6',\n    name: 'Roberto Fernandez',\n    firstName: 'Roberto',\n    lastName: 'Fernandez',\n    email: 'roberto@example.cl',\n    country: 'Chile',\n    acceptedCurrencies: ['CLP', 'EUR']\n  }\n];\n\nexport default function MVPDemo() {\n  const [currentStep, setCurrentStep] = useState<DemoStep>('verification');\n  const [selectedUser, setSelectedUser] = useState<MockUser | null>(null);\n  const [paymentAmount, setPaymentAmount] = useState<string>('');\n  const [verificationProgress, setVerificationProgress] = useState(0);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [filteredUsers, setFilteredUsers] = useState<MockUser[]>([]);\n  const [showUsers, setShowUsers] = useState(false);\n  const [verificationMessages, setVerificationMessages] = useState<string[]>([]);\n  const [currentMessageIndex, setCurrentMessageIndex] = useState(0);\n\n  const steps = [\n    { id: 'verification', title: 'Bank Verification', icon: Shield },\n    { id: 'selection', title: 'Select Recipient', icon: Globe },\n    { id: 'payment', title: 'Payment Process', icon: CreditCard },\n    { id: 'results', title: 'Results', icon: CheckCircle }\n  ];\n\n  const verificationSteps = [\n    'Connecting to Chilean banking network...',\n    'Validating RUT with Registro Civil...',\n    'Verifying account ownership with bank...',\n    'Checking account status and permissions...',\n    'Confirming transaction capabilities...',\n    'Finalizing security protocols...',\n    'Bank account successfully verified!'\n  ];\n\n  const getCurrentStepIndex = () => steps.findIndex(step => step.id === currentStep);\n  const progressPercentage = ((getCurrentStepIndex() + 1) / steps.length) * 100;\n\n  const handleVerification = () => {\n    setIsProcessing(true);\n    setVerificationProgress(0);\n    setVerificationMessages([]);\n    setCurrentMessageIndex(0);\n    \n    const messageInterval = setInterval(() => {\n      setCurrentMessageIndex(prev => {\n        if (prev < verificationSteps.length - 1) {\n          setVerificationMessages(msgs => [...msgs, verificationSteps[prev]]);\n          return prev + 1;\n        }\n        clearInterval(messageInterval);\n        return prev;\n      });\n    }, 1200);\n    \n    const progressInterval = setInterval(() => {\n      setVerificationProgress(prev => {\n        if (prev >= 100) {\n          clearInterval(progressInterval);\n          setIsProcessing(false);\n          setTimeout(() => setCurrentStep('selection'), 1500);\n          return 100;\n        }\n        return prev + (100 / verificationSteps.length);\n      });\n    }, 1200);\n  };\n\n  const handleSearch = (query: string) => {\n    setSearchQuery(query);\n    if (query.length >= 2) {\n      const filtered = mockUsers.filter(user => \n        user.name.toLowerCase().includes(query.toLowerCase()) ||\n        user.email.toLowerCase().includes(query.toLowerCase())\n      );\n      setFilteredUsers(filtered);\n      setTimeout(() => setShowUsers(true), 300);\n    } else {\n      setShowUsers(false);\n      setFilteredUsers([]);\n    }\n  };\n\n  const getProfileColor = (firstName: string, lastName: string) => {\n    const colors = [\n      'bg-blue-500', 'bg-green-500', 'bg-purple-500', 'bg-red-500', \n      'bg-yellow-500', 'bg-indigo-500', 'bg-pink-500', 'bg-teal-500'\n    ];\n    const index = (firstName.charCodeAt(0) + lastName.charCodeAt(0)) % colors.length;\n    return colors[index];\n  };\n\n  const getInitials = (firstName: string, lastName: string) => {\n    return `${firstName.charAt(0)}${lastName.charAt(0)}`;\n  };\n\n  const handlePayment = () => {\n    setIsProcessing(true);\n    setTimeout(() => {\n      setIsProcessing(false);\n      setCurrentStep('results');\n    }, 3000);\n  };\n\n\n\n  const renderVerificationStep = () => (\n    <Card className=\"w-full max-w-2xl\">\n      <CardHeader>\n        <CardTitle className=\"flex items-center gap-2\">\n          <Shield className=\"text-blue-500\" />\n          Bank Account Verification - Chile\n        </CardTitle>\n      </CardHeader>\n      <CardContent className=\"space-y-6\">\n        <div className=\"bg-blue-50 p-4 rounded-lg border border-blue-200\">\n          <div className=\"flex items-center gap-3\">\n            <AlertCircle className=\"text-blue-600\" />\n            <div>\n              <h3 className=\"font-semibold text-blue-800\">Chilean Bank Verification</h3>\n              <p className=\"text-blue-600\">We'll verify your Chilean bank account for CLP transactions</p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"space-y-4\">\n          <div className=\"grid grid-cols-2 gap-4\">\n            <div className=\"space-y-2\">\n              <label className=\"text-sm font-medium\">Bank Name</label>\n              <select className=\"w-full p-2 border rounded-md bg-white\">\n                <option>Banco de Chile</option>\n                <option>BancoEstado</option>\n                <option>Banco Santander</option>\n                <option>Banco BCI</option>\n              </select>\n            </div>\n            <div className=\"space-y-2\">\n              <label className=\"text-sm font-medium\">Account Type</label>\n              <select className=\"w-full p-2 border rounded-md bg-white\">\n                <option>Cuenta Corriente</option>\n                <option>Cuenta Vista</option>\n                <option>Cuenta de Ahorro</option>\n              </select>\n            </div>\n          </div>\n\n          <div className=\"space-y-2\">\n            <label className=\"text-sm font-medium\">RUT</label>\n            <input \n              type=\"text\" \n              placeholder=\"12.345.678-9\"\n              className=\"w-full p-2 border rounded-md\"\n              defaultValue=\"12.345.678-9\"\n            />\n          </div>\n\n          <div className=\"space-y-2\">\n            <label className=\"text-sm font-medium\">Account Number</label>\n            <input \n              type=\"text\" \n              placeholder=\"Enter your account number\"\n              className=\"w-full p-2 border rounded-md\"\n              defaultValue=\"****1234\"\n            />\n          </div>\n        </div>\n\n        {isProcessing && (\n          <div className=\"space-y-4\">\n            <div className=\"bg-blue-50 p-4 rounded-lg border border-blue-200\">\n              <div className=\"space-y-2\">\n                {verificationMessages.map((message, index) => (\n                  <div key={index} className=\"flex items-center gap-2 text-sm text-blue-700\">\n                    <CheckCircle className=\"w-4 h-4 text-green-500\" />\n                    <span>{message}</span>\n                  </div>\n                ))}\n                {currentMessageIndex < verificationSteps.length - 1 && (\n                  <div className=\"flex items-center gap-2 text-sm text-blue-600\">\n                    <Clock className=\"w-4 h-4 animate-spin\" />\n                    <span>{verificationSteps[currentMessageIndex]}</span>\n                  </div>\n                )}\n              </div>\n            </div>\n            <div className=\"space-y-2\">\n              <div className=\"flex justify-between text-sm\">\n                <span>Verification Progress</span>\n                <span>{Math.round(verificationProgress)}%</span>\n              </div>\n              <Progress value={verificationProgress} className=\"w-full\" />\n            </div>\n          </div>\n        )}\n\n        <Button \n          onClick={handleVerification} \n          disabled={isProcessing}\n          className=\"w-full\"\n        >\n          {isProcessing ? 'Verifying...' : 'Verify Bank Account'}\n          {!isProcessing && <Shield className=\"ml-2 h-4 w-4\" />}\n        </Button>\n      </CardContent>\n    </Card>\n  );\n\n  const renderSelectionStep = () => (\n    <Card className=\"w-full max-w-2xl\">\n      <CardHeader>\n        <CardTitle className=\"flex items-center gap-2\">\n          <Globe className=\"text-purple-500\" />\n          Select Recipient\n        </CardTitle>\n      </CardHeader>\n      <CardContent className=\"space-y-4\">\n        <p className=\"text-gray-600\">Search for a user to send money to:</p>\n        \n        <div className=\"space-y-2\">\n          <input\n            type=\"text\"\n            placeholder=\"Search by name or email...\"\n            value={searchQuery}\n            onChange={(e) => handleSearch(e.target.value)}\n            className=\"w-full p-3 border rounded-lg focus:outline-none focus:ring-2 focus:ring-purple-500\"\n          />\n          {searchQuery.length > 0 && searchQuery.length < 2 && (\n            <p className=\"text-sm text-gray-500\">Type at least 2 characters to search</p>\n          )}\n        </div>\n        \n        {showUsers && (\n          <div className=\"space-y-3\">\n            {filteredUsers.length > 0 ? (\n              filteredUsers.map((user) => (\n                <div\n                  key={user.id}\n                  className={`p-4 border rounded-lg cursor-pointer transition-all ${\n                    selectedUser?.id === user.id \n                      ? 'border-purple-500 bg-purple-50' \n                      : 'border-gray-200 hover:border-gray-300'\n                  }`}\n                  onClick={() => setSelectedUser(user)}\n                >\n                  <div className=\"flex items-center justify-between\">\n                    <div className=\"flex items-center gap-3\">\n                      <div className={`w-12 h-12 rounded-full flex items-center justify-center text-white font-semibold ${\n                        getProfileColor(user.firstName, user.lastName)\n                      }`}>\n                        {getInitials(user.firstName, user.lastName)}\n                      </div>\n                      <div>\n                        <h3 className=\"font-semibold\">{user.name}</h3>\n                        <p className=\"text-sm text-gray-600\">{user.email}</p>\n                        <p className=\"text-sm text-gray-500\">{user.country}</p>\n                      </div>\n                    </div>\n                    <div className=\"text-right\">\n                      <div className=\"flex gap-1 flex-wrap justify-end\">\n                        {user.acceptedCurrencies.map(currency => (\n                          <Badge \n                            key={currency} \n                            variant=\"secondary\" \n                            className={currency === 'CLP' ? 'bg-blue-100 text-blue-800' : ''}\n                          >\n                            {currency}\n                          </Badge>\n                        ))}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              ))\n            ) : (\n              <p className=\"text-gray-500 text-center py-4\">No users found matching your search</p>\n            )}\n          </div>\n        )}\n\n        <Button \n          onClick={() => setCurrentStep('payment')} \n          disabled={!selectedUser}\n          className=\"w-full\"\n        >\n          Continue to Payment\n          <ArrowRight className=\"ml-2 h-4 w-4\" />\n        </Button>\n      </CardContent>\n    </Card>\n  );\n\n\n\n  const renderPaymentStep = () => (\n    <Card className=\"w-full max-w-2xl\">\n      <CardHeader>\n        <CardTitle className=\"flex items-center gap-2\">\n          <CreditCard className=\"text-green-500\" />\n          Transfer Calculator\n        </CardTitle>\n      </CardHeader>\n      <CardContent className=\"space-y-6\">\n        {selectedUser && (\n          <div className=\"bg-gray-50 p-4 rounded-lg\">\n            <h3 className=\"font-semibold mb-2\">Sending to:</h3>\n            <div className=\"flex items-center gap-3\">\n              <div className={`w-10 h-10 rounded-full flex items-center justify-center text-white font-semibold text-sm ${\n                getProfileColor(selectedUser.firstName, selectedUser.lastName)\n              }`}>\n                {getInitials(selectedUser.firstName, selectedUser.lastName)}\n              </div>\n              <div>\n                <p className=\"font-medium\">{selectedUser.name}</p>\n                <p className=\"text-sm text-gray-600\">{selectedUser.email}</p>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Calculator Interface */}\n        <div className=\"space-y-4\">\n          <div className=\"grid grid-cols-2 gap-4\">\n            <div className=\"space-y-2\">\n              <label className=\"text-sm font-medium text-gray-700\">You send</label>\n              <div className=\"relative\">\n                <input \n                  type=\"number\" \n                  placeholder=\"50,000\"\n                  value={paymentAmount}\n                  onChange={(e) => setPaymentAmount(e.target.value)}\n                  className=\"w-full p-3 pr-16 border rounded-lg text-lg font-semibold focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                />\n                <div className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-sm font-medium text-gray-500\">\n                  CLP\n                </div>\n              </div>\n            </div>\n            <div className=\"space-y-2\">\n              <label className=\"text-sm font-medium text-gray-700\">They receive</label>\n              <div className=\"relative\">\n                <input \n                  type=\"text\" \n                  value={paymentAmount ? (parseInt(paymentAmount) - 2500).toLocaleString() : '0'}\n                  readOnly\n                  className=\"w-full p-3 pr-16 border rounded-lg text-lg font-semibold bg-gray-50 text-gray-700\"\n                />\n                <div className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-sm font-medium text-gray-500\">\n                  CLP\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Exchange Rate Info */}\n          <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4\">\n            <div className=\"flex items-center justify-between mb-3\">\n              <span className=\"text-sm font-medium text-gray-700\">Exchange rate</span>\n              <span className=\"text-sm font-semibold text-blue-600\">1 USD = 950.00 CLP</span>\n            </div>\n            <div className=\"space-y-2 text-sm\">\n              <div className=\"flex justify-between\">\n                <span className=\"text-gray-600\">Transfer fee</span>\n                <span className=\"font-medium\">2,500 CLP</span>\n              </div>\n              <div className=\"flex justify-between\">\n                <span className=\"text-gray-600\">Processing time</span>\n                <span className=\"font-medium\">2-5 minutes</span>\n              </div>\n              <div className=\"border-t pt-2 flex justify-between\">\n                <span className=\"font-semibold text-gray-900\">Total cost</span>\n                <span className=\"font-bold text-lg text-gray-900\">\n                  {paymentAmount ? parseInt(paymentAmount).toLocaleString() : '0'} CLP\n                </span>\n              </div>\n            </div>\n          </div>\n\n          {/* Payment Method */}\n          <div className=\"space-y-2\">\n            <label className=\"text-sm font-medium text-gray-700\">Payment method</label>\n            <div className=\"p-3 border rounded-lg bg-white\">\n              <div className=\"flex items-center gap-3\">\n                <CreditCard className=\"text-blue-500 w-5 h-5\" />\n                <div className=\"flex-1\">\n                  <p className=\"font-medium text-gray-900\">Banco de Chile</p>\n                  <p className=\"text-sm text-gray-600\">Cuenta Corriente •••• 1234</p>\n                </div>\n                <Badge variant=\"outline\" className=\"text-green-600 border-green-200\">Verified</Badge>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <Button \n          onClick={handlePayment} \n          disabled={!paymentAmount || parseInt(paymentAmount) < 1000}\n          className=\"w-full h-12 text-lg font-semibold\"\n        >\n          Send {paymentAmount ? parseInt(paymentAmount).toLocaleString() : '0'} CLP\n          <Send className=\"ml-2 h-5 w-5\" />\n        </Button>\n\n        {parseInt(paymentAmount || '0') > 0 && parseInt(paymentAmount || '0') < 1000 && (\n          <p className=\"text-sm text-red-600 text-center\">Minimum transfer amount is 1,000 CLP</p>\n        )}\n      </CardContent>\n    </Card>\n  );\n\n  const renderResultsStep = () => (\n    <Card className=\"w-full max-w-2xl\">\n      <CardHeader>\n        <CardTitle className=\"flex items-center gap-2\">\n          {isProcessing ? (\n            <Clock className=\"text-yellow-500 animate-spin\" />\n          ) : (\n            <CheckCircle className=\"text-green-500\" />\n          )}\n          {isProcessing ? 'Processing Transfer...' : 'Transfer Completed Successfully!'}\n        </CardTitle>\n      </CardHeader>\n      <CardContent className=\"space-y-6\">\n        {isProcessing ? (\n          <div className=\"space-y-4\">\n            <div className=\"bg-yellow-50 p-6 rounded-lg border border-yellow-200 text-center\">\n              <div className=\"w-16 h-16 bg-yellow-100 rounded-full flex items-center justify-center mx-auto mb-4\">\n                <Clock className=\"w-8 h-8 text-yellow-600 animate-spin\" />\n              </div>\n              <h3 className=\"text-xl font-bold text-yellow-800 mb-2\">Processing Your Transfer</h3>\n              <p className=\"text-yellow-600\">Please wait while we securely process your payment</p>\n            </div>\n            \n            <div className=\"bg-blue-50 p-4 rounded-lg border border-blue-200\">\n              <div className=\"space-y-3\">\n                <div className=\"flex items-center gap-2 text-sm text-blue-700\">\n                  <CheckCircle className=\"w-4 h-4 text-green-500\" />\n                  <span>Payment authorized</span>\n                </div>\n                <div className=\"flex items-center gap-2 text-sm text-blue-700\">\n                  <CheckCircle className=\"w-4 h-4 text-green-500\" />\n                  <span>Funds debited from your account</span>\n                </div>\n                <div className=\"flex items-center gap-2 text-sm text-blue-600\">\n                  <Clock className=\"w-4 h-4 animate-spin\" />\n                  <span>Transferring to recipient...</span>\n                </div>\n              </div>\n            </div>\n          </div>\n        ) : (\n          <div className=\"bg-green-50 p-6 rounded-lg border border-green-200 text-center\">\n            <div className=\"w-16 h-16 bg-green-100 rounded-full flex items-center justify-center mx-auto mb-4\">\n              <CheckCircle className=\"w-8 h-8 text-green-600\" />\n            </div>\n            <h3 className=\"text-xl font-bold text-green-800 mb-2\">Payment Successful!</h3>\n            <p className=\"text-green-600\">Your money has been sent successfully</p>\n          </div>\n        )}\n\n        <div className=\"space-y-4\">\n          <div className=\"bg-gray-50 p-4 rounded-lg\">\n            <h3 className=\"font-semibold mb-3\">Transaction Details</h3>\n            <div className=\"space-y-2 text-sm\">\n              <div className=\"flex justify-between\">\n                <span>Transaction ID:</span>\n                <span className=\"font-mono\">TXN-CLP-{Date.now().toString().slice(-8)}</span>\n              </div>\n              <div className=\"flex justify-between\">\n                <span>Amount Sent:</span>\n                <span className=\"font-semibold\">{paymentAmount ? parseInt(paymentAmount).toLocaleString() : '0'} CLP</span>\n              </div>\n              <div className=\"flex justify-between\">\n                <span>Transfer Fee:</span>\n                <span>2,500 CLP</span>\n              </div>\n              <div className=\"flex justify-between\">\n                <span>Total Charged:</span>\n                <span className=\"font-bold\">{paymentAmount ? (parseInt(paymentAmount) + 2500).toLocaleString() : '0'} CLP</span>\n              </div>\n              <div className=\"flex justify-between\">\n                <span>Recipient:</span>\n                <span>{selectedUser?.name}</span>\n              </div>\n              <div className=\"flex justify-between\">\n                <span>Status:</span>\n                <Badge variant=\"outline\" className=\"text-green-600\">Completed</Badge>\n              </div>\n              <div className=\"flex justify-between\">\n                <span>Completed At:</span>\n                <span>{new Date().toLocaleString()}</span>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"bg-blue-50 p-4 rounded-lg\">\n            <h3 className=\"font-semibold text-blue-800 mb-2\">What's Next?</h3>\n            <ul className=\"text-sm text-blue-600 space-y-1\">\n              <li>• {selectedUser?.name} will receive a notification</li>\n              <li>• Funds will be available in their account within 2-5 minutes</li>\n              <li>• You'll receive an email confirmation shortly</li>\n              <li>• Track this transfer in your transaction history</li>\n            </ul>\n          </div>\n        </div>\n\n        <div className=\"flex gap-3\">\n          <Button variant=\"outline\" className=\"flex-1\">\n            View Receipt\n          </Button>\n          <Button \n            onClick={() => {\n              setCurrentStep('verification');\n              setSelectedUser(null);\n              setPaymentAmount('');\n              setVerificationProgress(0);\n              setSearchQuery('');\n              setShowUsers(false);\n              setFilteredUsers([]);\n            }}\n            className=\"flex-1\"\n          >\n            Send Another Transfer\n          </Button>\n        </div>\n      </CardContent>\n    </Card>\n  );\n\n  const renderCurrentStep = () => {\n    switch (currentStep) {\n      case 'verification':\n        return renderVerificationStep();\n      case 'selection':\n        return renderSelectionStep();\n      case 'payment':\n        return renderPaymentStep();\n      case 'results':\n        return renderResultsStep();\n      default:\n        return renderVerificationStep();\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-slate-50 via-blue-50 to-indigo-50 p-4\">\n      <div className=\"max-w-4xl mx-auto\">\n        {/* Header */}\n        <div className=\"text-center mb-8\">\n          <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">\n            Stealth Money MVP Demo\n          </h1>\n          <p className=\"text-gray-600\">\n            Complete Payment Flow - From Account Creation to Final Results\n          </p>\n        </div>\n\n        {/* Progress Indicator */}\n        <div className=\"mb-8\">\n          <div className=\"flex justify-between items-center mb-4\">\n            {steps.map((step, index) => {\n              const StepIcon = step.icon;\n              const isActive = step.id === currentStep;\n              const isCompleted = getCurrentStepIndex() > index;\n              \n              return (\n                <div key={step.id} className=\"flex flex-col items-center\">\n                  <div className={`w-12 h-12 rounded-full flex items-center justify-center mb-2 ${\n                    isCompleted \n                      ? 'bg-green-500 text-white' \n                      : isActive \n                        ? 'bg-blue-500 text-white' \n                        : 'bg-gray-200 text-gray-500'\n                  }`}>\n                    <StepIcon className=\"w-6 h-6\" />\n                  </div>\n                  <span className={`text-xs text-center ${\n                    isActive ? 'text-blue-600 font-semibold' : 'text-gray-500'\n                  }`}>\n                    {step.title}\n                  </span>\n                </div>\n              );\n            })}\n          </div>\n          <Progress value={progressPercentage} className=\"w-full\" />\n        </div>\n\n        {/* Current Step Content */}\n        <div className=\"flex justify-center\">\n          {renderCurrentStep()}\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}