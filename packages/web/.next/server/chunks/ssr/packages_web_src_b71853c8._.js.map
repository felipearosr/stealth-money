{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/faros/stealth-money/packages/web/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["file:///home/faros/stealth-money/packages/web/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,+bACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF;IACD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sIAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 80, "column": 0}, "map": {"version":3,"sources":["file:///home/faros/stealth-money/packages/web/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n"],"names":[],"mappings":";;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sIAAA,CAAA,KAAE,AAAD,EACV,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sIAAA,CAAA,KAAE,AAAD,EACV,8JACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sIAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAoC;IAC3E,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sIAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sIAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sIAAA,CAAA,KAAE,AAAD,EAAE,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sIAAA,CAAA,KAAE,AAAD,EAAE,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 177, "column": 0}, "map": {"version":3,"sources":["file:///home/faros/stealth-money/packages/web/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Input({ className, type, ...props }: React.ComponentProps<\"input\">) {\n  return (\n    <input\n      type={type}\n      data-slot=\"input\"\n      className={cn(\n        \"file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground dark:bg-input/30 border-input flex h-9 w-full min-w-0 rounded-md border bg-transparent px-3 py-1 text-base shadow-xs transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        \"focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]\",\n        \"aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAEA;;;AAEA,SAAS,MAAM,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAsC;IACzE,qBACE,8OAAC;QACC,MAAM;QACN,aAAU;QACV,WAAW,CAAA,GAAA,sIAAA,CAAA,KAAE,AAAD,EACV,mcACA,iFACA,0GACA;QAED,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 203, "column": 0}, "map": {"version":3,"sources":["file:///home/faros/stealth-money/packages/web/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Label({\n  className,\n  ...props\n}: React.ComponentProps<typeof LabelPrimitive.Root>) {\n  return (\n    <LabelPrimitive.Root\n      data-slot=\"label\"\n      className={cn(\n        \"flex items-center gap-2 text-sm leading-none font-medium select-none group-data-[disabled=true]:pointer-events-none group-data-[disabled=true]:opacity-50 peer-disabled:cursor-not-allowed peer-disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,MAAM,EACb,SAAS,EACT,GAAG,OAC8C;IACjD,qBACE,8OAAC,iKAAA,CAAA,OAAmB;QAClB,aAAU;QACV,WAAW,CAAA,GAAA,sIAAA,CAAA,KAAE,AAAD,EACV,uNACA;QAED,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 231, "column": 0}, "map": {"version":3,"sources":["file:///home/faros/stealth-money/packages/web/src/components/ui/select.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { CheckIcon, ChevronDownIcon, ChevronUpIcon } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Select({\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Root>) {\n  return <SelectPrimitive.Root data-slot=\"select\" {...props} />\n}\n\nfunction SelectGroup({\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Group>) {\n  return <SelectPrimitive.Group data-slot=\"select-group\" {...props} />\n}\n\nfunction SelectValue({\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Value>) {\n  return <SelectPrimitive.Value data-slot=\"select-value\" {...props} />\n}\n\nfunction SelectTrigger({\n  className,\n  size = \"default\",\n  children,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Trigger> & {\n  size?: \"sm\" | \"default\"\n}) {\n  return (\n    <SelectPrimitive.Trigger\n      data-slot=\"select-trigger\"\n      data-size={size}\n      className={cn(\n        \"border-input data-[placeholder]:text-muted-foreground [&_svg:not([class*='text-'])]:text-muted-foreground focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive dark:bg-input/30 dark:hover:bg-input/50 flex w-fit items-center justify-between gap-2 rounded-md border bg-transparent px-3 py-2 text-sm whitespace-nowrap shadow-xs transition-[color,box-shadow] outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50 data-[size=default]:h-9 data-[size=sm]:h-8 *:data-[slot=select-value]:line-clamp-1 *:data-[slot=select-value]:flex *:data-[slot=select-value]:items-center *:data-[slot=select-value]:gap-2 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <SelectPrimitive.Icon asChild>\n        <ChevronDownIcon className=\"size-4 opacity-50\" />\n      </SelectPrimitive.Icon>\n    </SelectPrimitive.Trigger>\n  )\n}\n\nfunction SelectContent({\n  className,\n  children,\n  position = \"popper\",\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Content>) {\n  return (\n    <SelectPrimitive.Portal>\n      <SelectPrimitive.Content\n        data-slot=\"select-content\"\n        className={cn(\n          \"bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 relative z-50 max-h-(--radix-select-content-available-height) min-w-[8rem] origin-(--radix-select-content-transform-origin) overflow-x-hidden overflow-y-auto rounded-md border shadow-md\",\n          position === \"popper\" &&\n            \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n          className\n        )}\n        position={position}\n        {...props}\n      >\n        <SelectScrollUpButton />\n        <SelectPrimitive.Viewport\n          className={cn(\n            \"p-1\",\n            position === \"popper\" &&\n              \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)] scroll-my-1\"\n          )}\n        >\n          {children}\n        </SelectPrimitive.Viewport>\n        <SelectScrollDownButton />\n      </SelectPrimitive.Content>\n    </SelectPrimitive.Portal>\n  )\n}\n\nfunction SelectLabel({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Label>) {\n  return (\n    <SelectPrimitive.Label\n      data-slot=\"select-label\"\n      className={cn(\"text-muted-foreground px-2 py-1.5 text-xs\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SelectItem({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Item>) {\n  return (\n    <SelectPrimitive.Item\n      data-slot=\"select-item\"\n      className={cn(\n        \"focus:bg-accent focus:text-accent-foreground [&_svg:not([class*='text-'])]:text-muted-foreground relative flex w-full cursor-default items-center gap-2 rounded-sm py-1.5 pr-8 pl-2 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4 *:[span]:last:flex *:[span]:last:items-center *:[span]:last:gap-2\",\n        className\n      )}\n      {...props}\n    >\n      <span className=\"absolute right-2 flex size-3.5 items-center justify-center\">\n        <SelectPrimitive.ItemIndicator>\n          <CheckIcon className=\"size-4\" />\n        </SelectPrimitive.ItemIndicator>\n      </span>\n      <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n    </SelectPrimitive.Item>\n  )\n}\n\nfunction SelectSeparator({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Separator>) {\n  return (\n    <SelectPrimitive.Separator\n      data-slot=\"select-separator\"\n      className={cn(\"bg-border pointer-events-none -mx-1 my-1 h-px\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SelectScrollUpButton({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.ScrollUpButton>) {\n  return (\n    <SelectPrimitive.ScrollUpButton\n      data-slot=\"select-scroll-up-button\"\n      className={cn(\n        \"flex cursor-default items-center justify-center py-1\",\n        className\n      )}\n      {...props}\n    >\n      <ChevronUpIcon className=\"size-4\" />\n    </SelectPrimitive.ScrollUpButton>\n  )\n}\n\nfunction SelectScrollDownButton({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.ScrollDownButton>) {\n  return (\n    <SelectPrimitive.ScrollDownButton\n      data-slot=\"select-scroll-down-button\"\n      className={cn(\n        \"flex cursor-default items-center justify-center py-1\",\n        className\n      )}\n      {...props}\n    >\n      <ChevronDownIcon className=\"size-4\" />\n    </SelectPrimitive.ScrollDownButton>\n  )\n}\n\nexport {\n  Select,\n  SelectContent,\n  SelectGroup,\n  SelectItem,\n  SelectLabel,\n  SelectScrollDownButton,\n  SelectScrollUpButton,\n  SelectSeparator,\n  SelectTrigger,\n  SelectValue,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 456, "column": 0}, "map": {"version":3,"sources":["file:///home/faros/stealth-money/packages/web/src/lib/currencies.ts"],"sourcesContent":["/**\n * Currency configuration for multi-currency support\n */\n\nexport interface SupportedCurrency {\n  code: string; // ISO 4217 currency code\n  name: string; // Full currency name\n  symbol: string; // Currency symbol\n  flag: string; // Country flag emoji\n  countries: string[]; // Countries that use this currency\n  minAmount: number; // Minimum transfer amount\n  maxAmount: number; // Maximum transfer amount\n  decimalPlaces: number; // Number of decimal places\n}\n\nexport const SUPPORTED_CURRENCIES: Record<string, SupportedCurrency> = {\n  USD: {\n    code: 'USD',\n    name: 'US Dollar',\n    symbol: '$',\n    flag: '🇺🇸',\n    countries: ['United States'],\n    minAmount: 1,\n    maxAmount: 50000,\n    decimalPlaces: 2\n  },\n  EUR: {\n    code: 'EUR',\n    name: 'Euro',\n    symbol: '€',\n    flag: '🇪🇺',\n    countries: ['Germany', 'France', 'Spain', 'Italy'],\n    minAmount: 1,\n    maxAmount: 45000,\n    decimalPlaces: 2\n  },\n  CLP: {\n    code: 'CLP',\n    name: 'Chilean Peso',\n    symbol: '$',\n    flag: '🇨🇱',\n    countries: ['Chile'],\n    minAmount: 800,\n    maxAmount: 40000000,\n    decimalPlaces: 0\n  },\n  MXN: {\n    code: 'MXN',\n    name: 'Mexican Peso',\n    symbol: '$',\n    flag: '🇲🇽',\n    countries: ['Mexico'],\n    minAmount: 20,\n    maxAmount: 1000000,\n    decimalPlaces: 2\n  },\n  GBP: {\n    code: 'GBP',\n    name: 'British Pound',\n    symbol: '£',\n    flag: '🇬🇧',\n    countries: ['United Kingdom'],\n    minAmount: 1,\n    maxAmount: 40000,\n    decimalPlaces: 2\n  }\n};\n\n// Send currencies (currently only USD)\nexport const SEND_CURRENCIES = ['USD'] as const;\n\n// Receive currencies (all supported except USD)\nexport const RECEIVE_CURRENCIES = ['EUR', 'CLP', 'MXN', 'GBP'] as const;\n\nexport type SendCurrency = typeof SEND_CURRENCIES[number];\nexport type ReceiveCurrency = typeof RECEIVE_CURRENCIES[number];\n\n/**\n * Format currency amount with proper symbol and decimal places\n */\nexport function formatCurrency(amount: number, currencyCode: string): string {\n  const currency = SUPPORTED_CURRENCIES[currencyCode];\n  if (!currency) {\n    return amount.toString();\n  }\n\n  return new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: currencyCode,\n    minimumFractionDigits: currency.decimalPlaces,\n    maximumFractionDigits: currency.decimalPlaces,\n  }).format(amount);\n}\n\n/**\n * Format number input based on currency decimal places\n */\nexport function formatNumberInput(value: string, currencyCode: string): string {\n  const currency = SUPPORTED_CURRENCIES[currencyCode];\n  if (!currency) {\n    return value;\n  }\n\n  // Remove any non-numeric characters except decimal point\n  const cleaned = value.replace(/[^\\d.]/g, '');\n  \n  // Ensure only one decimal point\n  const parts = cleaned.split('.');\n  if (parts.length > 2) {\n    return parts[0] + '.' + parts[1];\n  }\n  \n  // Limit decimal places based on currency\n  if (currency.decimalPlaces === 0) {\n    // No decimal places allowed\n    return parts[0];\n  } else if (parts[1] && parts[1].length > currency.decimalPlaces) {\n    return parts[0] + '.' + parts[1].substring(0, currency.decimalPlaces);\n  }\n  \n  return cleaned;\n}\n\n/**\n * Validate amount based on currency limits\n */\nexport function validateAmount(amount: number, currencyCode: string): string | null {\n  const currency = SUPPORTED_CURRENCIES[currencyCode];\n  if (!currency) {\n    return 'Unsupported currency';\n  }\n\n  if (amount < currency.minAmount) {\n    return `Amount must be at least ${formatCurrency(currency.minAmount, currencyCode)}`;\n  }\n\n  if (amount > currency.maxAmount) {\n    return `Amount cannot exceed ${formatCurrency(currency.maxAmount, currencyCode)}`;\n  }\n\n  return null;\n}\n\n/**\n * Get currency display name with flag\n */\nexport function getCurrencyDisplayName(currencyCode: string): string {\n  const currency = SUPPORTED_CURRENCIES[currencyCode];\n  if (!currency) {\n    return currencyCode;\n  }\n\n  return `${currency.flag} ${currency.code} - ${currency.name}`;\n}"],"names":[],"mappings":"AAAA;;CAEC;;;;;;;;;AAaM,MAAM,uBAA0D;IACrE,KAAK;QACH,MAAM;QACN,MAAM;QACN,QAAQ;QACR,MAAM;QACN,WAAW;YAAC;SAAgB;QAC5B,WAAW;QACX,WAAW;QACX,eAAe;IACjB;IACA,KAAK;QACH,MAAM;QACN,MAAM;QACN,QAAQ;QACR,MAAM;QACN,WAAW;YAAC;YAAW;YAAU;YAAS;SAAQ;QAClD,WAAW;QACX,WAAW;QACX,eAAe;IACjB;IACA,KAAK;QACH,MAAM;QACN,MAAM;QACN,QAAQ;QACR,MAAM;QACN,WAAW;YAAC;SAAQ;QACpB,WAAW;QACX,WAAW;QACX,eAAe;IACjB;IACA,KAAK;QACH,MAAM;QACN,MAAM;QACN,QAAQ;QACR,MAAM;QACN,WAAW;YAAC;SAAS;QACrB,WAAW;QACX,WAAW;QACX,eAAe;IACjB;IACA,KAAK;QACH,MAAM;QACN,MAAM;QACN,QAAQ;QACR,MAAM;QACN,WAAW;YAAC;SAAiB;QAC7B,WAAW;QACX,WAAW;QACX,eAAe;IACjB;AACF;AAGO,MAAM,kBAAkB;IAAC;CAAM;AAG/B,MAAM,qBAAqB;IAAC;IAAO;IAAO;IAAO;CAAM;AAQvD,SAAS,eAAe,MAAc,EAAE,YAAoB;IACjE,MAAM,WAAW,oBAAoB,CAAC,aAAa;IACnD,IAAI,CAAC,UAAU;QACb,OAAO,OAAO,QAAQ;IACxB;IAEA,OAAO,IAAI,KAAK,YAAY,CAAC,SAAS;QACpC,OAAO;QACP,UAAU;QACV,uBAAuB,SAAS,aAAa;QAC7C,uBAAuB,SAAS,aAAa;IAC/C,GAAG,MAAM,CAAC;AACZ;AAKO,SAAS,kBAAkB,KAAa,EAAE,YAAoB;IACnE,MAAM,WAAW,oBAAoB,CAAC,aAAa;IACnD,IAAI,CAAC,UAAU;QACb,OAAO;IACT;IAEA,yDAAyD;IACzD,MAAM,UAAU,MAAM,OAAO,CAAC,WAAW;IAEzC,gCAAgC;IAChC,MAAM,QAAQ,QAAQ,KAAK,CAAC;IAC5B,IAAI,MAAM,MAAM,GAAG,GAAG;QACpB,OAAO,KAAK,CAAC,EAAE,GAAG,MAAM,KAAK,CAAC,EAAE;IAClC;IAEA,yCAAyC;IACzC,IAAI,SAAS,aAAa,KAAK,GAAG;QAChC,4BAA4B;QAC5B,OAAO,KAAK,CAAC,EAAE;IACjB,OAAO,IAAI,KAAK,CAAC,EAAE,IAAI,KAAK,CAAC,EAAE,CAAC,MAAM,GAAG,SAAS,aAAa,EAAE;QAC/D,OAAO,KAAK,CAAC,EAAE,GAAG,MAAM,KAAK,CAAC,EAAE,CAAC,SAAS,CAAC,GAAG,SAAS,aAAa;IACtE;IAEA,OAAO;AACT;AAKO,SAAS,eAAe,MAAc,EAAE,YAAoB;IACjE,MAAM,WAAW,oBAAoB,CAAC,aAAa;IACnD,IAAI,CAAC,UAAU;QACb,OAAO;IACT;IAEA,IAAI,SAAS,SAAS,SAAS,EAAE;QAC/B,OAAO,CAAC,wBAAwB,EAAE,eAAe,SAAS,SAAS,EAAE,eAAe;IACtF;IAEA,IAAI,SAAS,SAAS,SAAS,EAAE;QAC/B,OAAO,CAAC,qBAAqB,EAAE,eAAe,SAAS,SAAS,EAAE,eAAe;IACnF;IAEA,OAAO;AACT;AAKO,SAAS,uBAAuB,YAAoB;IACzD,MAAM,WAAW,oBAAoB,CAAC,aAAa;IACnD,IAAI,CAAC,UAAU;QACb,OAAO;IACT;IAEA,OAAO,GAAG,SAAS,IAAI,CAAC,CAAC,EAAE,SAAS,IAAI,CAAC,GAAG,EAAE,SAAS,IAAI,EAAE;AAC/D","debugId":null}},
    {"offset": {"line": 600, "column": 0}, "map": {"version":3,"sources":["file:///home/faros/stealth-money/packages/web/src/components/features/TransferCalculator.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect } from \"react\";\nimport { useDebounce } from \"use-debounce\";\nimport { z } from \"zod\";\nimport { Calculator, RefreshCw, AlertCircle, DollarSign, Euro, ArrowRightLeft } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { \n  SUPPORTED_CURRENCIES, \n  SEND_CURRENCIES, \n  RECEIVE_CURRENCIES,\n  formatCurrency,\n  formatNumberInput,\n  type SendCurrency,\n  type ReceiveCurrency\n} from \"@/lib/currencies\";\n\n// Dynamic validation schema for transfer calculation\nconst createTransferCalculationSchema = (currency: string, mode: CalculatorMode) => {\n  const currencyConfig = SUPPORTED_CURRENCIES[currency];\n  const fieldName = mode === 'send' ? 'sendAmount' : 'receiveAmount';\n  \n  return z.object({\n    [fieldName]: z.number()\n      .min(currencyConfig.minAmount, `Amount must be at least ${formatCurrency(currencyConfig.minAmount, currency)}`)\n      .max(currencyConfig.maxAmount, `Amount cannot exceed ${formatCurrency(currencyConfig.maxAmount, currency)}`),\n  });\n};\n\ninterface TransferCalculation {\n  sendAmount: number;\n  receiveAmount: number;\n  sendCurrency: string;\n  receiveCurrency: string;\n  exchangeRate: number;\n  fees: number;\n  rateValidUntil: string;\n  breakdown: {\n    sendAmountUSD: number;\n    fees: {\n      cardProcessing: number;\n      transfer: number;\n      payout: number;\n      total: number;\n    };\n    netAmountUSD: number;\n    exchangeRate: number;\n    receiveAmount: number;\n  };\n  estimatedArrival: string;\n  rateId: string;\n}\n\ntype CalculatorMode = 'send' | 'receive';\n\ninterface TransferCalculatorProps {\n  onContinue?: (data: {\n    sendAmount: number;\n    receiveAmount: number;\n    exchangeRate: number;\n    fees: number;\n    rateId: string;\n    calculatorMode: CalculatorMode;\n  }) => void;\n  isNavigating?: boolean;\n}\n\nexport function TransferCalculator({ onContinue, isNavigating = false }: TransferCalculatorProps) {\n  // Component state\n  const [calculatorMode, setCalculatorMode] = useState<CalculatorMode>('send');\n  const [inputAmount, setInputAmount] = useState<string>('');\n  const [sendCurrency, setSendCurrency] = useState<SendCurrency>('USD');\n  const [receiveCurrency, setReceiveCurrency] = useState<ReceiveCurrency>('EUR');\n  const [calculation, setCalculation] = useState<TransferCalculation | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [validationError, setValidationError] = useState<string | null>(null);\n  const [lastUpdated, setLastUpdated] = useState<Date | null>(null);\n\n  // Debounced values to avoid excessive API calls\n  const [debouncedInputAmount] = useDebounce(inputAmount, 500);\n  const [debouncedCalculatorMode] = useDebounce(calculatorMode, 300);\n  const [debouncedSendCurrency] = useDebounce(sendCurrency, 300);\n  const [debouncedReceiveCurrency] = useDebounce(receiveCurrency, 300);\n\n  // Calculate transfer using API\n  const calculateTransfer = async (amount: string, mode: CalculatorMode, fromCurrency: SendCurrency, toCurrency: ReceiveCurrency) => {\n    if (!amount || amount === '0' || amount === '') {\n      setCalculation(null);\n      return;\n    }\n\n    const numericAmount = parseFloat(amount);\n    \n    // Validate amount using dynamic schema based on mode\n    try {\n      const validationCurrency = mode === 'send' ? fromCurrency : toCurrency;\n      const schema = createTransferCalculationSchema(validationCurrency, mode);\n      const fieldName = mode === 'send' ? 'sendAmount' : 'receiveAmount';\n      schema.parse({ [fieldName]: numericAmount });\n      setValidationError(null);\n    } catch (err) {\n      if (err instanceof z.ZodError) {\n        setValidationError(err.issues?.[0]?.message || 'Invalid amount');\n        setCalculation(null);\n        return;\n      }\n    }\n\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const API_URL = process.env.NEXT_PUBLIC_API_URL || 'http://localhost:4000';\n      \n      // TEMPORARY: Backend only supports sendAmount mode currently\n      // For \"receive\" mode, we need to estimate the send amount first\n      let requestBody;\n      let estimatedSendAmount = numericAmount;\n      \n      if (mode === 'receive') {\n        // Rough estimation: assume 10% fees and current exchange rate of ~0.85 for USD->EUR\n        // This is a temporary workaround until backend supports receiveAmount\n        const roughExchangeRate = toCurrency === 'EUR' ? 0.85 : \n                                 toCurrency === 'GBP' ? 0.80 : \n                                 toCurrency === 'CLP' ? 800 : \n                                 toCurrency === 'MXN' ? 20 : 0.85;\n        estimatedSendAmount = Math.ceil((numericAmount / roughExchangeRate) * 1.1);\n      }\n      \n      requestBody = {\n        sendAmount: estimatedSendAmount,\n        sendCurrency: fromCurrency,\n        receiveCurrency: toCurrency,\n        calculatorMode: 'send' // Always send as 'send' mode for now\n      };\n\n      const response = await fetch(`${API_URL}/api/transfers/calculate`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(requestBody),\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({}));\n        throw new Error(errorData.message || 'Failed to calculate transfer');\n      }\n\n      const data: TransferCalculation = await response.json();\n      \n      // If we're in \"receive\" mode, we need to adjust the calculation\n      // to match the desired receive amount as closely as possible\n      if (mode === 'receive') {\n        const actualReceiveAmount = data.receiveAmount;\n        const targetReceiveAmount = numericAmount;\n        \n        if (Math.abs(actualReceiveAmount - targetReceiveAmount) > targetReceiveAmount * 0.05) {\n          // If we're off by more than 5%, try to adjust\n          const adjustmentFactor = targetReceiveAmount / actualReceiveAmount;\n          const adjustedSendAmount = Math.ceil(data.sendAmount * adjustmentFactor);\n          \n          // Make a second API call with the adjusted amount\n          const adjustedRequestBody = {\n            sendAmount: adjustedSendAmount,\n            sendCurrency: fromCurrency,\n            receiveCurrency: toCurrency,\n            calculatorMode: 'send'\n          };\n          \n          const adjustedResponse = await fetch(`${API_URL}/api/transfers/calculate`, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(adjustedRequestBody),\n          });\n          \n          if (adjustedResponse.ok) {\n            const adjustedData = await adjustedResponse.json();\n            setCalculation(adjustedData);\n            setLastUpdated(new Date());\n            return;\n          }\n        }\n      }\n      \n      setCalculation(data);\n      setLastUpdated(new Date());\n    } catch (err) {\n      console.error('Transfer calculation error:', err);\n      setError(err instanceof Error ? err.message : 'Failed to calculate transfer');\n      setCalculation(null);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Effect to calculate transfer when amount, mode, or currencies change\n  useEffect(() => {\n    // Calculate when amount or currencies change\n    if (debouncedInputAmount && debouncedInputAmount !== '0' && debouncedInputAmount !== '') {\n      calculateTransfer(debouncedInputAmount, debouncedCalculatorMode, debouncedSendCurrency, debouncedReceiveCurrency);\n    }\n  }, [debouncedInputAmount, debouncedCalculatorMode, debouncedSendCurrency, debouncedReceiveCurrency]);\n\n  // Handle amount input change\n  const handleAmountChange = (value: string) => {\n    const validationCurrency = calculatorMode === 'send' ? sendCurrency : receiveCurrency;\n    const formatted = formatNumberInput(value, validationCurrency);\n    setInputAmount(formatted);\n  };\n\n  // Handle calculator mode toggle\n  const handleModeToggle = () => {\n    const newMode = calculatorMode === 'send' ? 'receive' : 'send';\n    setCalculatorMode(newMode);\n    \n    // If we have a calculation, preserve the amount by switching to the opposite field\n    if (calculation) {\n      if (newMode === 'receive') {\n        // Switching to \"Recipient Gets\" mode, use the current receive amount\n        setInputAmount(calculation.receiveAmount.toString());\n      } else {\n        // Switching to \"You Send\" mode, use the current send amount\n        setInputAmount(calculation.sendAmount.toString());\n      }\n    }\n  };\n\n  // Handle continue button click\n  const handleContinue = () => {\n    if (calculation && onContinue) {\n      onContinue({\n        sendAmount: calculation.sendAmount,\n        receiveAmount: calculation.receiveAmount,\n        exchangeRate: calculation.exchangeRate,\n        fees: calculation.fees,\n        rateId: calculation.rateId,\n        calculatorMode: calculatorMode,\n      });\n    }\n  };\n\n  // Check if rate is about to expire (within 2 minutes)\n  const isRateExpiringSoon = calculation && calculation.rateValidUntil ? \n    new Date(calculation.rateValidUntil).getTime() - Date.now() < 2 * 60 * 1000 : false;\n\n  return (\n    <Card className=\"w-full max-w-lg mx-auto\">\n      <CardHeader className=\"text-center\">\n        <CardTitle className=\"flex items-center justify-center gap-2\">\n          <Calculator className=\"h-5 w-5\" />\n          Transfer Calculator\n        </CardTitle>\n        <p className=\"text-sm text-muted-foreground\">\n          Calculate how much your recipient will receive\n        </p>\n      </CardHeader>\n      <CardContent className=\"space-y-6\">\n        {/* Calculator Mode Switcher */}\n        <div className=\"flex items-center justify-center\">\n          <div className=\"bg-gray-100 rounded-lg p-1 flex\">\n            <button\n              onClick={handleModeToggle}\n              className={`px-4 py-2 rounded-md text-sm font-medium transition-all ${\n                calculatorMode === 'send'\n                  ? 'bg-white text-gray-900 shadow-sm'\n                  : 'text-gray-600 hover:text-gray-900'\n              }`}\n            >\n              <div className=\"flex items-center gap-2\">\n                <DollarSign className=\"h-4 w-4\" />\n                You Send\n              </div>\n            </button>\n            <button\n              onClick={handleModeToggle}\n              className={`px-4 py-2 rounded-md text-sm font-medium transition-all ${\n                calculatorMode === 'receive'\n                  ? 'bg-white text-gray-900 shadow-sm'\n                  : 'text-gray-600 hover:text-gray-900'\n              }`}\n            >\n              <div className=\"flex items-center gap-2\">\n                <Euro className=\"h-4 w-4\" />\n                Recipient Gets\n              </div>\n            </button>\n          </div>\n        </div>\n\n        {/* Input Amount and Currency */}\n        <div className=\"space-y-4\">\n          <div className=\"flex items-center justify-between\">\n            <Label className=\"flex items-center gap-2\">\n              {calculatorMode === 'send' ? (\n                <>\n                  <DollarSign className=\"h-4 w-4\" />\n                  You send\n                </>\n              ) : (\n                <>\n                  <Euro className=\"h-4 w-4\" />\n                  Recipient gets\n                </>\n              )}\n            </Label>\n          </div>\n          \n          <div className=\"flex gap-3\">\n            <div className=\"flex-1\">\n              <Input\n                id=\"input-amount\"\n                type=\"text\"\n                placeholder={\n                  calculatorMode === 'send'\n                    ? `Enter amount to send (${SUPPORTED_CURRENCIES[sendCurrency].decimalPlaces === 0 ? \"e.g. 1000\" : \"e.g. 100.00\"})`\n                    : `Enter amount recipient gets (${SUPPORTED_CURRENCIES[receiveCurrency].decimalPlaces === 0 ? \"e.g. 1000\" : \"e.g. 100.00\"})`\n                }\n                value={inputAmount}\n                onChange={(e) => handleAmountChange(e.target.value)}\n                className={`text-lg font-medium ${validationError ? 'border-red-500' : ''}`}\n              />\n            </div>\n            <div className=\"w-32\">\n              {calculatorMode === 'send' ? (\n                <Select value={sendCurrency} onValueChange={(value) => setSendCurrency(value as SendCurrency)}>\n                  <SelectTrigger className=\"h-10\">\n                    <SelectValue />\n                  </SelectTrigger>\n                  <SelectContent>\n                    {SEND_CURRENCIES.map((currency) => (\n                      <SelectItem key={currency} value={currency}>\n                        <div className=\"flex items-center gap-2\">\n                          <span>{SUPPORTED_CURRENCIES[currency].flag}</span>\n                          <span>{currency}</span>\n                        </div>\n                      </SelectItem>\n                    ))}\n                  </SelectContent>\n                </Select>\n              ) : (\n                <Select value={receiveCurrency} onValueChange={(value) => setReceiveCurrency(value as ReceiveCurrency)}>\n                  <SelectTrigger className=\"h-10\">\n                    <SelectValue />\n                  </SelectTrigger>\n                  <SelectContent>\n                    {RECEIVE_CURRENCIES.map((currency) => (\n                      <SelectItem key={currency} value={currency}>\n                        <div className=\"flex items-center gap-2\">\n                          <span>{SUPPORTED_CURRENCIES[currency].flag}</span>\n                          <span>{currency}</span>\n                        </div>\n                      </SelectItem>\n                    ))}\n                  </SelectContent>\n                </Select>\n              )}\n            </div>\n          </div>\n          \n          {validationError && (\n            <p className=\"text-sm text-red-500 flex items-center gap-1\">\n              <AlertCircle className=\"h-3 w-3\" />\n              {validationError}\n            </p>\n          )}\n        </div>\n\n        {/* Currency Exchange Arrow */}\n        <div className=\"flex justify-center\">\n          <div className=\"bg-gray-100 rounded-full p-2\">\n            <ArrowRightLeft className=\"h-4 w-4 text-gray-600\" />\n          </div>\n        </div>\n\n        {/* Output Amount and Currency */}\n        <div className=\"space-y-4\">\n          <div className=\"flex items-center justify-between\">\n            <Label className=\"flex items-center gap-2\">\n              {calculatorMode === 'send' ? (\n                <>\n                  <Euro className=\"h-4 w-4\" />\n                  Recipient gets\n                </>\n              ) : (\n                <>\n                  <DollarSign className=\"h-4 w-4\" />\n                  You send\n                </>\n              )}\n            </Label>\n          </div>\n          \n          <div className=\"flex gap-3\">\n            <div className=\"flex-1\">\n              <div className=\"h-10 px-3 py-2 border border-input bg-gray-50 rounded-md flex items-center text-lg font-medium text-muted-foreground\">\n                {calculation ? (\n                  calculatorMode === 'send' \n                    ? formatCurrency(calculation.receiveAmount, receiveCurrency)\n                    : formatCurrency(calculation.sendAmount, sendCurrency)\n                ) : (\n                  <span className=\"text-sm\">\n                    {calculatorMode === 'send' \n                      ? 'Amount recipient will receive'\n                      : 'Amount you need to send'\n                    }\n                  </span>\n                )}\n              </div>\n            </div>\n            <div className=\"w-32\">\n              {calculatorMode === 'send' ? (\n                <Select value={receiveCurrency} onValueChange={(value) => setReceiveCurrency(value as ReceiveCurrency)}>\n                  <SelectTrigger className=\"h-10\">\n                    <SelectValue />\n                  </SelectTrigger>\n                  <SelectContent>\n                    {RECEIVE_CURRENCIES.map((currency) => (\n                      <SelectItem key={currency} value={currency}>\n                        <div className=\"flex items-center gap-2\">\n                          <span>{SUPPORTED_CURRENCIES[currency].flag}</span>\n                          <span>{currency}</span>\n                        </div>\n                      </SelectItem>\n                    ))}\n                  </SelectContent>\n                </Select>\n              ) : (\n                <Select value={sendCurrency} onValueChange={(value) => setSendCurrency(value as SendCurrency)}>\n                  <SelectTrigger className=\"h-10\">\n                    <SelectValue />\n                  </SelectTrigger>\n                  <SelectContent>\n                    {SEND_CURRENCIES.map((currency) => (\n                      <SelectItem key={currency} value={currency}>\n                        <div className=\"flex items-center gap-2\">\n                          <span>{SUPPORTED_CURRENCIES[currency].flag}</span>\n                          <span>{currency}</span>\n                        </div>\n                      </SelectItem>\n                    ))}\n                  </SelectContent>\n                </Select>\n              )}\n            </div>\n          </div>\n        </div>\n\n        {/* Empty State Guidance */}\n        {!inputAmount && !isLoading && !error && (\n          <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4\">\n            <div className=\"flex items-center gap-2 text-blue-700 mb-2\">\n              <Calculator className=\"h-4 w-4\" />\n              <span className=\"font-medium\">Get Started</span>\n            </div>\n            <p className=\"text-sm text-blue-600 mb-3\">\n              Enter an amount above to see how much your recipient will receive and the total cost including fees.\n            </p>\n            <div className=\"space-y-2 text-xs text-blue-600\">\n              <div className=\"flex items-center gap-2\">\n                <span className=\"w-2 h-2 bg-blue-400 rounded-full\"></span>\n                <span>Real-time exchange rates</span>\n              </div>\n              <div className=\"flex items-center gap-2\">\n                <span className=\"w-2 h-2 bg-blue-400 rounded-full\"></span>\n                <span>Transparent fee breakdown</span>\n              </div>\n              <div className=\"flex items-center gap-2\">\n                <span className=\"w-2 h-2 bg-blue-400 rounded-full\"></span>\n                <span>Fast international transfers</span>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Calculation Results */}\n        {isLoading && (\n          <div className=\"flex items-center justify-center py-8\">\n            <RefreshCw className=\"h-6 w-6 animate-spin text-muted-foreground\" />\n            <span className=\"ml-2 text-muted-foreground\">Calculating...</span>\n          </div>\n        )}\n\n        {error && (\n          <div className=\"bg-red-50 border border-red-200 rounded-lg p-4\">\n            <div className=\"flex items-center gap-2 text-red-700\">\n              <AlertCircle className=\"h-4 w-4\" />\n              <span className=\"font-medium\">Calculation Error</span>\n            </div>\n            <p className=\"text-sm text-red-600 mt-1\">{error}</p>\n          </div>\n        )}\n\n        {calculation && !isLoading && !error && (\n          <div className=\"space-y-4\">\n            {/* Recipient Amount */}\n            <div className=\"bg-green-50 border border-green-200 rounded-lg p-4\">\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center gap-2\">\n                  <span className=\"text-lg\">{SUPPORTED_CURRENCIES[receiveCurrency].flag}</span>\n                  <span className=\"text-sm font-medium text-green-700\">Recipient gets</span>\n                </div>\n                <div className=\"text-right\">\n                  <div className=\"text-2xl font-bold text-green-700\">\n                    {formatCurrency(calculation.receiveAmount, receiveCurrency)}\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* Exchange Rate Info */}\n            <div className=\"space-y-3 pt-2 border-t\">\n              <div className=\"flex justify-between items-center\">\n                <span className=\"text-sm text-muted-foreground\">Exchange rate</span>\n                <div className=\"text-right\">\n                  <div className=\"text-sm font-medium\">\n                    1 {sendCurrency} = {calculation.exchangeRate.toFixed(SUPPORTED_CURRENCIES[receiveCurrency].decimalPlaces === 0 ? 0 : 4)} {receiveCurrency}\n                  </div>\n                  {isRateExpiringSoon && (\n                    <div className=\"text-xs text-amber-600 flex items-center gap-1\">\n                      <AlertCircle className=\"h-3 w-3\" />\n                      Rate expires soon\n                    </div>\n                  )}\n                </div>\n              </div>\n\n              <div className=\"flex justify-between items-center\">\n                <span className=\"text-sm text-muted-foreground\">Total fees</span>\n                <span className=\"text-sm font-medium\">\n                  {formatCurrency(calculation.fees, sendCurrency)}\n                </span>\n              </div>\n\n              {/* Fee Breakdown */}\n              <div className=\"space-y-1 pl-4 border-l-2 border-gray-100\">\n                <div className=\"flex justify-between text-xs text-muted-foreground\">\n                  <span>Card processing</span>\n                  <span>{formatCurrency(calculation.breakdown.fees.cardProcessing, sendCurrency)}</span>\n                </div>\n                <div className=\"flex justify-between text-xs text-muted-foreground\">\n                  <span>Transfer fee</span>\n                  <span>{formatCurrency(calculation.breakdown.fees.transfer, sendCurrency)}</span>\n                </div>\n                <div className=\"flex justify-between text-xs text-muted-foreground\">\n                  <span>Payout fee</span>\n                  <span>{formatCurrency(calculation.breakdown.fees.payout, sendCurrency)}</span>\n                </div>\n              </div>\n\n              <div className=\"flex justify-between items-center pt-2 border-t\">\n                <span className=\"text-sm font-medium\">Total to pay</span>\n                <span className=\"text-lg font-bold\">\n                  {formatCurrency(calculation.sendAmount + calculation.fees, sendCurrency)}\n                </span>\n              </div>\n\n              <div className=\"flex justify-between items-center text-xs text-muted-foreground\">\n                <span>Estimated arrival</span>\n                <span>{new Date(calculation.estimatedArrival).toLocaleString()}</span>\n              </div>\n            </div>\n\n            {/* Last Updated */}\n            {lastUpdated && (\n              <div className=\"text-xs text-muted-foreground text-center\">\n                Last updated: {lastUpdated.toLocaleTimeString()}\n              </div>\n            )}\n\n            {/* Continue Button */}\n            {onContinue && (\n              <Button \n                onClick={handleContinue}\n                disabled={isNavigating}\n                className=\"w-full bg-primary hover:bg-primary/90 text-primary-foreground font-semibold shadow-lg\"\n                size=\"lg\"\n              >\n                {isNavigating ? (\n                  <>\n                    <RefreshCw className=\"h-4 w-4 animate-spin mr-2\" />\n                    Processing...\n                  </>\n                ) : (\n                  'Continue with this rate'\n                )}\n              </Button>\n            )}\n          </div>\n        )}\n      </CardContent>\n    </Card>\n  );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1857, "column": 0}, "map": {"version":3,"sources":["file:///home/faros/stealth-money/packages/web/src/components/features/RecipientForm.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from \"react\";\nimport { useRouter } from \"next/navigation\";\nimport { z } from \"zod\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardFooter, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { ArrowLeft, ArrowRight, User, Mail, Phone, CreditCard } from \"lucide-react\";\n\n// Form validation schema\nconst recipientSchema = z.object({\n  recipientName: z.string().min(2, \"Name must be at least 2 characters\"),\n  recipientEmail: z.string().email(\"Please enter a valid email address\"),\n  recipientPhone: z.string().min(10, \"Please enter a valid phone number\"),\n  payoutMethod: z.enum(['bank_account', 'mobile_wallet', 'cash_pickup', 'debit_card'], {\n    message: \"Please select a payout method\"\n  }),\n  payoutDetails: z.object({\n    bankName: z.string().optional(),\n    accountNumber: z.string().optional(),\n    routingNumber: z.string().optional(),\n    walletProvider: z.string().optional(),\n    walletNumber: z.string().optional(),\n    pickupLocation: z.string().optional(),\n  }).optional(),\n});\n\ninterface RecipientFormProps {\n  transferData: {\n    amount: number;\n    sourceCurrency: string;\n    destCurrency: string;\n    rate: number;\n    recipientAmount: number;\n  };\n  onBack: () => void;\n  onContinue?: (recipientData: {\n    name: string;\n    email: string;\n    bankAccount: {\n      iban: string;\n      bic: string;\n      bankName: string;\n      accountHolderName: string;\n      country: 'DE';\n    };\n  }) => void;\n}\n\nexport function RecipientForm({ transferData, onBack, onContinue }: RecipientFormProps) {\n  const router = useRouter();\n  \n  // Form state\n  const [recipientName, setRecipientName] = useState('');\n  const [recipientEmail, setRecipientEmail] = useState('');\n  const [recipientPhone, setRecipientPhone] = useState('');\n  const [payoutMethod, setPayoutMethod] = useState<string>('');\n  \n  // Payout details state\n  const [bankName, setBankName] = useState('');\n  const [accountNumber, setAccountNumber] = useState('');\n  const [routingNumber, setRoutingNumber] = useState('');\n  const [walletProvider, setWalletProvider] = useState('');\n  const [walletNumber, setWalletNumber] = useState('');\n  const [pickupLocation, setPickupLocation] = useState('');\n  \n  // UI state\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [validationErrors, setValidationErrors] = useState<Record<string, string>>({});\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    // Clear previous errors\n    setValidationErrors({});\n    setError(null);\n\n    // For now, we'll simplify to only support bank account transfers to match the design\n    // This aligns with the current PaymentForm which expects IBAN/BIC format\n    if (payoutMethod !== 'bank_account') {\n      setError('Currently only bank account transfers are supported. Please select bank account.');\n      return;\n    }\n\n    // Validate required fields for bank account\n    if (!recipientName || !recipientEmail || !bankName || !accountNumber || !routingNumber) {\n      setError('Please fill in all required fields for bank account transfer.');\n      return;\n    }\n\n    // If onContinue callback is provided, use the new flow\n    if (onContinue) {\n      setIsLoading(true);\n      \n      try {\n        // For the new flow, we need to format the data to match the expected RecipientInfo interface\n        // Convert the generic bank account fields to IBAN/BIC format\n        // This is a temporary mapping until we support multiple bank account types\n        const recipientData = {\n          name: recipientName,\n          email: recipientEmail,\n          bankAccount: {\n            iban: accountNumber, // Temporary mapping\n            bic: routingNumber, // Temporary mapping\n            bankName: bankName,\n            accountHolderName: recipientName,\n            country: 'DE' as const,\n          }\n        };\n        \n        onContinue(recipientData);\n      } catch (err) {\n        setError('Failed to process recipient information. Please try again.');\n        console.error('Recipient processing error:', err);\n      } finally {\n        setIsLoading(false);\n      }\n      return;\n    }\n\n    // Legacy flow - keep for backward compatibility\n    const formData = {\n      recipientName,\n      recipientEmail,\n      recipientPhone,\n      payoutMethod: payoutMethod as 'bank_account' | 'mobile_wallet' | 'cash_pickup' | 'debit_card',\n      payoutDetails: {\n        bankName: bankName || undefined,\n        accountNumber: accountNumber || undefined,\n        routingNumber: routingNumber || undefined,\n        walletProvider: walletProvider || undefined,\n        walletNumber: walletNumber || undefined,\n        pickupLocation: pickupLocation || undefined,\n      }\n    };\n\n    // Validate form data\n    try {\n      recipientSchema.parse(formData);\n    } catch (err) {\n      if (err instanceof z.ZodError) {\n        const errors: Record<string, string> = {};\n        err.issues.forEach((error) => {\n          if (error.path[0]) {\n            errors[error.path[0] as string] = error.message;\n          }\n        });\n        setValidationErrors(errors);\n        return;\n      }\n    }\n\n    setIsLoading(true);\n\n    try {\n      // Create transfer with recipient information\n      const response = await fetch(`${process.env.NEXT_PUBLIC_API_URL || 'http://localhost:4000'}/api/transfers`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          amount: transferData.amount,\n          sourceCurrency: transferData.sourceCurrency,\n          destCurrency: transferData.destCurrency,\n          recipientName,\n          recipientEmail,\n          recipientPhone,\n          payoutMethod,\n          payoutDetails: formData.payoutDetails,\n        }),\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to create transfer');\n      }\n\n      const result = await response.json();\n      \n      // Redirect to payment page with transaction data\n      router.push(`/pay/${result.transactionId}?clientSecret=${result.clientSecret}`);\n      \n    } catch (err) {\n      setError('Failed to create transfer. Please try again.');\n      console.error('Transfer creation error:', err);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const renderPayoutDetails = () => {\n    switch (payoutMethod) {\n      case 'bank_account':\n        return (\n          <div className=\"space-y-4\">\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"bank-name\">Bank Name</Label>\n              <Input\n                id=\"bank-name\"\n                placeholder=\"e.g., Chase Bank\"\n                value={bankName}\n                onChange={(e) => setBankName(e.target.value)}\n              />\n            </div>\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"account-number\">Account Number</Label>\n              <Input\n                id=\"account-number\"\n                placeholder=\"Account number\"\n                value={accountNumber}\n                onChange={(e) => setAccountNumber(e.target.value)}\n              />\n            </div>\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"routing-number\">Routing Number</Label>\n              <Input\n                id=\"routing-number\"\n                placeholder=\"Routing number\"\n                value={routingNumber}\n                onChange={(e) => setRoutingNumber(e.target.value)}\n              />\n            </div>\n          </div>\n        );\n      \n      case 'mobile_wallet':\n        return (\n          <div className=\"space-y-4\">\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"wallet-provider\">Wallet Provider</Label>\n              <Select value={walletProvider} onValueChange={setWalletProvider}>\n                <SelectTrigger>\n                  <SelectValue placeholder=\"Select wallet provider\" />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"paypal\">PayPal</SelectItem>\n                  <SelectItem value=\"venmo\">Venmo</SelectItem>\n                  <SelectItem value=\"cashapp\">Cash App</SelectItem>\n                  <SelectItem value=\"zelle\">Zelle</SelectItem>\n                  <SelectItem value=\"pix\">PIX (Brazil)</SelectItem>\n                  <SelectItem value=\"paym\">Paym (UK)</SelectItem>\n                </SelectContent>\n              </Select>\n            </div>\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"wallet-number\">Wallet ID / Phone Number</Label>\n              <Input\n                id=\"wallet-number\"\n                placeholder=\"Wallet ID or phone number\"\n                value={walletNumber}\n                onChange={(e) => setWalletNumber(e.target.value)}\n              />\n            </div>\n          </div>\n        );\n      \n      case 'cash_pickup':\n        return (\n          <div className=\"space-y-4\">\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"pickup-location\">Pickup Location</Label>\n              <Select value={pickupLocation} onValueChange={setPickupLocation}>\n                <SelectTrigger>\n                  <SelectValue placeholder=\"Select pickup location\" />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"western_union\">Western Union</SelectItem>\n                  <SelectItem value=\"moneygram\">MoneyGram</SelectItem>\n                  <SelectItem value=\"ria\">Ria Money Transfer</SelectItem>\n                  <SelectItem value=\"remitly\">Remitly</SelectItem>\n                  <SelectItem value=\"worldremit\">WorldRemit</SelectItem>\n                </SelectContent>\n              </Select>\n            </div>\n            <div className=\"bg-blue-50 p-3 rounded-lg\">\n              <p className=\"text-sm text-blue-700\">\n                The recipient will receive a pickup code via SMS and can collect cash at any {pickupLocation?.replace('_', ' ')} location.\n              </p>\n            </div>\n          </div>\n        );\n      \n      case 'debit_card':\n        return (\n          <div className=\"bg-green-50 p-3 rounded-lg\">\n            <p className=\"text-sm text-green-700\">\n              Funds will be sent directly to the recipient&apos;s debit card. No additional details required.\n            </p>\n          </div>\n        );\n      \n      default:\n        return null;\n    }\n  };\n\n  return (\n    <Card className=\"w-full max-w-2xl mx-auto\">\n      <CardHeader>\n        <CardTitle className=\"flex items-center space-x-2\">\n          <User className=\"h-5 w-5\" />\n          <span>Recipient Information</span>\n        </CardTitle>\n        <p className=\"text-sm text-gray-600\">\n          Who are you sending {transferData.amount} {transferData.sourceCurrency} to?\n        </p>\n      </CardHeader>\n      \n      <form onSubmit={handleSubmit}>\n        <CardContent className=\"space-y-6\">\n          {/* Transfer Summary */}\n          <div className=\"bg-gray-50 p-4 rounded-lg\">\n            <h3 className=\"font-semibold mb-2\">Transfer Summary</h3>\n            <div className=\"grid grid-cols-2 gap-4 text-sm\">\n              <div className=\"flex justify-between\">\n                <span className=\"text-gray-600\">You Send:</span>\n                <span className=\"font-medium\">{transferData.amount} {transferData.sourceCurrency}</span>\n              </div>\n              <div className=\"flex justify-between\">\n                <span className=\"text-gray-600\">They Receive:</span>\n                <span className=\"font-medium\">{transferData.recipientAmount} {transferData.destCurrency}</span>\n              </div>\n              <div className=\"flex justify-between col-span-2\">\n                <span className=\"text-gray-600\">Exchange Rate:</span>\n                <span className=\"font-medium\">1 {transferData.sourceCurrency} = {transferData.rate.toFixed(4)} {transferData.destCurrency}</span>\n              </div>\n            </div>\n          </div>\n\n          {/* Recipient Details */}\n          <div className=\"space-y-4\">\n            <h3 className=\"font-semibold\">Recipient Details</h3>\n            \n            <div className=\"space-y-2\">\n              <Label htmlFor=\"recipient-name\">Full Name *</Label>\n              <div className=\"relative\">\n                <User className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400\" />\n                <Input\n                  id=\"recipient-name\"\n                  placeholder=\"Enter recipient's full name\"\n                  className=\"pl-10\"\n                  value={recipientName}\n                  onChange={(e) => setRecipientName(e.target.value)}\n                />\n              </div>\n              {validationErrors.recipientName && (\n                <p className=\"text-sm text-red-600\">{validationErrors.recipientName}</p>\n              )}\n            </div>\n\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"recipient-email\">Email Address *</Label>\n              <div className=\"relative\">\n                <Mail className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400\" />\n                <Input\n                  id=\"recipient-email\"\n                  type=\"email\"\n                  placeholder=\"recipient@example.com\"\n                  className=\"pl-10\"\n                  value={recipientEmail}\n                  onChange={(e) => setRecipientEmail(e.target.value)}\n                />\n              </div>\n              {validationErrors.recipientEmail && (\n                <p className=\"text-sm text-red-600\">{validationErrors.recipientEmail}</p>\n              )}\n            </div>\n\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"recipient-phone\">Phone Number *</Label>\n              <div className=\"relative\">\n                <Phone className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400\" />\n                <Input\n                  id=\"recipient-phone\"\n                  type=\"tel\"\n                  placeholder=\"+1 (555) 123-4567\"\n                  className=\"pl-10\"\n                  value={recipientPhone}\n                  onChange={(e) => setRecipientPhone(e.target.value)}\n                />\n              </div>\n              {validationErrors.recipientPhone && (\n                <p className=\"text-sm text-red-600\">{validationErrors.recipientPhone}</p>\n              )}\n            </div>\n          </div>\n\n          {/* Payout Method */}\n          <div className=\"space-y-4\">\n            <h3 className=\"font-semibold\">How should they receive the money?</h3>\n            \n            <div className=\"space-y-2\">\n              <Label htmlFor=\"payout-method\">Payout Method *</Label>\n              <Select value={payoutMethod} onValueChange={setPayoutMethod}>\n                <SelectTrigger>\n                  <SelectValue placeholder=\"Select payout method\" />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"bank_account\">\n                    <div className=\"flex items-center space-x-2\">\n                      <CreditCard className=\"h-4 w-4\" />\n                      <span>Bank Account</span>\n                    </div>\n                  </SelectItem>\n                  <SelectItem value=\"mobile_wallet\">\n                    <div className=\"flex items-center space-x-2\">\n                      <Phone className=\"h-4 w-4\" />\n                      <span>Mobile Wallet</span>\n                    </div>\n                  </SelectItem>\n                  <SelectItem value=\"cash_pickup\">\n                    <div className=\"flex items-center space-x-2\">\n                      <User className=\"h-4 w-4\" />\n                      <span>Cash Pickup</span>\n                    </div>\n                  </SelectItem>\n                  <SelectItem value=\"debit_card\">\n                    <div className=\"flex items-center space-x-2\">\n                      <CreditCard className=\"h-4 w-4\" />\n                      <span>Debit Card</span>\n                    </div>\n                  </SelectItem>\n                </SelectContent>\n              </Select>\n              {validationErrors.payoutMethod && (\n                <p className=\"text-sm text-red-600\">{validationErrors.payoutMethod}</p>\n              )}\n            </div>\n\n            {/* Payout Details */}\n            {payoutMethod && (\n              <div className=\"space-y-4\">\n                <h4 className=\"font-medium\">Payout Details</h4>\n                {renderPayoutDetails()}\n              </div>\n            )}\n          </div>\n\n          {/* Error Message */}\n          {error && (\n            <div className=\"text-sm text-red-600 bg-red-50 p-3 rounded-lg border border-red-200\">\n              {error}\n            </div>\n          )}\n        </CardContent>\n\n        <CardFooter className=\"flex justify-between\">\n          <Button\n            type=\"button\"\n            variant=\"outline\"\n            onClick={onBack}\n            disabled={isLoading}\n          >\n            <ArrowLeft className=\"mr-2 h-4 w-4\" />\n            Back\n          </Button>\n          \n          <Button\n            type=\"submit\"\n            disabled={isLoading || !recipientName || !recipientEmail || !recipientPhone || !payoutMethod}\n          >\n            {isLoading ? (\n              \"Creating Transfer...\"\n            ) : (\n              <>\n                Continue to Payment\n                <ArrowRight className=\"ml-2 h-4 w-4\" />\n              </>\n            )}\n          </Button>\n        </CardFooter>\n      </form>\n    </Card>\n  );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3032, "column": 0}, "map": {"version":3,"sources":["file:///home/faros/stealth-money/packages/web/src/components/features/PaymentForm.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from \"react\";\nimport { z } from \"zod\";\nimport { CreditCard, User, Building, MapPin, Loader2, Shield, AlertCircle, ArrowLeft, CheckCircle, Mail, Phone } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Badge } from \"@/components/ui/badge\";\n\n// Validation schemas\nconst cardDetailsSchema = z.object({\n  number: z.string().min(13, 'Card number must be at least 13 digits').max(19, 'Card number cannot exceed 19 digits'),\n  expiryMonth: z.number().min(1, 'Invalid month').max(12, 'Invalid month'),\n  expiryYear: z.number().min(new Date().getFullYear(), 'Card has expired').max(new Date().getFullYear() + 20, 'Invalid year'),\n  cvv: z.string().min(3, 'CVV must be at least 3 digits').max(4, 'CVV cannot exceed 4 digits')\n});\n\nconst userToUserPaymentFormSchema = z.object({\n  cardDetails: cardDetailsSchema\n});\n\n// Types for user-to-user transfers\ninterface CardDetails {\n  number: string;\n  expiryMonth: number;\n  expiryYear: number;\n  cvv: string;\n}\n\ninterface UserProfile {\n  id: string;\n  email: string;\n  username?: string;\n  phone?: string;\n  firstName?: string;\n  lastName?: string;\n  fullName: string;\n  profileImageUrl?: string;\n  isVerified: boolean;\n  supportedCurrencies: string[];\n}\n\ninterface VerifiedPaymentMethod {\n  id: string;\n  type: 'bank_account' | 'mobile_wallet' | 'debit_card';\n  currency: string;\n  bankName?: string;\n  accountType?: string;\n  lastFourDigits?: string;\n  isDefault: boolean;\n  verifiedAt: string;\n  country: string;\n}\n\ninterface TransferCalculationData {\n  sendAmount: number;\n  receiveAmount: number;\n  sendCurrency: string;\n  receiveCurrency: string;\n  exchangeRate: number;\n  fees: number;\n  rateId: string;\n  rateValidUntil: string;\n  calculatorMode: 'send' | 'receive';\n  breakdown: {\n    sendAmountUSD: number;\n    fees: {\n      cardProcessing: number;\n      transfer: number;\n      payout: number;\n      total: number;\n    };\n    netAmountUSD: number;\n    exchangeRate: number;\n    receiveAmount: number;\n  };\n  estimatedArrival: string;\n}\n\ninterface UserToUserPaymentData {\n  cardDetails: CardDetails;\n}\n\n// Legacy interface for backward compatibility\ninterface RecipientInfo {\n  name: string;\n  email: string;\n  bankAccount: {\n    iban: string;\n    bic: string;\n    bankName: string;\n    accountHolderName: string;\n    country: 'DE';\n  };\n}\n\ninterface PaymentData {\n  cardDetails: CardDetails;\n  recipientInfo: RecipientInfo;\n}\n\n// Enhanced props for user-to-user transfers\ninterface EnhancedPaymentFormProps {\n  transferData: TransferCalculationData;\n  recipientUser: UserProfile;\n  selectedPaymentMethod: VerifiedPaymentMethod;\n  onSuccess: (transferId: string) => void;\n  onBack: () => void;\n  onError: (error: string) => void;\n  isLoading?: boolean;\n}\n\n// Legacy props for backward compatibility\ninterface PaymentFormProps {\n  sendAmount: number;\n  receiveAmount: number;\n  exchangeRate: number;\n  fees: number;\n  rateId: string;\n  onSubmit: (data: PaymentData) => void;\n  isLoading?: boolean;\n}\n\nexport function PaymentForm({ \n  sendAmount, \n  receiveAmount, \n  exchangeRate, \n  fees, \n  rateId,\n  onSubmit,\n  isLoading = false\n}: PaymentFormProps) {\n  // Form state\n  const [cardDetails, setCardDetails] = useState<CardDetails>({\n    number: '',\n    expiryMonth: 1,\n    expiryYear: new Date().getFullYear(),\n    cvv: ''\n  });\n\n  const [recipientInfo, setRecipientInfo] = useState<RecipientInfo>({\n    name: '',\n    email: '',\n    bankAccount: {\n      iban: '',\n      bic: '',\n      bankName: '',\n      accountHolderName: '',\n      country: 'DE'\n    }\n  });\n\n  const [validationErrors, setValidationErrors] = useState<Record<string, string>>({});\n  const [isProcessing, setIsProcessing] = useState(false);\n\n  // Format card number with spaces\n  const formatCardNumber = (value: string) => {\n    const cleaned = value.replace(/\\s/g, '').replace(/[^0-9]/gi, '');\n    const matches = cleaned.match(/\\d{4,16}/g);\n    const match = matches && matches[0] || '';\n    const parts = [];\n    for (let i = 0, len = match.length; i < len; i += 4) {\n      parts.push(match.substring(i, i + 4));\n    }\n    if (parts.length) {\n      return parts.join(' ');\n    } else {\n      return cleaned;\n    }\n  };\n\n  // Format IBAN with spaces\n  const formatIBAN = (value: string) => {\n    const cleaned = value.replace(/\\s/g, '').toUpperCase();\n    return cleaned.replace(/(.{4})/g, '$1 ').trim();\n  };\n\n  // Handle card details change\n  const handleCardDetailsChange = (field: keyof CardDetails, value: string | number) => {\n    setCardDetails(prev => ({\n      ...prev,\n      [field]: value\n    }));\n    \n    // Clear validation error for this field\n    if (validationErrors[`cardDetails.${field}`]) {\n      setValidationErrors(prev => {\n        const newErrors = { ...prev };\n        delete newErrors[`cardDetails.${field}`];\n        return newErrors;\n      });\n    }\n  };\n\n  // Handle recipient info change\n  const handleRecipientInfoChange = (field: string, value: string) => {\n    if (field.startsWith('bankAccount.')) {\n      const bankField = field.replace('bankAccount.', '');\n      setRecipientInfo(prev => ({\n        ...prev,\n        bankAccount: {\n          ...prev.bankAccount,\n          [bankField]: value\n        }\n      }));\n    } else {\n      setRecipientInfo(prev => ({\n        ...prev,\n        [field]: value\n      }));\n    }\n    \n    // Clear validation error for this field\n    if (validationErrors[`recipientInfo.${field}`]) {\n      setValidationErrors(prev => {\n        const newErrors = { ...prev };\n        delete newErrors[`recipientInfo.${field}`];\n        return newErrors;\n      });\n    }\n  };\n\n  // Handle form submission\n  const handleSubmit = async (event: React.FormEvent) => {\n    event.preventDefault();\n    \n    setValidationErrors({});\n    setIsProcessing(true);\n\n    try {\n      // Validate form data\n      const formData = {\n        cardDetails: {\n          ...cardDetails,\n          number: cardDetails.number.replace(/\\s/g, '') // Remove spaces for validation\n        },\n        recipientInfo: {\n          ...recipientInfo,\n          bankAccount: {\n            ...recipientInfo.bankAccount,\n            iban: recipientInfo.bankAccount.iban.replace(/\\s/g, '') // Remove spaces for validation\n          }\n        }\n      };\n\n      // For legacy form, validate both card details and recipient info\n      const legacyPaymentFormSchema = z.object({\n        cardDetails: cardDetailsSchema,\n        recipientInfo: z.object({\n          name: z.string().min(2, 'Name must be at least 2 characters').max(100, 'Name cannot exceed 100 characters'),\n          email: z.string().email('Invalid email address'),\n          bankAccount: z.object({\n            iban: z.string().min(15, 'IBAN must be at least 15 characters').max(34, 'IBAN cannot exceed 34 characters'),\n            bic: z.string().min(8, 'BIC must be at least 8 characters').max(11, 'BIC cannot exceed 11 characters'),\n            bankName: z.string().min(2, 'Bank name must be at least 2 characters').max(100, 'Bank name cannot exceed 100 characters'),\n            accountHolderName: z.string().min(2, 'Account holder name must be at least 2 characters').max(100, 'Account holder name cannot exceed 100 characters'),\n            country: z.literal('DE').refine(() => true, { message: 'Only German bank accounts are supported' })\n          })\n        })\n      });\n\n      legacyPaymentFormSchema.parse(formData);\n\n      // Call onSubmit with validated data\n      onSubmit(formData);\n    } catch (err) {\n      if (err instanceof z.ZodError) {\n        const errors: Record<string, string> = {};\n        err.issues.forEach((error) => {\n          const path = error.path.join('.');\n          errors[path] = error.message;\n        });\n        setValidationErrors(errors);\n      }\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n\n  const totalAmount = sendAmount + fees;\n\n  return (\n    <Card className=\"w-full max-w-2xl mx-auto\">\n      <CardHeader>\n        <CardTitle className=\"flex items-center gap-2\">\n          <CreditCard className=\"h-5 w-5\" />\n          Complete Your Transfer\n        </CardTitle>\n        <div className=\"text-sm text-muted-foreground\">\n          <div className=\"flex justify-between\">\n            <span>You send:</span>\n            <span className=\"font-medium\">${sendAmount.toFixed(2)} USD</span>\n          </div>\n          <div className=\"flex justify-between\">\n            <span>Fees:</span>\n            <span className=\"font-medium\">${fees.toFixed(2)} USD</span>\n          </div>\n          <div className=\"flex justify-between border-t pt-1 mt-1\">\n            <span>Total to pay:</span>\n            <span className=\"font-bold\">${totalAmount.toFixed(2)} USD</span>\n          </div>\n          <div className=\"flex justify-between text-green-600\">\n            <span>Recipient gets:</span>\n            <span className=\"font-bold\">€{receiveAmount.toFixed(2)} EUR</span>\n          </div>\n        </div>\n      </CardHeader>\n      <CardContent>\n        <form onSubmit={handleSubmit} className=\"space-y-8\">\n          {/* Card Details Section */}\n          <div className=\"space-y-4\">\n            <div className=\"flex items-center gap-2 mb-4\">\n              <CreditCard className=\"h-4 w-4\" />\n              <h3 className=\"font-semibold\">Payment Details</h3>\n            </div>\n            \n            <div className=\"grid grid-cols-1 gap-4\">\n              <div>\n                <Label htmlFor=\"card-number\">Card Number</Label>\n                <Input\n                  id=\"card-number\"\n                  type=\"text\"\n                  placeholder=\"1234 5678 9012 3456\"\n                  value={formatCardNumber(cardDetails.number)}\n                  onChange={(e) => handleCardDetailsChange('number', e.target.value.replace(/\\s/g, ''))}\n                  className={validationErrors['cardDetails.number'] ? 'border-red-500' : ''}\n                  maxLength={19}\n                />\n                {validationErrors['cardDetails.number'] && (\n                  <p className=\"text-sm text-red-500 mt-1 flex items-center gap-1\">\n                    <AlertCircle className=\"h-3 w-3\" />\n                    {validationErrors['cardDetails.number']}\n                  </p>\n                )}\n              </div>\n\n              <div className=\"grid grid-cols-3 gap-4\">\n                <div>\n                  <Label htmlFor=\"expiry-month\">Month</Label>\n                  <Input\n                    id=\"expiry-month\"\n                    type=\"number\"\n                    placeholder=\"MM\"\n                    min=\"1\"\n                    max=\"12\"\n                    value={cardDetails.expiryMonth}\n                    onChange={(e) => handleCardDetailsChange('expiryMonth', parseInt(e.target.value) || 1)}\n                    className={validationErrors['cardDetails.expiryMonth'] ? 'border-red-500' : ''}\n                  />\n                  {validationErrors['cardDetails.expiryMonth'] && (\n                    <p className=\"text-sm text-red-500 mt-1\">{validationErrors['cardDetails.expiryMonth']}</p>\n                  )}\n                </div>\n\n                <div>\n                  <Label htmlFor=\"expiry-year\">Year</Label>\n                  <Input\n                    id=\"expiry-year\"\n                    type=\"number\"\n                    placeholder=\"YYYY\"\n                    min={new Date().getFullYear()}\n                    max={new Date().getFullYear() + 20}\n                    value={cardDetails.expiryYear}\n                    onChange={(e) => handleCardDetailsChange('expiryYear', parseInt(e.target.value) || new Date().getFullYear())}\n                    className={validationErrors['cardDetails.expiryYear'] ? 'border-red-500' : ''}\n                  />\n                  {validationErrors['cardDetails.expiryYear'] && (\n                    <p className=\"text-sm text-red-500 mt-1\">{validationErrors['cardDetails.expiryYear']}</p>\n                  )}\n                </div>\n\n                <div>\n                  <Label htmlFor=\"cvv\">CVV</Label>\n                  <Input\n                    id=\"cvv\"\n                    type=\"text\"\n                    placeholder=\"123\"\n                    maxLength={4}\n                    value={cardDetails.cvv}\n                    onChange={(e) => handleCardDetailsChange('cvv', e.target.value.replace(/[^0-9]/g, ''))}\n                    className={validationErrors['cardDetails.cvv'] ? 'border-red-500' : ''}\n                  />\n                  {validationErrors['cardDetails.cvv'] && (\n                    <p className=\"text-sm text-red-500 mt-1\">{validationErrors['cardDetails.cvv']}</p>\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Recipient Information Section */}\n          <div className=\"space-y-4\">\n            <div className=\"flex items-center gap-2 mb-4\">\n              <User className=\"h-4 w-4\" />\n              <h3 className=\"font-semibold\">Recipient Information</h3>\n            </div>\n\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              <div>\n                <Label htmlFor=\"recipient-name\">Full Name</Label>\n                <Input\n                  id=\"recipient-name\"\n                  type=\"text\"\n                  placeholder=\"John Doe\"\n                  value={recipientInfo.name}\n                  onChange={(e) => handleRecipientInfoChange('name', e.target.value)}\n                  className={validationErrors['recipientInfo.name'] ? 'border-red-500' : ''}\n                />\n                {validationErrors['recipientInfo.name'] && (\n                  <p className=\"text-sm text-red-500 mt-1\">{validationErrors['recipientInfo.name']}</p>\n                )}\n              </div>\n\n              <div>\n                <Label htmlFor=\"recipient-email\">Email Address</Label>\n                <Input\n                  id=\"recipient-email\"\n                  type=\"email\"\n                  placeholder=\"john@example.com\"\n                  value={recipientInfo.email}\n                  onChange={(e) => handleRecipientInfoChange('email', e.target.value)}\n                  className={validationErrors['recipientInfo.email'] ? 'border-red-500' : ''}\n                />\n                {validationErrors['recipientInfo.email'] && (\n                  <p className=\"text-sm text-red-500 mt-1\">{validationErrors['recipientInfo.email']}</p>\n                )}\n              </div>\n            </div>\n          </div>\n\n          {/* Bank Account Section */}\n          <div className=\"space-y-4\">\n            <div className=\"flex items-center gap-2 mb-4\">\n              <Building className=\"h-4 w-4\" />\n              <h3 className=\"font-semibold\">Bank Account Details (Germany)</h3>\n            </div>\n\n            <div className=\"grid grid-cols-1 gap-4\">\n              <div>\n                <Label htmlFor=\"iban\">IBAN</Label>\n                <Input\n                  id=\"iban\"\n                  type=\"text\"\n                  placeholder=\"DE89 3704 0044 0532 0130 00\"\n                  value={formatIBAN(recipientInfo.bankAccount.iban)}\n                  onChange={(e) => handleRecipientInfoChange('bankAccount.iban', e.target.value.replace(/\\s/g, ''))}\n                  className={validationErrors['recipientInfo.bankAccount.iban'] ? 'border-red-500' : ''}\n                />\n                {validationErrors['recipientInfo.bankAccount.iban'] && (\n                  <p className=\"text-sm text-red-500 mt-1\">{validationErrors['recipientInfo.bankAccount.iban']}</p>\n                )}\n              </div>\n\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <div>\n                  <Label htmlFor=\"bic\">BIC/SWIFT Code</Label>\n                  <Input\n                    id=\"bic\"\n                    type=\"text\"\n                    placeholder=\"COBADEFFXXX\"\n                    value={recipientInfo.bankAccount.bic}\n                    onChange={(e) => handleRecipientInfoChange('bankAccount.bic', e.target.value.toUpperCase())}\n                    className={validationErrors['recipientInfo.bankAccount.bic'] ? 'border-red-500' : ''}\n                  />\n                  {validationErrors['recipientInfo.bankAccount.bic'] && (\n                    <p className=\"text-sm text-red-500 mt-1\">{validationErrors['recipientInfo.bankAccount.bic']}</p>\n                  )}\n                </div>\n\n                <div>\n                  <Label htmlFor=\"bank-name\">Bank Name</Label>\n                  <Input\n                    id=\"bank-name\"\n                    type=\"text\"\n                    placeholder=\"Deutsche Bank\"\n                    value={recipientInfo.bankAccount.bankName}\n                    onChange={(e) => handleRecipientInfoChange('bankAccount.bankName', e.target.value)}\n                    className={validationErrors['recipientInfo.bankAccount.bankName'] ? 'border-red-500' : ''}\n                  />\n                  {validationErrors['recipientInfo.bankAccount.bankName'] && (\n                    <p className=\"text-sm text-red-500 mt-1\">{validationErrors['recipientInfo.bankAccount.bankName']}</p>\n                  )}\n                </div>\n              </div>\n\n              <div>\n                <Label htmlFor=\"account-holder\">Account Holder Name</Label>\n                <Input\n                  id=\"account-holder\"\n                  type=\"text\"\n                  placeholder=\"John Doe\"\n                  value={recipientInfo.bankAccount.accountHolderName}\n                  onChange={(e) => handleRecipientInfoChange('bankAccount.accountHolderName', e.target.value)}\n                  className={validationErrors['recipientInfo.bankAccount.accountHolderName'] ? 'border-red-500' : ''}\n                />\n                {validationErrors['recipientInfo.bankAccount.accountHolderName'] && (\n                  <p className=\"text-sm text-red-500 mt-1\">{validationErrors['recipientInfo.bankAccount.accountHolderName']}</p>\n                )}\n              </div>\n            </div>\n          </div>\n\n          {/* Submit Button */}\n          <Button \n            type=\"submit\"\n            disabled={isLoading || isProcessing}\n            className=\"w-full\"\n            size=\"lg\"\n          >\n            {isLoading || isProcessing ? (\n              <>\n                <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n                Processing Transfer...\n              </>\n            ) : (\n              `Send ${sendAmount.toFixed(2)} USD`\n            )}\n          </Button>\n\n          {/* Security Notice */}\n          <div className=\"flex items-center justify-center space-x-2 text-xs text-muted-foreground\">\n            <Shield className=\"w-4 h-4\" />\n            <span>Secured by Circle • PCI DSS Compliant</span>\n          </div>\n        </form>\n      </CardContent>\n    </Card>\n  );\n}"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AARA;;;;;;;;;AAWA,qBAAqB;AACrB,MAAM,oBAAoB,gMAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACjC,QAAQ,gMAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,IAAI,0CAA0C,GAAG,CAAC,IAAI;IAC7E,aAAa,gMAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG,iBAAiB,GAAG,CAAC,IAAI;IACxD,YAAY,gMAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,IAAI,OAAO,WAAW,IAAI,oBAAoB,GAAG,CAAC,IAAI,OAAO,WAAW,KAAK,IAAI;IAC5G,KAAK,gMAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG,iCAAiC,GAAG,CAAC,GAAG;AACjE;AAEA,MAAM,8BAA8B,gMAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC3C,aAAa;AACf;AAwGO,SAAS,YAAY,EAC1B,UAAU,EACV,aAAa,EACb,YAAY,EACZ,IAAI,EACJ,MAAM,EACN,QAAQ,EACR,YAAY,KAAK,EACA;IACjB,aAAa;IACb,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAe;QAC1D,QAAQ;QACR,aAAa;QACb,YAAY,IAAI,OAAO,WAAW;QAClC,KAAK;IACP;IAEA,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;QAChE,MAAM;QACN,OAAO;QACP,aAAa;YACX,MAAM;YACN,KAAK;YACL,UAAU;YACV,mBAAmB;YACnB,SAAS;QACX;IACF;IAEA,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAA0B,CAAC;IAClF,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEjD,iCAAiC;IACjC,MAAM,mBAAmB,CAAC;QACxB,MAAM,UAAU,MAAM,OAAO,CAAC,OAAO,IAAI,OAAO,CAAC,YAAY;QAC7D,MAAM,UAAU,QAAQ,KAAK,CAAC;QAC9B,MAAM,QAAQ,WAAW,OAAO,CAAC,EAAE,IAAI;QACvC,MAAM,QAAQ,EAAE;QAChB,IAAK,IAAI,IAAI,GAAG,MAAM,MAAM,MAAM,EAAE,IAAI,KAAK,KAAK,EAAG;YACnD,MAAM,IAAI,CAAC,MAAM,SAAS,CAAC,GAAG,IAAI;QACpC;QACA,IAAI,MAAM,MAAM,EAAE;YAChB,OAAO,MAAM,IAAI,CAAC;QACpB,OAAO;YACL,OAAO;QACT;IACF;IAEA,0BAA0B;IAC1B,MAAM,aAAa,CAAC;QAClB,MAAM,UAAU,MAAM,OAAO,CAAC,OAAO,IAAI,WAAW;QACpD,OAAO,QAAQ,OAAO,CAAC,WAAW,OAAO,IAAI;IAC/C;IAEA,6BAA6B;IAC7B,MAAM,0BAA0B,CAAC,OAA0B;QACzD,eAAe,CAAA,OAAQ,CAAC;gBACtB,GAAG,IAAI;gBACP,CAAC,MAAM,EAAE;YACX,CAAC;QAED,wCAAwC;QACxC,IAAI,gBAAgB,CAAC,CAAC,YAAY,EAAE,OAAO,CAAC,EAAE;YAC5C,oBAAoB,CAAA;gBAClB,MAAM,YAAY;oBAAE,GAAG,IAAI;gBAAC;gBAC5B,OAAO,SAAS,CAAC,CAAC,YAAY,EAAE,OAAO,CAAC;gBACxC,OAAO;YACT;QACF;IACF;IAEA,+BAA+B;IAC/B,MAAM,4BAA4B,CAAC,OAAe;QAChD,IAAI,MAAM,UAAU,CAAC,iBAAiB;YACpC,MAAM,YAAY,MAAM,OAAO,CAAC,gBAAgB;YAChD,iBAAiB,CAAA,OAAQ,CAAC;oBACxB,GAAG,IAAI;oBACP,aAAa;wBACX,GAAG,KAAK,WAAW;wBACnB,CAAC,UAAU,EAAE;oBACf;gBACF,CAAC;QACH,OAAO;YACL,iBAAiB,CAAA,OAAQ,CAAC;oBACxB,GAAG,IAAI;oBACP,CAAC,MAAM,EAAE;gBACX,CAAC;QACH;QAEA,wCAAwC;QACxC,IAAI,gBAAgB,CAAC,CAAC,cAAc,EAAE,OAAO,CAAC,EAAE;YAC9C,oBAAoB,CAAA;gBAClB,MAAM,YAAY;oBAAE,GAAG,IAAI;gBAAC;gBAC5B,OAAO,SAAS,CAAC,CAAC,cAAc,EAAE,OAAO,CAAC;gBAC1C,OAAO;YACT;QACF;IACF;IAEA,yBAAyB;IACzB,MAAM,eAAe,OAAO;QAC1B,MAAM,cAAc;QAEpB,oBAAoB,CAAC;QACrB,gBAAgB;QAEhB,IAAI;YACF,qBAAqB;YACrB,MAAM,WAAW;gBACf,aAAa;oBACX,GAAG,WAAW;oBACd,QAAQ,YAAY,MAAM,CAAC,OAAO,CAAC,OAAO,IAAI,+BAA+B;gBAC/E;gBACA,eAAe;oBACb,GAAG,aAAa;oBAChB,aAAa;wBACX,GAAG,cAAc,WAAW;wBAC5B,MAAM,cAAc,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,IAAI,+BAA+B;oBACzF;gBACF;YACF;YAEA,iEAAiE;YACjE,MAAM,0BAA0B,gMAAA,CAAA,IAAC,CAAC,MAAM,CAAC;gBACvC,aAAa;gBACb,eAAe,gMAAA,CAAA,IAAC,CAAC,MAAM,CAAC;oBACtB,MAAM,gMAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG,sCAAsC,GAAG,CAAC,KAAK;oBACvE,OAAO,gMAAA,CAAA,IAAC,CAAC,MAAM,GAAG,KAAK,CAAC;oBACxB,aAAa,gMAAA,CAAA,IAAC,CAAC,MAAM,CAAC;wBACpB,MAAM,gMAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,IAAI,uCAAuC,GAAG,CAAC,IAAI;wBACxE,KAAK,gMAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG,qCAAqC,GAAG,CAAC,IAAI;wBACpE,UAAU,gMAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG,2CAA2C,GAAG,CAAC,KAAK;wBAChF,mBAAmB,gMAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG,qDAAqD,GAAG,CAAC,KAAK;wBACnG,SAAS,gMAAA,CAAA,IAAC,CAAC,OAAO,CAAC,MAAM,MAAM,CAAC,IAAM,MAAM;4BAAE,SAAS;wBAA0C;oBACnG;gBACF;YACF;YAEA,wBAAwB,KAAK,CAAC;YAE9B,oCAAoC;YACpC,SAAS;QACX,EAAE,OAAO,KAAK;YACZ,IAAI,eAAe,gMAAA,CAAA,IAAC,CAAC,QAAQ,EAAE;gBAC7B,MAAM,SAAiC,CAAC;gBACxC,IAAI,MAAM,CAAC,OAAO,CAAC,CAAC;oBAClB,MAAM,OAAO,MAAM,IAAI,CAAC,IAAI,CAAC;oBAC7B,MAAM,CAAC,KAAK,GAAG,MAAM,OAAO;gBAC9B;gBACA,oBAAoB;YACtB;QACF,SAAU;YACR,gBAAgB;QAClB;IACF;IAEA,MAAM,cAAc,aAAa;IAEjC,qBACE,8OAAC,mJAAA,CAAA,OAAI;QAAC,WAAU;;0BACd,8OAAC,mJAAA,CAAA,aAAU;;kCACT,8OAAC,mJAAA,CAAA,YAAS;wBAAC,WAAU;;0CACnB,8OAAC,kNAAA,CAAA,aAAU;gCAAC,WAAU;;;;;;4BAAY;;;;;;;kCAGpC,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;kDAAK;;;;;;kDACN,8OAAC;wCAAK,WAAU;;4CAAc;4CAAE,WAAW,OAAO,CAAC;4CAAG;;;;;;;;;;;;;0CAExD,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;kDAAK;;;;;;kDACN,8OAAC;wCAAK,WAAU;;4CAAc;4CAAE,KAAK,OAAO,CAAC;4CAAG;;;;;;;;;;;;;0CAElD,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;kDAAK;;;;;;kDACN,8OAAC;wCAAK,WAAU;;4CAAY;4CAAE,YAAY,OAAO,CAAC;4CAAG;;;;;;;;;;;;;0CAEvD,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;kDAAK;;;;;;kDACN,8OAAC;wCAAK,WAAU;;4CAAY;4CAAE,cAAc,OAAO,CAAC;4CAAG;;;;;;;;;;;;;;;;;;;;;;;;;0BAI7D,8OAAC,mJAAA,CAAA,cAAW;0BACV,cAAA,8OAAC;oBAAK,UAAU;oBAAc,WAAU;;sCAEtC,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAI,WAAU;;sDACb,8OAAC,kNAAA,CAAA,aAAU;4CAAC,WAAU;;;;;;sDACtB,8OAAC;4CAAG,WAAU;sDAAgB;;;;;;;;;;;;8CAGhC,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;;8DACC,8OAAC,oJAAA,CAAA,QAAK;oDAAC,SAAQ;8DAAc;;;;;;8DAC7B,8OAAC,oJAAA,CAAA,QAAK;oDACJ,IAAG;oDACH,MAAK;oDACL,aAAY;oDACZ,OAAO,iBAAiB,YAAY,MAAM;oDAC1C,UAAU,CAAC,IAAM,wBAAwB,UAAU,EAAE,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO;oDACjF,WAAW,gBAAgB,CAAC,qBAAqB,GAAG,mBAAmB;oDACvE,WAAW;;;;;;gDAEZ,gBAAgB,CAAC,qBAAqB,kBACrC,8OAAC;oDAAE,WAAU;;sEACX,8OAAC,oNAAA,CAAA,cAAW;4DAAC,WAAU;;;;;;wDACtB,gBAAgB,CAAC,qBAAqB;;;;;;;;;;;;;sDAK7C,8OAAC;4CAAI,WAAU;;8DACb,8OAAC;;sEACC,8OAAC,oJAAA,CAAA,QAAK;4DAAC,SAAQ;sEAAe;;;;;;sEAC9B,8OAAC,oJAAA,CAAA,QAAK;4DACJ,IAAG;4DACH,MAAK;4DACL,aAAY;4DACZ,KAAI;4DACJ,KAAI;4DACJ,OAAO,YAAY,WAAW;4DAC9B,UAAU,CAAC,IAAM,wBAAwB,eAAe,SAAS,EAAE,MAAM,CAAC,KAAK,KAAK;4DACpF,WAAW,gBAAgB,CAAC,0BAA0B,GAAG,mBAAmB;;;;;;wDAE7E,gBAAgB,CAAC,0BAA0B,kBAC1C,8OAAC;4DAAE,WAAU;sEAA6B,gBAAgB,CAAC,0BAA0B;;;;;;;;;;;;8DAIzF,8OAAC;;sEACC,8OAAC,oJAAA,CAAA,QAAK;4DAAC,SAAQ;sEAAc;;;;;;sEAC7B,8OAAC,oJAAA,CAAA,QAAK;4DACJ,IAAG;4DACH,MAAK;4DACL,aAAY;4DACZ,KAAK,IAAI,OAAO,WAAW;4DAC3B,KAAK,IAAI,OAAO,WAAW,KAAK;4DAChC,OAAO,YAAY,UAAU;4DAC7B,UAAU,CAAC,IAAM,wBAAwB,cAAc,SAAS,EAAE,MAAM,CAAC,KAAK,KAAK,IAAI,OAAO,WAAW;4DACzG,WAAW,gBAAgB,CAAC,yBAAyB,GAAG,mBAAmB;;;;;;wDAE5E,gBAAgB,CAAC,yBAAyB,kBACzC,8OAAC;4DAAE,WAAU;sEAA6B,gBAAgB,CAAC,yBAAyB;;;;;;;;;;;;8DAIxF,8OAAC;;sEACC,8OAAC,oJAAA,CAAA,QAAK;4DAAC,SAAQ;sEAAM;;;;;;sEACrB,8OAAC,oJAAA,CAAA,QAAK;4DACJ,IAAG;4DACH,MAAK;4DACL,aAAY;4DACZ,WAAW;4DACX,OAAO,YAAY,GAAG;4DACtB,UAAU,CAAC,IAAM,wBAAwB,OAAO,EAAE,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,WAAW;4DAClF,WAAW,gBAAgB,CAAC,kBAAkB,GAAG,mBAAmB;;;;;;wDAErE,gBAAgB,CAAC,kBAAkB,kBAClC,8OAAC;4DAAE,WAAU;sEAA6B,gBAAgB,CAAC,kBAAkB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;sCAQvF,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAI,WAAU;;sDACb,8OAAC,kMAAA,CAAA,OAAI;4CAAC,WAAU;;;;;;sDAChB,8OAAC;4CAAG,WAAU;sDAAgB;;;;;;;;;;;;8CAGhC,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;;8DACC,8OAAC,oJAAA,CAAA,QAAK;oDAAC,SAAQ;8DAAiB;;;;;;8DAChC,8OAAC,oJAAA,CAAA,QAAK;oDACJ,IAAG;oDACH,MAAK;oDACL,aAAY;oDACZ,OAAO,cAAc,IAAI;oDACzB,UAAU,CAAC,IAAM,0BAA0B,QAAQ,EAAE,MAAM,CAAC,KAAK;oDACjE,WAAW,gBAAgB,CAAC,qBAAqB,GAAG,mBAAmB;;;;;;gDAExE,gBAAgB,CAAC,qBAAqB,kBACrC,8OAAC;oDAAE,WAAU;8DAA6B,gBAAgB,CAAC,qBAAqB;;;;;;;;;;;;sDAIpF,8OAAC;;8DACC,8OAAC,oJAAA,CAAA,QAAK;oDAAC,SAAQ;8DAAkB;;;;;;8DACjC,8OAAC,oJAAA,CAAA,QAAK;oDACJ,IAAG;oDACH,MAAK;oDACL,aAAY;oDACZ,OAAO,cAAc,KAAK;oDAC1B,UAAU,CAAC,IAAM,0BAA0B,SAAS,EAAE,MAAM,CAAC,KAAK;oDAClE,WAAW,gBAAgB,CAAC,sBAAsB,GAAG,mBAAmB;;;;;;gDAEzE,gBAAgB,CAAC,sBAAsB,kBACtC,8OAAC;oDAAE,WAAU;8DAA6B,gBAAgB,CAAC,sBAAsB;;;;;;;;;;;;;;;;;;;;;;;;sCAOzF,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAI,WAAU;;sDACb,8OAAC,0MAAA,CAAA,WAAQ;4CAAC,WAAU;;;;;;sDACpB,8OAAC;4CAAG,WAAU;sDAAgB;;;;;;;;;;;;8CAGhC,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;;8DACC,8OAAC,oJAAA,CAAA,QAAK;oDAAC,SAAQ;8DAAO;;;;;;8DACtB,8OAAC,oJAAA,CAAA,QAAK;oDACJ,IAAG;oDACH,MAAK;oDACL,aAAY;oDACZ,OAAO,WAAW,cAAc,WAAW,CAAC,IAAI;oDAChD,UAAU,CAAC,IAAM,0BAA0B,oBAAoB,EAAE,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO;oDAC7F,WAAW,gBAAgB,CAAC,iCAAiC,GAAG,mBAAmB;;;;;;gDAEpF,gBAAgB,CAAC,iCAAiC,kBACjD,8OAAC;oDAAE,WAAU;8DAA6B,gBAAgB,CAAC,iCAAiC;;;;;;;;;;;;sDAIhG,8OAAC;4CAAI,WAAU;;8DACb,8OAAC;;sEACC,8OAAC,oJAAA,CAAA,QAAK;4DAAC,SAAQ;sEAAM;;;;;;sEACrB,8OAAC,oJAAA,CAAA,QAAK;4DACJ,IAAG;4DACH,MAAK;4DACL,aAAY;4DACZ,OAAO,cAAc,WAAW,CAAC,GAAG;4DACpC,UAAU,CAAC,IAAM,0BAA0B,mBAAmB,EAAE,MAAM,CAAC,KAAK,CAAC,WAAW;4DACxF,WAAW,gBAAgB,CAAC,gCAAgC,GAAG,mBAAmB;;;;;;wDAEnF,gBAAgB,CAAC,gCAAgC,kBAChD,8OAAC;4DAAE,WAAU;sEAA6B,gBAAgB,CAAC,gCAAgC;;;;;;;;;;;;8DAI/F,8OAAC;;sEACC,8OAAC,oJAAA,CAAA,QAAK;4DAAC,SAAQ;sEAAY;;;;;;sEAC3B,8OAAC,oJAAA,CAAA,QAAK;4DACJ,IAAG;4DACH,MAAK;4DACL,aAAY;4DACZ,OAAO,cAAc,WAAW,CAAC,QAAQ;4DACzC,UAAU,CAAC,IAAM,0BAA0B,wBAAwB,EAAE,MAAM,CAAC,KAAK;4DACjF,WAAW,gBAAgB,CAAC,qCAAqC,GAAG,mBAAmB;;;;;;wDAExF,gBAAgB,CAAC,qCAAqC,kBACrD,8OAAC;4DAAE,WAAU;sEAA6B,gBAAgB,CAAC,qCAAqC;;;;;;;;;;;;;;;;;;sDAKtG,8OAAC;;8DACC,8OAAC,oJAAA,CAAA,QAAK;oDAAC,SAAQ;8DAAiB;;;;;;8DAChC,8OAAC,oJAAA,CAAA,QAAK;oDACJ,IAAG;oDACH,MAAK;oDACL,aAAY;oDACZ,OAAO,cAAc,WAAW,CAAC,iBAAiB;oDAClD,UAAU,CAAC,IAAM,0BAA0B,iCAAiC,EAAE,MAAM,CAAC,KAAK;oDAC1F,WAAW,gBAAgB,CAAC,8CAA8C,GAAG,mBAAmB;;;;;;gDAEjG,gBAAgB,CAAC,8CAA8C,kBAC9D,8OAAC;oDAAE,WAAU;8DAA6B,gBAAgB,CAAC,8CAA8C;;;;;;;;;;;;;;;;;;;;;;;;sCAOjH,8OAAC,qJAAA,CAAA,SAAM;4BACL,MAAK;4BACL,UAAU,aAAa;4BACvB,WAAU;4BACV,MAAK;sCAEJ,aAAa,6BACZ;;kDACE,8OAAC,iNAAA,CAAA,UAAO;wCAAC,WAAU;;;;;;oCAA8B;;+CAInD,CAAC,KAAK,EAAE,WAAW,OAAO,CAAC,GAAG,IAAI,CAAC;;;;;;sCAKvC,8OAAC;4BAAI,WAAU;;8CACb,8OAAC,sMAAA,CAAA,SAAM;oCAAC,WAAU;;;;;;8CAClB,8OAAC;8CAAK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMlB","debugId":null}},
    {"offset": {"line": 3949, "column": 0}, "map": {"version":3,"sources":["file:///home/faros/stealth-money/packages/web/src/components/features/TransferStatus.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect } from \"react\";\nimport { CheckCircle, Clock, AlertCircle, ArrowRight, RefreshCw } from \"lucide-react\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\n\n// Types based on design document\nexport enum TransferStatusEnum {\n  INITIATED = 'initiated',\n  PAYMENT_PROCESSING = 'payment_processing',\n  TRANSFERRING = 'transferring',\n  PAYING_OUT = 'paying_out',\n  COMPLETED = 'completed',\n  FAILED = 'failed'\n}\n\nexport interface TransferEvent {\n  id: string;\n  transferId: string;\n  type: 'payment_created' | 'payment_confirmed' | 'transfer_initiated' | 'payout_created' | 'payout_completed';\n  status: 'success' | 'pending' | 'failed';\n  message: string;\n  timestamp: string;\n  metadata?: Record<string, any>;\n}\n\nexport interface TransferStatusData {\n  transferId: string;\n  status: TransferStatusEnum;\n  timeline: TransferEvent[];\n  sendAmount: number;\n  receiveAmount: number;\n  exchangeRate: number;\n  fees: number;\n  estimatedCompletion?: string;\n  completedAt?: string;\n  lastUpdated: string;\n}\n\ninterface TransferStatusProps {\n  transferId: string;\n  onRefresh?: () => void;\n  autoRefresh?: boolean;\n  refreshInterval?: number;\n}\n\nexport function TransferStatus({ \n  transferId, \n  onRefresh,\n  autoRefresh = true,\n  refreshInterval = 5000 \n}: TransferStatusProps) {\n  const [transferData, setTransferData] = useState<TransferStatusData | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [lastRefresh, setLastRefresh] = useState<Date>(new Date());\n  const [isRealTimeConnected, setIsRealTimeConnected] = useState(false);\n\n  // Fetch transfer status\n  const fetchTransferStatus = async (showLoading = true) => {\n    try {\n      if (showLoading) setIsLoading(true);\n      setError(null);\n      const API_URL = process.env.NEXT_PUBLIC_API_URL || 'http://localhost:4000';\n      const response = await fetch(`${API_URL}/api/transfers/${transferId}/status`);\n\n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({}));\n        throw new Error(errorData.message || 'Failed to fetch transfer status');\n      }\n\n      const data: TransferStatusData = await response.json();\n      setTransferData(data);\n      setLastRefresh(new Date());\n      setIsRealTimeConnected(true);\n    } catch (err) {\n      console.error('Transfer status fetch error:', err);\n      setError(err instanceof Error ? err.message : 'Failed to fetch transfer status');\n      setIsRealTimeConnected(false);\n    } finally {\n      if (showLoading) setIsLoading(false);\n    }\n  };\n\n  // Handle manual refresh\n  const handleRefresh = () => {\n    fetchTransferStatus(true);\n    if (onRefresh) {\n      onRefresh();\n    }\n  };\n\n  // Initial fetch and auto-refresh setup with improved real-time behavior\n  useEffect(() => {\n    fetchTransferStatus(true);\n  }, [transferId]);\n\n  // Separate effect for auto-refresh to avoid infinite loops\n  useEffect(() => {\n    if (!autoRefresh || !transferData) return;\n    \n    const shouldAutoRefresh = \n      transferData.status !== TransferStatusEnum.COMPLETED && \n      transferData.status !== TransferStatusEnum.FAILED;\n\n    if (shouldAutoRefresh) {\n      const interval = setInterval(() => {\n        fetchTransferStatus(false); // Don't show loading spinner for background updates\n      }, refreshInterval);\n      return () => clearInterval(interval);\n    }\n  }, [autoRefresh, refreshInterval, transferData?.status]);\n\n  // Format currency display\n  const formatCurrency = (amount: number, currency: string) => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: currency,\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2,\n    }).format(amount);\n  };\n\n  // Format timestamp\n  const formatTimestamp = (timestamp: string) => {\n    return new Date(timestamp).toLocaleString();\n  };\n\n  // Get status color and icon\n  const getStatusDisplay = (status: TransferStatusEnum) => {\n    switch (status) {\n      case TransferStatusEnum.INITIATED:\n        return { color: 'text-blue-600', bgColor: 'bg-blue-50', icon: Clock, label: 'Initiated' };\n      case TransferStatusEnum.PAYMENT_PROCESSING:\n        return { color: 'text-yellow-600', bgColor: 'bg-yellow-50', icon: RefreshCw, label: 'Processing Payment' };\n      case TransferStatusEnum.TRANSFERRING:\n        return { color: 'text-blue-600', bgColor: 'bg-blue-50', icon: ArrowRight, label: 'Transferring' };\n      case TransferStatusEnum.PAYING_OUT:\n        return { color: 'text-purple-600', bgColor: 'bg-purple-50', icon: RefreshCw, label: 'Paying Out' };\n      case TransferStatusEnum.COMPLETED:\n        return { color: 'text-green-600', bgColor: 'bg-green-50', icon: CheckCircle, label: 'Completed' };\n      case TransferStatusEnum.FAILED:\n        return { color: 'text-red-600', bgColor: 'bg-red-50', icon: AlertCircle, label: 'Failed' };\n      default:\n        return { color: 'text-gray-600', bgColor: 'bg-gray-50', icon: Clock, label: 'Unknown' };\n    }\n  };\n\n  // Get event status display\n  const getEventStatusDisplay = (status: 'success' | 'pending' | 'failed') => {\n    switch (status) {\n      case 'success':\n        return { color: 'text-green-600', icon: CheckCircle };\n      case 'pending':\n        return { color: 'text-yellow-600', icon: Clock };\n      case 'failed':\n        return { color: 'text-red-600', icon: AlertCircle };\n      default:\n        return { color: 'text-gray-600', icon: Clock };\n    }\n  };\n\n  // Calculate progress percentage\n  const getProgressPercentage = (status: TransferStatusEnum) => {\n    switch (status) {\n      case TransferStatusEnum.INITIATED:\n        return 20;\n      case TransferStatusEnum.PAYMENT_PROCESSING:\n        return 40;\n      case TransferStatusEnum.TRANSFERRING:\n        return 60;\n      case TransferStatusEnum.PAYING_OUT:\n        return 80;\n      case TransferStatusEnum.COMPLETED:\n        return 100;\n      case TransferStatusEnum.FAILED:\n        return 0;\n      default:\n        return 0;\n    }\n  };\n\n  if (isLoading && !transferData) {\n    return (\n      <Card className=\"w-full max-w-2xl mx-auto\">\n        <CardContent className=\"flex items-center justify-center py-8\">\n          <RefreshCw className=\"h-6 w-6 animate-spin text-muted-foreground mr-2\" />\n          <span className=\"text-muted-foreground\">Loading transfer status...</span>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  if (error && !transferData) {\n    return (\n      <Card className=\"w-full max-w-2xl mx-auto\">\n        <CardContent className=\"py-8\">\n          <div className=\"text-center\">\n            <AlertCircle className=\"h-12 w-12 text-red-500 mx-auto mb-4\" />\n            <h3 className=\"text-lg font-semibold text-red-700 mb-2\">Error Loading Transfer</h3>\n            <p className=\"text-red-600 mb-4\">{error}</p>\n            <Button onClick={handleRefresh} variant=\"outline\">\n              <RefreshCw className=\"h-4 w-4 mr-2\" />\n              Try Again\n            </Button>\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  if (!transferData) {\n    return (\n      <Card className=\"w-full max-w-2xl mx-auto\">\n        <CardContent className=\"py-8\">\n          <div className=\"text-center\">\n            <AlertCircle className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\n            <h3 className=\"text-lg font-semibold text-gray-700 mb-2\">Transfer Not Found</h3>\n            <p className=\"text-gray-600\">No transfer data available for ID: {transferId}</p>\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  const statusDisplay = getStatusDisplay(transferData.status);\n  const StatusIcon = statusDisplay.icon;\n  const progressPercentage = getProgressPercentage(transferData.status);\n\n  return (\n    <Card className=\"w-full max-w-2xl mx-auto shadow-sm\">\n      <CardHeader className=\"pb-4\">\n        <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between gap-3\">\n          <CardTitle className=\"flex items-center gap-2 text-lg\">\n            <StatusIcon className={`h-5 w-5 ${statusDisplay.color}`} />\n            <span className=\"hidden sm:inline\">Transfer Status</span>\n            <span className=\"sm:hidden\">Status</span>\n          </CardTitle>\n          <Button \n            onClick={handleRefresh} \n            variant=\"outline\" \n            size=\"sm\"\n            disabled={isLoading}\n            className=\"self-start sm:self-auto\"\n          >\n            <RefreshCw className={`h-4 w-4 mr-2 ${isLoading ? 'animate-spin' : ''}`} />\n            <span className=\"hidden sm:inline\">Refresh</span>\n            <span className=\"sm:hidden\">Update</span>\n          </Button>\n        </div>\n        <div className=\"text-sm text-muted-foreground break-all sm:break-normal\">\n          ID: {transferData.transferId}\n        </div>\n      </CardHeader>\n      <CardContent className=\"space-y-6\">\n        {/* Status Overview */}\n        <div className={`rounded-lg p-4 ${statusDisplay.bgColor}`}>\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center gap-3\">\n              <StatusIcon className={`h-6 w-6 ${statusDisplay.color}`} />\n              <div>\n                <h3 className={`font-semibold ${statusDisplay.color}`}>\n                  {statusDisplay.label}\n                </h3>\n                {transferData.estimatedCompletion && transferData.status !== TransferStatusEnum.COMPLETED && (\n                  <p className=\"text-sm text-muted-foreground\">\n                    Estimated completion: {formatTimestamp(transferData.estimatedCompletion)}\n                  </p>\n                )}\n                {transferData.completedAt && (\n                  <p className=\"text-sm text-muted-foreground\">\n                    Completed: {formatTimestamp(transferData.completedAt)}\n                  </p>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Progress Bar */}\n        <div className=\"space-y-2\">\n          <div className=\"flex justify-between text-sm text-muted-foreground\">\n            <span>Progress</span>\n            <span>{progressPercentage}%</span>\n          </div>\n          <div className=\"w-full bg-gray-200 rounded-full h-2\">\n            <div \n              className={`h-2 rounded-full transition-all duration-500 ${\n                transferData.status === TransferStatusEnum.FAILED ? 'bg-red-500' : 'bg-blue-500'\n              }`}\n              style={{ width: `${progressPercentage}%` }}\n            />\n          </div>\n        </div>\n\n        {/* Transfer Details */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 p-4 bg-gray-50 rounded-lg\">\n          <div>\n            <p className=\"text-sm text-muted-foreground\">You sent</p>\n            <p className=\"font-semibold\">{formatCurrency(transferData.sendAmount, 'USD')}</p>\n          </div>\n          <div>\n            <p className=\"text-sm text-muted-foreground\">Recipient gets</p>\n            <p className=\"font-semibold text-green-600\">{formatCurrency(transferData.receiveAmount, 'EUR')}</p>\n          </div>\n          <div>\n            <p className=\"text-sm text-muted-foreground\">Exchange rate</p>\n            <p className=\"font-semibold\">1 USD = {transferData.exchangeRate.toFixed(4)} EUR</p>\n          </div>\n          <div>\n            <p className=\"text-sm text-muted-foreground\">Fees</p>\n            <p className=\"font-semibold\">{formatCurrency(transferData.fees, 'USD')}</p>\n          </div>\n        </div>\n\n        {/* Enhanced Timeline with better visualization */}\n        <div className=\"space-y-4\">\n          <div className=\"flex items-center justify-between\">\n            <h3 className=\"font-semibold\">Timeline</h3>\n            {isRealTimeConnected && (\n              <div className=\"flex items-center gap-1 text-xs text-green-600\">\n                <div className=\"w-2 h-2 bg-green-500 rounded-full animate-pulse\"></div>\n                Live updates\n              </div>\n            )}\n          </div>\n          <div className=\"relative\">\n            {transferData.timeline.length === 0 ? (\n              <div className=\"text-center py-8 text-muted-foreground\">\n                <Clock className=\"h-8 w-8 mx-auto mb-2 opacity-50\" />\n                <p>No timeline events yet</p>\n              </div>\n            ) : (\n              <div className=\"space-y-4\">\n                {transferData.timeline.map((event, index) => {\n                  const eventStatusDisplay = getEventStatusDisplay(event.status);\n                  const EventIcon = eventStatusDisplay.icon;\n                  const isLast = index === transferData.timeline.length - 1;\n                  const isRecent = new Date(event.timestamp) > new Date(Date.now() - 5 * 60 * 1000); // Last 5 minutes\n\n                  return (\n                    <div \n                      key={event.id} \n                      className={`flex items-start gap-3 p-3 rounded-lg transition-all duration-300 ${\n                        isRecent ? 'bg-blue-50 border border-blue-200' : 'hover:bg-gray-50'\n                      }`}\n                    >\n                      <div className=\"flex flex-col items-center relative\">\n                        <div className={`p-1 rounded-full ${\n                          event.status === 'success' ? 'bg-green-100' :\n                          event.status === 'pending' ? 'bg-yellow-100' :\n                          'bg-red-100'\n                        }`}>\n                          <EventIcon className={`h-4 w-4 ${eventStatusDisplay.color}`} />\n                        </div>\n                        {!isLast && (\n                          <div className={`w-px h-8 mt-2 ${\n                            event.status === 'success' ? 'bg-green-300' : 'bg-gray-300'\n                          }`} />\n                        )}\n                      </div>\n                      <div className=\"flex-1 min-w-0\">\n                        <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between gap-1\">\n                          <p className=\"font-medium text-sm sm:text-base\">{event.message}</p>\n                          <div className=\"flex items-center gap-2\">\n                            {isRecent && (\n                              <span className=\"text-xs bg-blue-100 text-blue-700 px-2 py-1 rounded-full\">\n                                New\n                              </span>\n                            )}\n                            <span className=\"text-xs text-muted-foreground whitespace-nowrap\">\n                              {formatTimestamp(event.timestamp)}\n                            </span>\n                          </div>\n                        </div>\n                        <div className=\"flex items-center gap-2 mt-1\">\n                          <p className={`text-xs capitalize font-medium ${eventStatusDisplay.color}`}>\n                            {event.status}\n                          </p>\n                          {event.metadata && Object.keys(event.metadata).length > 0 && (\n                            <span className=\"text-xs text-muted-foreground\">\n                              • Additional details available\n                            </span>\n                          )}\n                        </div>\n                      </div>\n                    </div>\n                  );\n                })}\n              </div>\n            )}\n          </div>\n        </div>\n\n        {/* Last Updated */}\n        <div className=\"text-xs text-muted-foreground text-center border-t pt-4\">\n          Last updated: {formatTimestamp(transferData.lastUpdated)}\n          {autoRefresh && transferData.status !== TransferStatusEnum.COMPLETED && transferData.status !== TransferStatusEnum.FAILED && (\n            <span className=\"ml-2\">• Auto-refreshing every {refreshInterval / 1000}s</span>\n          )}\n        </div>\n      </CardContent>\n    </Card>\n  );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4872, "column": 0}, "map": {"version":3,"sources":["file:///home/faros/stealth-money/packages/web/src/components/features/ProgressIndicator.tsx"],"sourcesContent":["\"use client\";\n\nimport { Calculator, User, CreditCard, CheckCircle } from \"lucide-react\";\nimport { TransferFlowStep } from \"./TransferFlowContainer\";\n\ninterface ProgressIndicatorProps {\n  currentStep: TransferFlowStep;\n  completedSteps: TransferFlowStep[];\n  onStepClick?: (step: TransferFlowStep) => void;\n}\n\ninterface StepConfig {\n  key: TransferFlowStep;\n  label: string;\n  shortLabel: string;\n  icon: React.ComponentType<{ className?: string }>;\n  description: string;\n}\n\nconst STEPS: StepConfig[] = [\n  {\n    key: 'calculator',\n    label: 'Calculate',\n    shortLabel: 'Calc',\n    icon: Calculator,\n    description: 'Enter transfer amount'\n  },\n  {\n    key: 'recipient',\n    label: 'Recipient',\n    shortLabel: 'Recipient',\n    icon: User,\n    description: 'Add recipient details'\n  },\n  {\n    key: 'payment',\n    label: 'Payment',\n    shortLabel: 'Pay',\n    icon: CreditCard,\n    description: 'Complete payment'\n  },\n  {\n    key: 'status',\n    label: 'Status',\n    shortLabel: 'Status',\n    icon: CheckCircle,\n    description: 'Track transfer'\n  }\n];\n\nexport function ProgressIndicator({ \n  currentStep, \n  completedSteps, \n  onStepClick \n}: ProgressIndicatorProps) {\n  const currentStepIndex = STEPS.findIndex(step => step.key === currentStep);\n  \n  const getStepStatus = (step: StepConfig, index: number) => {\n    if (completedSteps.includes(step.key)) {\n      return 'completed';\n    } else if (step.key === currentStep) {\n      return 'current';\n    } else if (index < currentStepIndex) {\n      return 'completed';\n    } else {\n      return 'upcoming';\n    }\n  };\n\n  const getStepStyles = (status: string, isClickable: boolean) => {\n    const baseStyles = \"relative flex items-center justify-center w-10 h-10 rounded-full border-2 transition-all duration-200\";\n    const clickableStyles = isClickable ? \"cursor-pointer hover:scale-105\" : \"\";\n    \n    switch (status) {\n      case 'completed':\n        return `${baseStyles} ${clickableStyles} bg-green-500 border-green-500 text-white`;\n      case 'current':\n        return `${baseStyles} ${clickableStyles} bg-blue-500 border-blue-500 text-white ring-4 ring-blue-100`;\n      case 'upcoming':\n        return `${baseStyles} bg-gray-100 border-gray-300 text-gray-400`;\n      default:\n        return `${baseStyles} bg-gray-100 border-gray-300 text-gray-400`;\n    }\n  };\n\n  const getConnectorStyles = (index: number) => {\n    const isCompleted = index < currentStepIndex || completedSteps.includes(STEPS[index].key);\n    return `flex-1 h-0.5 mx-2 transition-colors duration-300 ${\n      isCompleted ? 'bg-green-500' : 'bg-gray-300'\n    }`;\n  };\n\n  const handleStepClick = (step: StepConfig) => {\n    if (!onStepClick) return;\n    \n    // Allow clicking on completed steps or current step\n    const isClickable = completedSteps.includes(step.key) || step.key === currentStep;\n    if (isClickable) {\n      onStepClick(step.key);\n    }\n  };\n\n  return (\n    <div className=\"w-full\">\n      {/* Desktop Progress Indicator */}\n      <div className=\"hidden md:block\">\n        <div className=\"flex items-center justify-between\">\n          {STEPS.map((step, index) => {\n            const status = getStepStatus(step, index);\n            const isClickable = completedSteps.includes(step.key) || step.key === currentStep;\n            const Icon = step.icon;\n            \n            return (\n              <div key={step.key} className=\"flex items-center flex-1\">\n                {/* Step Circle */}\n                <div className=\"flex flex-col items-center\">\n                  <div\n                    className={getStepStyles(status, isClickable)}\n                    onClick={() => handleStepClick(step)}\n                    role={isClickable ? \"button\" : undefined}\n                    tabIndex={isClickable ? 0 : undefined}\n                    onKeyDown={(e) => {\n                      if (isClickable && (e.key === 'Enter' || e.key === ' ')) {\n                        e.preventDefault();\n                        handleStepClick(step);\n                      }\n                    }}\n                  >\n                    {status === 'completed' ? (\n                      <CheckCircle className=\"w-5 h-5\" />\n                    ) : (\n                      <Icon className=\"w-5 h-5\" />\n                    )}\n                  </div>\n                  \n                  {/* Step Label */}\n                  <div className=\"mt-2 text-center\">\n                    <div className={`text-sm font-medium ${\n                      status === 'current' ? 'text-blue-600' :\n                      status === 'completed' ? 'text-green-600' :\n                      'text-gray-500'\n                    }`}>\n                      {step.label}\n                    </div>\n                    <div className=\"text-xs text-gray-400 mt-1\">\n                      {step.description}\n                    </div>\n                  </div>\n                </div>\n                \n                {/* Connector Line */}\n                {index < STEPS.length - 1 && (\n                  <div className={getConnectorStyles(index)} />\n                )}\n              </div>\n            );\n          })}\n        </div>\n      </div>\n      \n      {/* Mobile Progress Indicator */}\n      <div className=\"md:hidden\">\n        <div className=\"flex items-center justify-between mb-4\">\n          {STEPS.map((step, index) => {\n            const status = getStepStatus(step, index);\n            const isClickable = completedSteps.includes(step.key) || step.key === currentStep;\n            const Icon = step.icon;\n            \n            return (\n              <div key={step.key} className=\"flex items-center flex-1\">\n                {/* Step Circle */}\n                <div className=\"flex flex-col items-center\">\n                  <div\n                    className={getStepStyles(status, isClickable)}\n                    onClick={() => handleStepClick(step)}\n                    role={isClickable ? \"button\" : undefined}\n                    tabIndex={isClickable ? 0 : undefined}\n                    onKeyDown={(e) => {\n                      if (isClickable && (e.key === 'Enter' || e.key === ' ')) {\n                        e.preventDefault();\n                        handleStepClick(step);\n                      }\n                    }}\n                  >\n                    {status === 'completed' ? (\n                      <CheckCircle className=\"w-4 h-4\" />\n                    ) : (\n                      <Icon className=\"w-4 h-4\" />\n                    )}\n                  </div>\n                  \n                  {/* Step Label - Shorter for mobile */}\n                  <div className=\"mt-1 text-center\">\n                    <div className={`text-xs font-medium ${\n                      status === 'current' ? 'text-blue-600' :\n                      status === 'completed' ? 'text-green-600' :\n                      'text-gray-500'\n                    }`}>\n                      {step.shortLabel}\n                    </div>\n                  </div>\n                </div>\n                \n                {/* Connector Line */}\n                {index < STEPS.length - 1 && (\n                  <div className={`flex-1 h-0.5 mx-1 ${\n                    index < currentStepIndex || completedSteps.includes(STEPS[index].key)\n                      ? 'bg-green-500' \n                      : 'bg-gray-300'\n                  }`} />\n                )}\n              </div>\n            );\n          })}\n        </div>\n        \n        {/* Current Step Description for Mobile */}\n        <div className=\"text-center\">\n          <div className=\"text-sm text-gray-600\">\n            Step {currentStepIndex + 1} of {STEPS.length}: {STEPS[currentStepIndex]?.description}\n          </div>\n        </div>\n      </div>\n      \n      {/* Progress Bar */}\n      <div className=\"mt-4\">\n        <div className=\"flex justify-between text-xs text-gray-500 mb-1\">\n          <span>Progress</span>\n          <span>{Math.round(((currentStepIndex + 1) / STEPS.length) * 100)}%</span>\n        </div>\n        <div className=\"w-full bg-gray-200 rounded-full h-2\">\n          <div \n            className=\"bg-gradient-to-r from-blue-500 to-green-500 h-2 rounded-full transition-all duration-500 ease-out\"\n            style={{ \n              width: `${((currentStepIndex + 1) / STEPS.length) * 100}%` \n            }}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 5230, "column": 0}, "map": {"version":3,"sources":["file:///home/faros/stealth-money/packages/web/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants } "],"names":[],"mappings":";;;;;AACA;AACA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,8OAAC;QAAI,WAAW,CAAA,GAAA,sIAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE","debugId":null}},
    {"offset": {"line": 5272, "column": 0}, "map": {"version":3,"sources":["file:///home/faros/stealth-money/packages/web/src/components/features/BankAccountOnboarding.tsx"],"sourcesContent":["// src/components/features/BankAccountOnboarding.tsx\n'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { Badge } from '@/components/ui/badge';\nimport { CheckCircle, AlertCircle, Plus, Trash2, Edit } from 'lucide-react';\n\ninterface BankAccount {\n  id: string;\n  accountName: string;\n  currency: string;\n  country: string;\n  bankName: string;\n  accountHolderName: string;\n  accountType?: string;\n  isVerified: boolean;\n  isPrimary: boolean;\n  isActive: boolean;\n  // Currency-specific fields\n  iban?: string;\n  bic?: string;\n  routingNumber?: string;\n  accountNumber?: string;\n  rut?: string;\n  bankCode?: string;\n  clabe?: string;\n  sortCode?: string;\n  ukAccountNumber?: string;\n  createdAt: string;\n  updatedAt: string;\n}\n\ninterface BankAccountFormData {\n  accountName: string;\n  currency: string;\n  bankName: string;\n  accountHolderName: string;\n  accountType: string;\n  isPrimary: boolean;\n  // Currency-specific fields\n  iban?: string;\n  bic?: string;\n  routingNumber?: string;\n  accountNumber?: string;\n  rut?: string;\n  bankCode?: string;\n  clabe?: string;\n  sortCode?: string;\n  ukAccountNumber?: string;\n}\n\nconst SUPPORTED_CURRENCIES = [\n  { code: 'USD', name: 'US Dollar', country: 'US' },\n  { code: 'EUR', name: 'Euro', country: 'DE' },\n  { code: 'CLP', name: 'Chilean Peso', country: 'CL' },\n  { code: 'MXN', name: 'Mexican Peso', country: 'MX' },\n  { code: 'GBP', name: 'British Pound', country: 'GB' }\n];\n\nconst CURRENCY_CONFIGS = {\n  USD: {\n    requiredFields: ['routingNumber', 'accountNumber'],\n    fieldLabels: {\n      routingNumber: 'Routing Number',\n      accountNumber: 'Account Number'\n    },\n    accountTypes: ['checking', 'savings']\n  },\n  EUR: {\n    requiredFields: ['iban', 'bic'],\n    fieldLabels: {\n      iban: 'IBAN',\n      bic: 'BIC/SWIFT Code'\n    },\n    accountTypes: ['checking', 'savings']\n  },\n  CLP: {\n    requiredFields: ['rut', 'bankCode', 'accountNumber'],\n    fieldLabels: {\n      rut: 'RUT',\n      bankCode: 'Bank Code',\n      accountNumber: 'Account Number'\n    },\n    accountTypes: ['checking', 'savings']\n  },\n  MXN: {\n    requiredFields: ['clabe'],\n    fieldLabels: {\n      clabe: 'CLABE'\n    },\n    accountTypes: ['checking', 'savings']\n  },\n  GBP: {\n    requiredFields: ['sortCode', 'ukAccountNumber'],\n    fieldLabels: {\n      sortCode: 'Sort Code',\n      ukAccountNumber: 'Account Number'\n    },\n    accountTypes: ['checking', 'savings']\n  }\n};\n\ninterface BankAccountOnboardingProps {\n  onComplete?: () => void;\n  onSkip?: () => void;\n  requireVerification?: boolean;\n}\n\nexport default function BankAccountOnboarding({ \n  onComplete, \n  onSkip, \n  requireVerification = false \n}: BankAccountOnboardingProps) {\n  const [bankAccounts, setBankAccounts] = useState<BankAccount[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [showAddForm, setShowAddForm] = useState(false);\n  const [editingAccount, setEditingAccount] = useState<BankAccount | null>(null);\n  const [formData, setFormData] = useState<BankAccountFormData>({\n    accountName: '',\n    currency: '',\n    bankName: '',\n    accountHolderName: '',\n    accountType: 'checking',\n    isPrimary: false\n  });\n  const [formErrors, setFormErrors] = useState<Record<string, string>>({});\n  const [submitting, setSubmitting] = useState(false);\n\n  useEffect(() => {\n    fetchBankAccounts();\n  }, []);\n\n  const fetchBankAccounts = async () => {\n    try {\n      setLoading(true);\n      const response = await fetch('/api/users/me/bank-accounts', {\n        headers: {\n          'Content-Type': 'application/json',\n          // Add authorization header if needed\n        }\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        setBankAccounts(data.bankAccounts || []);\n      } else {\n        console.error('Failed to fetch bank accounts');\n      }\n    } catch (error) {\n      console.error('Error fetching bank accounts:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const validateForm = (): boolean => {\n    const errors: Record<string, string> = {};\n\n    if (!formData.accountName.trim()) {\n      errors.accountName = 'Account name is required';\n    }\n\n    if (!formData.currency) {\n      errors.currency = 'Currency is required';\n    }\n\n    if (!formData.bankName.trim()) {\n      errors.bankName = 'Bank name is required';\n    }\n\n    if (!formData.accountHolderName.trim()) {\n      errors.accountHolderName = 'Account holder name is required';\n    }\n\n    // Validate currency-specific fields\n    if (formData.currency && CURRENCY_CONFIGS[formData.currency as keyof typeof CURRENCY_CONFIGS]) {\n      const config = CURRENCY_CONFIGS[formData.currency as keyof typeof CURRENCY_CONFIGS];\n      \n      for (const field of config.requiredFields) {\n        if (!formData[field as keyof BankAccountFormData]) {\n          errors[field] = `${config.fieldLabels[field as keyof typeof config.fieldLabels]} is required`;\n        }\n      }\n    }\n\n    setFormErrors(errors);\n    return Object.keys(errors).length === 0;\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (!validateForm()) {\n      return;\n    }\n\n    setSubmitting(true);\n\n    try {\n      const url = editingAccount \n        ? `/api/users/me/bank-accounts/${editingAccount.id}`\n        : '/api/users/me/bank-accounts';\n      \n      const method = editingAccount ? 'PUT' : 'POST';\n\n      const response = await fetch(url, {\n        method,\n        headers: {\n          'Content-Type': 'application/json',\n          // Add authorization header if needed\n        },\n        body: JSON.stringify(formData)\n      });\n\n      if (response.ok) {\n        await fetchBankAccounts();\n        resetForm();\n        setShowAddForm(false);\n        setEditingAccount(null);\n      } else {\n        const errorData = await response.json();\n        console.error('Failed to save bank account:', errorData);\n        // Handle specific error messages\n        if (errorData.message) {\n          setFormErrors({ general: errorData.message });\n        }\n      }\n    } catch (error) {\n      console.error('Error saving bank account:', error);\n      setFormErrors({ general: 'Failed to save bank account. Please try again.' });\n    } finally {\n      setSubmitting(false);\n    }\n  };\n\n  const handleDelete = async (accountId: string) => {\n    if (!confirm('Are you sure you want to delete this bank account?')) {\n      return;\n    }\n\n    try {\n      const response = await fetch(`/api/users/me/bank-accounts/${accountId}`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json',\n          // Add authorization header if needed\n        }\n      });\n\n      if (response.ok) {\n        await fetchBankAccounts();\n      } else {\n        console.error('Failed to delete bank account');\n      }\n    } catch (error) {\n      console.error('Error deleting bank account:', error);\n    }\n  };\n\n  const resetForm = () => {\n    setFormData({\n      accountName: '',\n      currency: '',\n      bankName: '',\n      accountHolderName: '',\n      accountType: 'checking',\n      isPrimary: false\n    });\n    setFormErrors({});\n  };\n\n  const startEdit = (account: BankAccount) => {\n    setFormData({\n      accountName: account.accountName,\n      currency: account.currency,\n      bankName: account.bankName,\n      accountHolderName: account.accountHolderName,\n      accountType: account.accountType || 'checking',\n      isPrimary: account.isPrimary,\n      iban: account.iban || '',\n      bic: account.bic || '',\n      routingNumber: account.routingNumber || '',\n      accountNumber: account.accountNumber || '',\n      rut: account.rut || '',\n      bankCode: account.bankCode || '',\n      clabe: account.clabe || '',\n      sortCode: account.sortCode || '',\n      ukAccountNumber: account.ukAccountNumber || ''\n    });\n    setEditingAccount(account);\n    setShowAddForm(true);\n  };\n\n  const renderCurrencySpecificFields = () => {\n    if (!formData.currency || !CURRENCY_CONFIGS[formData.currency as keyof typeof CURRENCY_CONFIGS]) {\n      return null;\n    }\n\n    const config = CURRENCY_CONFIGS[formData.currency as keyof typeof CURRENCY_CONFIGS];\n\n    return (\n      <div className=\"space-y-4\">\n        <h4 className=\"font-medium text-sm text-gray-700\">\n          {formData.currency} Account Details\n        </h4>\n        {config.requiredFields.map((field) => (\n          <div key={field}>\n            <Label htmlFor={field}>\n              {config.fieldLabels[field as keyof typeof config.fieldLabels]}\n            </Label>\n            <Input\n              id={field}\n              value={formData[field as keyof BankAccountFormData] as string || ''}\n              onChange={(e) => setFormData(prev => ({ ...prev, [field]: e.target.value }))}\n              className={formErrors[field] ? 'border-red-500' : ''}\n            />\n            {formErrors[field] && (\n              <p className=\"text-sm text-red-500 mt-1\">{formErrors[field]}</p>\n            )}\n          </div>\n        ))}\n      </div>\n    );\n  };\n\n  const hasVerifiedAccount = bankAccounts.some(account => account.isVerified);\n  const canProceed = !requireVerification || hasVerifiedAccount || bankAccounts.length > 0;\n\n  if (loading) {\n    return (\n      <Card className=\"w-full max-w-2xl mx-auto\">\n        <CardContent className=\"p-6\">\n          <div className=\"text-center\">Loading bank accounts...</div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  return (\n    <div className=\"w-full max-w-2xl mx-auto space-y-6\">\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            Bank Account Setup\n            {hasVerifiedAccount && <CheckCircle className=\"h-5 w-5 text-green-500\" />}\n          </CardTitle>\n          <CardDescription>\n            {requireVerification \n              ? \"You need at least one verified bank account to send and receive transfers.\"\n              : \"Add your bank accounts to enable transfers in different currencies.\"\n            }\n          </CardDescription>\n        </CardHeader>\n        <CardContent className=\"space-y-4\">\n          {/* Existing Bank Accounts */}\n          {bankAccounts.length > 0 && (\n            <div className=\"space-y-3\">\n              <h3 className=\"font-medium\">Your Bank Accounts</h3>\n              {bankAccounts.map((account) => (\n                <div key={account.id} className=\"border rounded-lg p-4 space-y-2\">\n                  <div className=\"flex items-center justify-between\">\n                    <div className=\"flex items-center gap-2\">\n                      <h4 className=\"font-medium\">{account.accountName}</h4>\n                      <Badge variant={account.isPrimary ? \"default\" : \"secondary\"}>\n                        {account.currency}\n                      </Badge>\n                      {account.isPrimary && (\n                        <Badge variant=\"outline\">Primary</Badge>\n                      )}\n                    </div>\n                    <div className=\"flex items-center gap-2\">\n                      {account.isVerified ? (\n                        <CheckCircle className=\"h-4 w-4 text-green-500\" />\n                      ) : (\n                        <AlertCircle className=\"h-4 w-4 text-yellow-500\" />\n                      )}\n                      <Button\n                        variant=\"ghost\"\n                        size=\"sm\"\n                        onClick={() => startEdit(account)}\n                      >\n                        <Edit className=\"h-4 w-4\" />\n                      </Button>\n                      <Button\n                        variant=\"ghost\"\n                        size=\"sm\"\n                        onClick={() => handleDelete(account.id)}\n                      >\n                        <Trash2 className=\"h-4 w-4\" />\n                      </Button>\n                    </div>\n                  </div>\n                  <div className=\"text-sm text-gray-600\">\n                    <p>{account.bankName} • {account.accountHolderName}</p>\n                    <p>Status: {account.isVerified ? 'Verified' : 'Pending Verification'}</p>\n                  </div>\n                </div>\n              ))}\n            </div>\n          )}\n\n          {/* Add New Account Button */}\n          {!showAddForm && (\n            <Button\n              onClick={() => {\n                resetForm();\n                setShowAddForm(true);\n              }}\n              className=\"w-full\"\n              variant=\"outline\"\n            >\n              <Plus className=\"h-4 w-4 mr-2\" />\n              Add Bank Account\n            </Button>\n          )}\n\n          {/* Add/Edit Form */}\n          {showAddForm && (\n            <Card>\n              <CardHeader>\n                <CardTitle>\n                  {editingAccount ? 'Edit Bank Account' : 'Add New Bank Account'}\n                </CardTitle>\n              </CardHeader>\n              <CardContent>\n                <form onSubmit={handleSubmit} className=\"space-y-4\">\n                  {formErrors.general && (\n                    <div className=\"p-3 bg-red-50 border border-red-200 rounded-md\">\n                      <p className=\"text-sm text-red-600\">{formErrors.general}</p>\n                    </div>\n                  )}\n\n                  <div>\n                    <Label htmlFor=\"accountName\">Account Name</Label>\n                    <Input\n                      id=\"accountName\"\n                      value={formData.accountName}\n                      onChange={(e) => setFormData(prev => ({ ...prev, accountName: e.target.value }))}\n                      placeholder=\"e.g., My Primary USD Account\"\n                      className={formErrors.accountName ? 'border-red-500' : ''}\n                    />\n                    {formErrors.accountName && (\n                      <p className=\"text-sm text-red-500 mt-1\">{formErrors.accountName}</p>\n                    )}\n                  </div>\n\n                  <div>\n                    <Label htmlFor=\"currency\">Currency</Label>\n                    <Select\n                      value={formData.currency}\n                      onValueChange={(value) => setFormData(prev => ({ ...prev, currency: value }))}\n                    >\n                      <SelectTrigger className={formErrors.currency ? 'border-red-500' : ''}>\n                        <SelectValue placeholder=\"Select currency\" />\n                      </SelectTrigger>\n                      <SelectContent>\n                        {SUPPORTED_CURRENCIES.map((currency) => (\n                          <SelectItem key={currency.code} value={currency.code}>\n                            {currency.code} - {currency.name}\n                          </SelectItem>\n                        ))}\n                      </SelectContent>\n                    </Select>\n                    {formErrors.currency && (\n                      <p className=\"text-sm text-red-500 mt-1\">{formErrors.currency}</p>\n                    )}\n                  </div>\n\n                  <div>\n                    <Label htmlFor=\"bankName\">Bank Name</Label>\n                    <Input\n                      id=\"bankName\"\n                      value={formData.bankName}\n                      onChange={(e) => setFormData(prev => ({ ...prev, bankName: e.target.value }))}\n                      placeholder=\"e.g., Chase Bank\"\n                      className={formErrors.bankName ? 'border-red-500' : ''}\n                    />\n                    {formErrors.bankName && (\n                      <p className=\"text-sm text-red-500 mt-1\">{formErrors.bankName}</p>\n                    )}\n                  </div>\n\n                  <div>\n                    <Label htmlFor=\"accountHolderName\">Account Holder Name</Label>\n                    <Input\n                      id=\"accountHolderName\"\n                      value={formData.accountHolderName}\n                      onChange={(e) => setFormData(prev => ({ ...prev, accountHolderName: e.target.value }))}\n                      placeholder=\"Full name as it appears on the account\"\n                      className={formErrors.accountHolderName ? 'border-red-500' : ''}\n                    />\n                    {formErrors.accountHolderName && (\n                      <p className=\"text-sm text-red-500 mt-1\">{formErrors.accountHolderName}</p>\n                    )}\n                  </div>\n\n                  <div>\n                    <Label htmlFor=\"accountType\">Account Type</Label>\n                    <Select\n                      value={formData.accountType}\n                      onValueChange={(value) => setFormData(prev => ({ ...prev, accountType: value }))}\n                    >\n                      <SelectTrigger>\n                        <SelectValue />\n                      </SelectTrigger>\n                      <SelectContent>\n                        <SelectItem value=\"checking\">Checking</SelectItem>\n                        <SelectItem value=\"savings\">Savings</SelectItem>\n                      </SelectContent>\n                    </Select>\n                  </div>\n\n                  {renderCurrencySpecificFields()}\n\n                  <div className=\"flex items-center space-x-2\">\n                    <input\n                      type=\"checkbox\"\n                      id=\"isPrimary\"\n                      checked={formData.isPrimary}\n                      onChange={(e) => setFormData(prev => ({ ...prev, isPrimary: e.target.checked }))}\n                      className=\"rounded\"\n                    />\n                    <Label htmlFor=\"isPrimary\">Set as primary account for this currency</Label>\n                  </div>\n\n                  <div className=\"flex gap-2\">\n                    <Button type=\"submit\" disabled={submitting}>\n                      {submitting ? 'Saving...' : (editingAccount ? 'Update Account' : 'Add Account')}\n                    </Button>\n                    <Button\n                      type=\"button\"\n                      variant=\"outline\"\n                      onClick={() => {\n                        setShowAddForm(false);\n                        setEditingAccount(null);\n                        resetForm();\n                      }}\n                    >\n                      Cancel\n                    </Button>\n                  </div>\n                </form>\n              </CardContent>\n            </Card>\n          )}\n\n          {/* Action Buttons */}\n          <div className=\"flex gap-2 pt-4\">\n            {canProceed && onComplete && (\n              <Button onClick={onComplete} className=\"flex-1\">\n                {hasVerifiedAccount ? 'Continue' : 'Continue with Unverified Account'}\n              </Button>\n            )}\n            {onSkip && !requireVerification && (\n              <Button variant=\"outline\" onClick={onSkip}>\n                Skip for Now\n              </Button>\n            )}\n          </div>\n\n          {!canProceed && requireVerification && (\n            <div className=\"p-4 bg-yellow-50 border border-yellow-200 rounded-md\">\n              <div className=\"flex items-center gap-2\">\n                <AlertCircle className=\"h-4 w-4 text-yellow-600\" />\n                <p className=\"text-sm text-yellow-700\">\n                  You need to add and verify at least one bank account before you can proceed.\n                </p>\n              </div>\n            </div>\n          )}\n        </CardContent>\n      </Card>\n    </div>\n  );\n}"],"names":[],"mappings":"AAAA,oDAAoD;;;;;AAGpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AATA;;;;;;;;;;AAuDA,MAAM,uBAAuB;IAC3B;QAAE,MAAM;QAAO,MAAM;QAAa,SAAS;IAAK;IAChD;QAAE,MAAM;QAAO,MAAM;QAAQ,SAAS;IAAK;IAC3C;QAAE,MAAM;QAAO,MAAM;QAAgB,SAAS;IAAK;IACnD;QAAE,MAAM;QAAO,MAAM;QAAgB,SAAS;IAAK;IACnD;QAAE,MAAM;QAAO,MAAM;QAAiB,SAAS;IAAK;CACrD;AAED,MAAM,mBAAmB;IACvB,KAAK;QACH,gBAAgB;YAAC;YAAiB;SAAgB;QAClD,aAAa;YACX,eAAe;YACf,eAAe;QACjB;QACA,cAAc;YAAC;YAAY;SAAU;IACvC;IACA,KAAK;QACH,gBAAgB;YAAC;YAAQ;SAAM;QAC/B,aAAa;YACX,MAAM;YACN,KAAK;QACP;QACA,cAAc;YAAC;YAAY;SAAU;IACvC;IACA,KAAK;QACH,gBAAgB;YAAC;YAAO;YAAY;SAAgB;QACpD,aAAa;YACX,KAAK;YACL,UAAU;YACV,eAAe;QACjB;QACA,cAAc;YAAC;YAAY;SAAU;IACvC;IACA,KAAK;QACH,gBAAgB;YAAC;SAAQ;QACzB,aAAa;YACX,OAAO;QACT;QACA,cAAc;YAAC;YAAY;SAAU;IACvC;IACA,KAAK;QACH,gBAAgB;YAAC;YAAY;SAAkB;QAC/C,aAAa;YACX,UAAU;YACV,iBAAiB;QACnB;QACA,cAAc;YAAC;YAAY;SAAU;IACvC;AACF;AAQe,SAAS,sBAAsB,EAC5C,UAAU,EACV,MAAM,EACN,sBAAsB,KAAK,EACA;IAC3B,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB,EAAE;IAClE,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC/C,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAsB;IACzE,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAuB;QAC5D,aAAa;QACb,UAAU;QACV,UAAU;QACV,mBAAmB;QACnB,aAAa;QACb,WAAW;IACb;IACA,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAA0B,CAAC;IACtE,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAE7C,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR;IACF,GAAG,EAAE;IAEL,MAAM,oBAAoB;QACxB,IAAI;YACF,WAAW;YACX,MAAM,WAAW,MAAM,MAAM,+BAA+B;gBAC1D,SAAS;oBACP,gBAAgB;gBAElB;YACF;YAEA,IAAI,SAAS,EAAE,EAAE;gBACf,MAAM,OAAO,MAAM,SAAS,IAAI;gBAChC,gBAAgB,KAAK,YAAY,IAAI,EAAE;YACzC,OAAO;gBACL,QAAQ,KAAK,CAAC;YAChB;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,iCAAiC;QACjD,SAAU;YACR,WAAW;QACb;IACF;IAEA,MAAM,eAAe;QACnB,MAAM,SAAiC,CAAC;QAExC,IAAI,CAAC,SAAS,WAAW,CAAC,IAAI,IAAI;YAChC,OAAO,WAAW,GAAG;QACvB;QAEA,IAAI,CAAC,SAAS,QAAQ,EAAE;YACtB,OAAO,QAAQ,GAAG;QACpB;QAEA,IAAI,CAAC,SAAS,QAAQ,CAAC,IAAI,IAAI;YAC7B,OAAO,QAAQ,GAAG;QACpB;QAEA,IAAI,CAAC,SAAS,iBAAiB,CAAC,IAAI,IAAI;YACtC,OAAO,iBAAiB,GAAG;QAC7B;QAEA,oCAAoC;QACpC,IAAI,SAAS,QAAQ,IAAI,gBAAgB,CAAC,SAAS,QAAQ,CAAkC,EAAE;YAC7F,MAAM,SAAS,gBAAgB,CAAC,SAAS,QAAQ,CAAkC;YAEnF,KAAK,MAAM,SAAS,OAAO,cAAc,CAAE;gBACzC,IAAI,CAAC,QAAQ,CAAC,MAAmC,EAAE;oBACjD,MAAM,CAAC,MAAM,GAAG,GAAG,OAAO,WAAW,CAAC,MAAyC,CAAC,YAAY,CAAC;gBAC/F;YACF;QACF;QAEA,cAAc;QACd,OAAO,OAAO,IAAI,CAAC,QAAQ,MAAM,KAAK;IACxC;IAEA,MAAM,eAAe,OAAO;QAC1B,EAAE,cAAc;QAEhB,IAAI,CAAC,gBAAgB;YACnB;QACF;QAEA,cAAc;QAEd,IAAI;YACF,MAAM,MAAM,iBACR,CAAC,4BAA4B,EAAE,eAAe,EAAE,EAAE,GAClD;YAEJ,MAAM,SAAS,iBAAiB,QAAQ;YAExC,MAAM,WAAW,MAAM,MAAM,KAAK;gBAChC;gBACA,SAAS;oBACP,gBAAgB;gBAElB;gBACA,MAAM,KAAK,SAAS,CAAC;YACvB;YAEA,IAAI,SAAS,EAAE,EAAE;gBACf,MAAM;gBACN;gBACA,eAAe;gBACf,kBAAkB;YACpB,OAAO;gBACL,MAAM,YAAY,MAAM,SAAS,IAAI;gBACrC,QAAQ,KAAK,CAAC,gCAAgC;gBAC9C,iCAAiC;gBACjC,IAAI,UAAU,OAAO,EAAE;oBACrB,cAAc;wBAAE,SAAS,UAAU,OAAO;oBAAC;gBAC7C;YACF;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,8BAA8B;YAC5C,cAAc;gBAAE,SAAS;YAAiD;QAC5E,SAAU;YACR,cAAc;QAChB;IACF;IAEA,MAAM,eAAe,OAAO;QAC1B,IAAI,CAAC,QAAQ,uDAAuD;YAClE;QACF;QAEA,IAAI;YACF,MAAM,WAAW,MAAM,MAAM,CAAC,4BAA4B,EAAE,WAAW,EAAE;gBACvE,QAAQ;gBACR,SAAS;oBACP,gBAAgB;gBAElB;YACF;YAEA,IAAI,SAAS,EAAE,EAAE;gBACf,MAAM;YACR,OAAO;gBACL,QAAQ,KAAK,CAAC;YAChB;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,gCAAgC;QAChD;IACF;IAEA,MAAM,YAAY;QAChB,YAAY;YACV,aAAa;YACb,UAAU;YACV,UAAU;YACV,mBAAmB;YACnB,aAAa;YACb,WAAW;QACb;QACA,cAAc,CAAC;IACjB;IAEA,MAAM,YAAY,CAAC;QACjB,YAAY;YACV,aAAa,QAAQ,WAAW;YAChC,UAAU,QAAQ,QAAQ;YAC1B,UAAU,QAAQ,QAAQ;YAC1B,mBAAmB,QAAQ,iBAAiB;YAC5C,aAAa,QAAQ,WAAW,IAAI;YACpC,WAAW,QAAQ,SAAS;YAC5B,MAAM,QAAQ,IAAI,IAAI;YACtB,KAAK,QAAQ,GAAG,IAAI;YACpB,eAAe,QAAQ,aAAa,IAAI;YACxC,eAAe,QAAQ,aAAa,IAAI;YACxC,KAAK,QAAQ,GAAG,IAAI;YACpB,UAAU,QAAQ,QAAQ,IAAI;YAC9B,OAAO,QAAQ,KAAK,IAAI;YACxB,UAAU,QAAQ,QAAQ,IAAI;YAC9B,iBAAiB,QAAQ,eAAe,IAAI;QAC9C;QACA,kBAAkB;QAClB,eAAe;IACjB;IAEA,MAAM,+BAA+B;QACnC,IAAI,CAAC,SAAS,QAAQ,IAAI,CAAC,gBAAgB,CAAC,SAAS,QAAQ,CAAkC,EAAE;YAC/F,OAAO;QACT;QAEA,MAAM,SAAS,gBAAgB,CAAC,SAAS,QAAQ,CAAkC;QAEnF,qBACE,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAG,WAAU;;wBACX,SAAS,QAAQ;wBAAC;;;;;;;gBAEpB,OAAO,cAAc,CAAC,GAAG,CAAC,CAAC,sBAC1B,8OAAC;;0CACC,8OAAC,oJAAA,CAAA,QAAK;gCAAC,SAAS;0CACb,OAAO,WAAW,CAAC,MAAyC;;;;;;0CAE/D,8OAAC,oJAAA,CAAA,QAAK;gCACJ,IAAI;gCACJ,OAAO,QAAQ,CAAC,MAAmC,IAAc;gCACjE,UAAU,CAAC,IAAM,YAAY,CAAA,OAAQ,CAAC;4CAAE,GAAG,IAAI;4CAAE,CAAC,MAAM,EAAE,EAAE,MAAM,CAAC,KAAK;wCAAC,CAAC;gCAC1E,WAAW,UAAU,CAAC,MAAM,GAAG,mBAAmB;;;;;;4BAEnD,UAAU,CAAC,MAAM,kBAChB,8OAAC;gCAAE,WAAU;0CAA6B,UAAU,CAAC,MAAM;;;;;;;uBAXrD;;;;;;;;;;;IAiBlB;IAEA,MAAM,qBAAqB,aAAa,IAAI,CAAC,CAAA,UAAW,QAAQ,UAAU;IAC1E,MAAM,aAAa,CAAC,uBAAuB,sBAAsB,aAAa,MAAM,GAAG;IAEvF,IAAI,SAAS;QACX,qBACE,8OAAC,mJAAA,CAAA,OAAI;YAAC,WAAU;sBACd,cAAA,8OAAC,mJAAA,CAAA,cAAW;gBAAC,WAAU;0BACrB,cAAA,8OAAC;oBAAI,WAAU;8BAAc;;;;;;;;;;;;;;;;IAIrC;IAEA,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC,mJAAA,CAAA,OAAI;;8BACH,8OAAC,mJAAA,CAAA,aAAU;;sCACT,8OAAC,mJAAA,CAAA,YAAS;4BAAC,WAAU;;gCAA0B;gCAE5C,oCAAsB,8OAAC,2NAAA,CAAA,cAAW;oCAAC,WAAU;;;;;;;;;;;;sCAEhD,8OAAC,mJAAA,CAAA,kBAAe;sCACb,sBACG,+EACA;;;;;;;;;;;;8BAIR,8OAAC,mJAAA,CAAA,cAAW;oBAAC,WAAU;;wBAEpB,aAAa,MAAM,GAAG,mBACrB,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAG,WAAU;8CAAc;;;;;;gCAC3B,aAAa,GAAG,CAAC,CAAC,wBACjB,8OAAC;wCAAqB,WAAU;;0DAC9B,8OAAC;gDAAI,WAAU;;kEACb,8OAAC;wDAAI,WAAU;;0EACb,8OAAC;gEAAG,WAAU;0EAAe,QAAQ,WAAW;;;;;;0EAChD,8OAAC,oJAAA,CAAA,QAAK;gEAAC,SAAS,QAAQ,SAAS,GAAG,YAAY;0EAC7C,QAAQ,QAAQ;;;;;;4DAElB,QAAQ,SAAS,kBAChB,8OAAC,oJAAA,CAAA,QAAK;gEAAC,SAAQ;0EAAU;;;;;;;;;;;;kEAG7B,8OAAC;wDAAI,WAAU;;4DACZ,QAAQ,UAAU,iBACjB,8OAAC,2NAAA,CAAA,cAAW;gEAAC,WAAU;;;;;qFAEvB,8OAAC,oNAAA,CAAA,cAAW;gEAAC,WAAU;;;;;;0EAEzB,8OAAC,qJAAA,CAAA,SAAM;gEACL,SAAQ;gEACR,MAAK;gEACL,SAAS,IAAM,UAAU;0EAEzB,cAAA,8OAAC,2MAAA,CAAA,OAAI;oEAAC,WAAU;;;;;;;;;;;0EAElB,8OAAC,qJAAA,CAAA,SAAM;gEACL,SAAQ;gEACR,MAAK;gEACL,SAAS,IAAM,aAAa,QAAQ,EAAE;0EAEtC,cAAA,8OAAC,0MAAA,CAAA,SAAM;oEAAC,WAAU;;;;;;;;;;;;;;;;;;;;;;;0DAIxB,8OAAC;gDAAI,WAAU;;kEACb,8OAAC;;4DAAG,QAAQ,QAAQ;4DAAC;4DAAI,QAAQ,iBAAiB;;;;;;;kEAClD,8OAAC;;4DAAE;4DAAS,QAAQ,UAAU,GAAG,aAAa;;;;;;;;;;;;;;uCAnCxC,QAAQ,EAAE;;;;;;;;;;;wBA2CzB,CAAC,6BACA,8OAAC,qJAAA,CAAA,SAAM;4BACL,SAAS;gCACP;gCACA,eAAe;4BACjB;4BACA,WAAU;4BACV,SAAQ;;8CAER,8OAAC,kMAAA,CAAA,OAAI;oCAAC,WAAU;;;;;;gCAAiB;;;;;;;wBAMpC,6BACC,8OAAC,mJAAA,CAAA,OAAI;;8CACH,8OAAC,mJAAA,CAAA,aAAU;8CACT,cAAA,8OAAC,mJAAA,CAAA,YAAS;kDACP,iBAAiB,sBAAsB;;;;;;;;;;;8CAG5C,8OAAC,mJAAA,CAAA,cAAW;8CACV,cAAA,8OAAC;wCAAK,UAAU;wCAAc,WAAU;;4CACrC,WAAW,OAAO,kBACjB,8OAAC;gDAAI,WAAU;0DACb,cAAA,8OAAC;oDAAE,WAAU;8DAAwB,WAAW,OAAO;;;;;;;;;;;0DAI3D,8OAAC;;kEACC,8OAAC,oJAAA,CAAA,QAAK;wDAAC,SAAQ;kEAAc;;;;;;kEAC7B,8OAAC,oJAAA,CAAA,QAAK;wDACJ,IAAG;wDACH,OAAO,SAAS,WAAW;wDAC3B,UAAU,CAAC,IAAM,YAAY,CAAA,OAAQ,CAAC;oEAAE,GAAG,IAAI;oEAAE,aAAa,EAAE,MAAM,CAAC,KAAK;gEAAC,CAAC;wDAC9E,aAAY;wDACZ,WAAW,WAAW,WAAW,GAAG,mBAAmB;;;;;;oDAExD,WAAW,WAAW,kBACrB,8OAAC;wDAAE,WAAU;kEAA6B,WAAW,WAAW;;;;;;;;;;;;0DAIpE,8OAAC;;kEACC,8OAAC,oJAAA,CAAA,QAAK;wDAAC,SAAQ;kEAAW;;;;;;kEAC1B,8OAAC,qJAAA,CAAA,SAAM;wDACL,OAAO,SAAS,QAAQ;wDACxB,eAAe,CAAC,QAAU,YAAY,CAAA,OAAQ,CAAC;oEAAE,GAAG,IAAI;oEAAE,UAAU;gEAAM,CAAC;;0EAE3E,8OAAC,qJAAA,CAAA,gBAAa;gEAAC,WAAW,WAAW,QAAQ,GAAG,mBAAmB;0EACjE,cAAA,8OAAC,qJAAA,CAAA,cAAW;oEAAC,aAAY;;;;;;;;;;;0EAE3B,8OAAC,qJAAA,CAAA,gBAAa;0EACX,qBAAqB,GAAG,CAAC,CAAC,yBACzB,8OAAC,qJAAA,CAAA,aAAU;wEAAqB,OAAO,SAAS,IAAI;;4EACjD,SAAS,IAAI;4EAAC;4EAAI,SAAS,IAAI;;uEADjB,SAAS,IAAI;;;;;;;;;;;;;;;;oDAMnC,WAAW,QAAQ,kBAClB,8OAAC;wDAAE,WAAU;kEAA6B,WAAW,QAAQ;;;;;;;;;;;;0DAIjE,8OAAC;;kEACC,8OAAC,oJAAA,CAAA,QAAK;wDAAC,SAAQ;kEAAW;;;;;;kEAC1B,8OAAC,oJAAA,CAAA,QAAK;wDACJ,IAAG;wDACH,OAAO,SAAS,QAAQ;wDACxB,UAAU,CAAC,IAAM,YAAY,CAAA,OAAQ,CAAC;oEAAE,GAAG,IAAI;oEAAE,UAAU,EAAE,MAAM,CAAC,KAAK;gEAAC,CAAC;wDAC3E,aAAY;wDACZ,WAAW,WAAW,QAAQ,GAAG,mBAAmB;;;;;;oDAErD,WAAW,QAAQ,kBAClB,8OAAC;wDAAE,WAAU;kEAA6B,WAAW,QAAQ;;;;;;;;;;;;0DAIjE,8OAAC;;kEACC,8OAAC,oJAAA,CAAA,QAAK;wDAAC,SAAQ;kEAAoB;;;;;;kEACnC,8OAAC,oJAAA,CAAA,QAAK;wDACJ,IAAG;wDACH,OAAO,SAAS,iBAAiB;wDACjC,UAAU,CAAC,IAAM,YAAY,CAAA,OAAQ,CAAC;oEAAE,GAAG,IAAI;oEAAE,mBAAmB,EAAE,MAAM,CAAC,KAAK;gEAAC,CAAC;wDACpF,aAAY;wDACZ,WAAW,WAAW,iBAAiB,GAAG,mBAAmB;;;;;;oDAE9D,WAAW,iBAAiB,kBAC3B,8OAAC;wDAAE,WAAU;kEAA6B,WAAW,iBAAiB;;;;;;;;;;;;0DAI1E,8OAAC;;kEACC,8OAAC,oJAAA,CAAA,QAAK;wDAAC,SAAQ;kEAAc;;;;;;kEAC7B,8OAAC,qJAAA,CAAA,SAAM;wDACL,OAAO,SAAS,WAAW;wDAC3B,eAAe,CAAC,QAAU,YAAY,CAAA,OAAQ,CAAC;oEAAE,GAAG,IAAI;oEAAE,aAAa;gEAAM,CAAC;;0EAE9E,8OAAC,qJAAA,CAAA,gBAAa;0EACZ,cAAA,8OAAC,qJAAA,CAAA,cAAW;;;;;;;;;;0EAEd,8OAAC,qJAAA,CAAA,gBAAa;;kFACZ,8OAAC,qJAAA,CAAA,aAAU;wEAAC,OAAM;kFAAW;;;;;;kFAC7B,8OAAC,qJAAA,CAAA,aAAU;wEAAC,OAAM;kFAAU;;;;;;;;;;;;;;;;;;;;;;;;4CAKjC;0DAED,8OAAC;gDAAI,WAAU;;kEACb,8OAAC;wDACC,MAAK;wDACL,IAAG;wDACH,SAAS,SAAS,SAAS;wDAC3B,UAAU,CAAC,IAAM,YAAY,CAAA,OAAQ,CAAC;oEAAE,GAAG,IAAI;oEAAE,WAAW,EAAE,MAAM,CAAC,OAAO;gEAAC,CAAC;wDAC9E,WAAU;;;;;;kEAEZ,8OAAC,oJAAA,CAAA,QAAK;wDAAC,SAAQ;kEAAY;;;;;;;;;;;;0DAG7B,8OAAC;gDAAI,WAAU;;kEACb,8OAAC,qJAAA,CAAA,SAAM;wDAAC,MAAK;wDAAS,UAAU;kEAC7B,aAAa,cAAe,iBAAiB,mBAAmB;;;;;;kEAEnE,8OAAC,qJAAA,CAAA,SAAM;wDACL,MAAK;wDACL,SAAQ;wDACR,SAAS;4DACP,eAAe;4DACf,kBAAkB;4DAClB;wDACF;kEACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;sCAUX,8OAAC;4BAAI,WAAU;;gCACZ,cAAc,4BACb,8OAAC,qJAAA,CAAA,SAAM;oCAAC,SAAS;oCAAY,WAAU;8CACpC,qBAAqB,aAAa;;;;;;gCAGtC,UAAU,CAAC,qCACV,8OAAC,qJAAA,CAAA,SAAM;oCAAC,SAAQ;oCAAU,SAAS;8CAAQ;;;;;;;;;;;;wBAM9C,CAAC,cAAc,qCACd,8OAAC;4BAAI,WAAU;sCACb,cAAA,8OAAC;gCAAI,WAAU;;kDACb,8OAAC,oNAAA,CAAA,cAAW;wCAAC,WAAU;;;;;;kDACvB,8OAAC;wCAAE,WAAU;kDAA0B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAUvD","debugId":null}},
    {"offset": {"line": 6301, "column": 0}, "map": {"version":3,"sources":["file:///home/faros/stealth-money/packages/web/src/components/features/OnboardingGate.tsx"],"sourcesContent":["// src/components/features/OnboardingGate.tsx\n'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport BankAccountOnboarding from './BankAccountOnboarding';\n\ninterface BankAccount {\n  id: string;\n  currency: string;\n  isVerified: boolean;\n  isActive: boolean;\n}\n\ninterface OnboardingGateProps {\n  children: React.ReactNode;\n  requireVerification?: boolean;\n  onOnboardingComplete?: () => void;\n}\n\nexport default function OnboardingGate({ \n  children, \n  requireVerification = false,\n  onOnboardingComplete \n}: OnboardingGateProps) {\n  const [loading, setLoading] = useState(true);\n  const [needsOnboarding, setNeedsOnboarding] = useState(false);\n  const [bankAccounts, setBankAccounts] = useState<BankAccount[]>([]);\n\n  useEffect(() => {\n    checkOnboardingStatus();\n  }, []);\n\n  const checkOnboardingStatus = async () => {\n    try {\n      setLoading(true);\n      const response = await fetch('/api/users/me/bank-accounts', {\n        headers: {\n          'Content-Type': 'application/json',\n          // Add authorization header if needed\n        }\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        const accounts = data.bankAccounts || [];\n        setBankAccounts(accounts);\n        \n        // Check if user needs onboarding\n        const hasAccounts = accounts.length > 0;\n        const hasVerifiedAccount = accounts.some((account: BankAccount) => account.isVerified);\n        \n        if (requireVerification) {\n          setNeedsOnboarding(!hasVerifiedAccount);\n        } else {\n          setNeedsOnboarding(!hasAccounts);\n        }\n      } else if (response.status === 401) {\n        // User not authenticated, let them proceed (auth will be handled elsewhere)\n        setNeedsOnboarding(false);\n      } else {\n        console.error('Failed to check onboarding status');\n        setNeedsOnboarding(false); // Don't block if we can't check\n      }\n    } catch (error) {\n      console.error('Error checking onboarding status:', error);\n      setNeedsOnboarding(false); // Don't block if we can't check\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleOnboardingComplete = () => {\n    setNeedsOnboarding(false);\n    if (onOnboardingComplete) {\n      onOnboardingComplete();\n    }\n  };\n\n  const handleSkip = () => {\n    setNeedsOnboarding(false);\n  };\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center min-h-[200px]\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mx-auto mb-2\"></div>\n          <p className=\"text-gray-600\">Checking account status...</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (needsOnboarding) {\n    return (\n      <BankAccountOnboarding\n        onComplete={handleOnboardingComplete}\n        onSkip={!requireVerification ? handleSkip : undefined}\n        requireVerification={requireVerification}\n      />\n    );\n  }\n\n  return <>{children}</>;\n}"],"names":[],"mappings":"AAAA,6CAA6C;;;;;AAG7C;AACA;AAHA;;;;AAkBe,SAAS,eAAe,EACrC,QAAQ,EACR,sBAAsB,KAAK,EAC3B,oBAAoB,EACA;IACpB,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvD,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB,EAAE;IAElE,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR;IACF,GAAG,EAAE;IAEL,MAAM,wBAAwB;QAC5B,IAAI;YACF,WAAW;YACX,MAAM,WAAW,MAAM,MAAM,+BAA+B;gBAC1D,SAAS;oBACP,gBAAgB;gBAElB;YACF;YAEA,IAAI,SAAS,EAAE,EAAE;gBACf,MAAM,OAAO,MAAM,SAAS,IAAI;gBAChC,MAAM,WAAW,KAAK,YAAY,IAAI,EAAE;gBACxC,gBAAgB;gBAEhB,iCAAiC;gBACjC,MAAM,cAAc,SAAS,MAAM,GAAG;gBACtC,MAAM,qBAAqB,SAAS,IAAI,CAAC,CAAC,UAAyB,QAAQ,UAAU;gBAErF,IAAI,qBAAqB;oBACvB,mBAAmB,CAAC;gBACtB,OAAO;oBACL,mBAAmB,CAAC;gBACtB;YACF,OAAO,IAAI,SAAS,MAAM,KAAK,KAAK;gBAClC,4EAA4E;gBAC5E,mBAAmB;YACrB,OAAO;gBACL,QAAQ,KAAK,CAAC;gBACd,mBAAmB,QAAQ,gCAAgC;YAC7D;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,qCAAqC;YACnD,mBAAmB,QAAQ,gCAAgC;QAC7D,SAAU;YACR,WAAW;QACb;IACF;IAEA,MAAM,2BAA2B;QAC/B,mBAAmB;QACnB,IAAI,sBAAsB;YACxB;QACF;IACF;IAEA,MAAM,aAAa;QACjB,mBAAmB;IACrB;IAEA,IAAI,SAAS;QACX,qBACE,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;;;;;;kCACf,8OAAC;wBAAE,WAAU;kCAAgB;;;;;;;;;;;;;;;;;IAIrC;IAEA,IAAI,iBAAiB;QACnB,qBACE,8OAAC,0KAAA,CAAA,UAAqB;YACpB,YAAY;YACZ,QAAQ,CAAC,sBAAsB,aAAa;YAC5C,qBAAqB;;;;;;IAG3B;IAEA,qBAAO;kBAAG;;AACZ","debugId":null}},
    {"offset": {"line": 6416, "column": 0}, "map": {"version":3,"sources":["file:///home/faros/stealth-money/packages/web/src/components/features/TransferFlowContainer.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState, useCallback } from \"react\";\nimport { TransferCalculator } from \"./TransferCalculator\";\nimport { RecipientForm } from \"./RecipientForm\";\nimport { PaymentForm } from \"./PaymentForm\";\nimport { TransferStatus } from \"./TransferStatus\";\nimport { ProgressIndicator } from \"./ProgressIndicator\";\nimport OnboardingGate from \"./OnboardingGate\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { ArrowLeft, AlertCircle } from \"lucide-react\";\n\n// Types for transfer flow state\nexport type TransferFlowStep = 'calculator' | 'recipient' | 'payment' | 'status';\n\nexport interface TransferCalculationData {\n  sendAmount: number;\n  receiveAmount: number;\n  sendCurrency: string;\n  receiveCurrency: string;\n  exchangeRate: number;\n  fees: number;\n  rateId: string;\n  rateValidUntil: string;\n  calculatorMode: 'send' | 'receive';\n  breakdown: {\n    sendAmountUSD: number;\n    fees: {\n      cardProcessing: number;\n      transfer: number;\n      payout: number;\n      total: number;\n    };\n    netAmountUSD: number;\n    exchangeRate: number;\n    receiveAmount: number;\n  };\n  estimatedArrival: string;\n}\n\nexport interface RecipientInfo {\n  name: string;\n  email: string;\n  bankAccount: {\n    iban: string;\n    bic: string;\n    bankName: string;\n    accountHolderName: string;\n    country: 'DE';\n  };\n}\n\nexport interface TransferFlowState {\n  currentStep: TransferFlowStep;\n  transferData: TransferCalculationData | null;\n  recipientData: RecipientInfo | null;\n  transferId: string | null;\n  completedSteps: TransferFlowStep[];\n  canGoBack: boolean;\n  isLoading: boolean;\n  error: string | null;\n}\n\ninterface TransferFlowContainerProps {\n  initialStep?: TransferFlowStep;\n  onComplete?: (transferId: string) => void;\n  className?: string;\n}\n\nexport function TransferFlowContainer({ \n  initialStep = 'calculator', \n  onComplete,\n  className = \"\"\n}: TransferFlowContainerProps) {\n  \n  // Transfer flow state\n  const [state, setState] = useState<TransferFlowState>({\n    currentStep: initialStep,\n    transferData: null,\n    recipientData: null,\n    transferId: null,\n    completedSteps: [],\n    canGoBack: false,\n    isLoading: false,\n    error: null,\n  });\n\n  // Helper function to update state\n  const updateState = useCallback((updates: Partial<TransferFlowState>) => {\n    setState(prev => ({ ...prev, ...updates }));\n  }, []);\n\n  // Navigation helpers\n  const goToStep = useCallback((step: TransferFlowStep) => {\n    updateState({ \n      currentStep: step,\n      canGoBack: step !== 'calculator',\n      error: null \n    });\n  }, [updateState]);\n\n  const goBack = useCallback(() => {\n    const stepOrder: TransferFlowStep[] = ['calculator', 'recipient', 'payment', 'status'];\n    const currentIndex = stepOrder.indexOf(state.currentStep);\n    \n    if (currentIndex > 0) {\n      const previousStep = stepOrder[currentIndex - 1];\n      goToStep(previousStep);\n    }\n  }, [state.currentStep, goToStep]);\n\n  const markStepCompleted = useCallback((step: TransferFlowStep) => {\n    setState(prev => ({\n      ...prev,\n      completedSteps: prev.completedSteps.includes(step) \n        ? prev.completedSteps \n        : [...prev.completedSteps, step]\n    }));\n  }, []);\n\n  // Step handlers\n  const handleCalculatorContinue = useCallback((data: {\n    sendAmount: number;\n    receiveAmount: number;\n    exchangeRate: number;\n    fees: number;\n    rateId: string;\n    calculatorMode: 'send' | 'receive';\n  }) => {\n    // Convert the calculator data to our full TransferCalculationData format\n    const transferData: TransferCalculationData = {\n      sendAmount: data.sendAmount,\n      receiveAmount: data.receiveAmount,\n      sendCurrency: 'USD', // Default for now\n      receiveCurrency: 'EUR', // Default for now\n      exchangeRate: data.exchangeRate,\n      fees: data.fees,\n      rateId: data.rateId,\n      rateValidUntil: '', // Will be populated by calculator\n      calculatorMode: data.calculatorMode,\n      breakdown: {\n        sendAmountUSD: data.sendAmount,\n        fees: {\n          cardProcessing: 0,\n          transfer: 0,\n          payout: 0,\n          total: data.fees,\n        },\n        netAmountUSD: data.sendAmount - data.fees,\n        exchangeRate: data.exchangeRate,\n        receiveAmount: data.receiveAmount,\n      },\n      estimatedArrival: '',\n    };\n    updateState({ \n      transferData: transferData,\n      isLoading: true \n    });\n    \n    // Mark calculator step as completed\n    markStepCompleted('calculator');\n    \n    // Simulate brief loading before moving to next step\n    setTimeout(() => {\n      updateState({ isLoading: false });\n      goToStep('recipient');\n    }, 500);\n  }, [updateState, markStepCompleted, goToStep]);\n\n  const handleRecipientBack = useCallback(() => {\n    goBack();\n  }, [goBack]);\n\n  const handleRecipientContinue = useCallback((recipientData: RecipientInfo) => {\n    updateState({ \n      recipientData,\n      isLoading: true \n    });\n    \n    // Mark recipient step as completed\n    markStepCompleted('recipient');\n    \n    // Simulate brief loading before moving to payment\n    setTimeout(() => {\n      updateState({ isLoading: false });\n      goToStep('payment');\n    }, 500);\n  }, [updateState, markStepCompleted, goToStep]);\n\n  const handlePaymentSuccess = useCallback(async (paymentData: { \n    cardDetails: {\n      number: string;\n      expiryMonth: number;\n      expiryYear: number;\n      cvv: string;\n    };\n    recipientInfo: RecipientInfo;\n  }) => {\n    updateState({ isLoading: true });\n    \n    try {\n      // Create transfer with all collected data\n      const API_URL = process.env.NEXT_PUBLIC_API_URL || 'http://localhost:4000';\n      const response = await fetch(`${API_URL}/api/transfers/create`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          sendAmount: state.transferData?.sendAmount,\n          rateId: state.transferData?.rateId,\n          cardDetails: paymentData.cardDetails,\n          recipientInfo: state.recipientData,\n        }),\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({}));\n        throw new Error(errorData.message || 'Failed to create transfer');\n      }\n\n      const result = await response.json();\n      \n      // Mark payment step as completed\n      markStepCompleted('payment');\n      \n      // Update state with transfer ID and move to status\n      updateState({ \n        transferId: result.transferId,\n        isLoading: false \n      });\n      \n      goToStep('status');\n      \n      // Call completion callback if provided\n      if (onComplete) {\n        onComplete(result.transferId);\n      }\n      \n    } catch (error) {\n      console.error('Transfer creation error:', error);\n      updateState({ \n        error: error instanceof Error ? error.message : 'Failed to create transfer',\n        isLoading: false \n      });\n    }\n  }, [state.transferData, state.recipientData, updateState, markStepCompleted, goToStep, onComplete]);\n\n\n\n  const handleStatusRefresh = useCallback(() => {\n    // Status refresh is handled by the TransferStatus component itself\n    console.log('Status refresh requested');\n  }, []);\n\n  const resetFlow = useCallback(() => {\n    setState({\n      currentStep: 'calculator',\n      transferData: null,\n      recipientData: null,\n      transferId: null,\n      completedSteps: [],\n      canGoBack: false,\n      isLoading: false,\n      error: null,\n    });\n  }, []);\n\n  // Render current step content\n  const renderStepContent = () => {\n    switch (state.currentStep) {\n      case 'calculator':\n        return (\n          <TransferCalculator\n            onContinue={handleCalculatorContinue}\n            isNavigating={state.isLoading}\n          />\n        );\n      \n      case 'recipient':\n        if (!state.transferData) {\n          return (\n            <Card className=\"w-full max-w-lg mx-auto\">\n              <CardContent className=\"py-8 text-center\">\n                <AlertCircle className=\"h-12 w-12 text-red-500 mx-auto mb-4\" />\n                <h3 className=\"text-lg font-semibold text-red-700 mb-2\">Missing Transfer Data</h3>\n                <p className=\"text-red-600 mb-4\">Please complete the calculator step first.</p>\n                <Button onClick={() => goToStep('calculator')} variant=\"outline\">\n                  Go to Calculator\n                </Button>\n              </CardContent>\n            </Card>\n          );\n        }\n        \n        return (\n          <RecipientForm\n            transferData={{\n              amount: state.transferData.sendAmount,\n              sourceCurrency: state.transferData.sendCurrency,\n              destCurrency: state.transferData.receiveCurrency,\n              rate: state.transferData.exchangeRate,\n              recipientAmount: state.transferData.receiveAmount,\n            }}\n            onBack={handleRecipientBack}\n            onContinue={handleRecipientContinue}\n          />\n        );\n      \n      case 'payment':\n        if (!state.transferData || !state.recipientData) {\n          return (\n            <Card className=\"w-full max-w-lg mx-auto\">\n              <CardContent className=\"py-8 text-center\">\n                <AlertCircle className=\"h-12 w-12 text-red-500 mx-auto mb-4\" />\n                <h3 className=\"text-lg font-semibold text-red-700 mb-2\">Missing Required Data</h3>\n                <p className=\"text-red-600 mb-4\">\n                  Please complete the calculator and recipient steps first.\n                </p>\n                <Button onClick={() => goToStep('calculator')} variant=\"outline\">\n                  Start Over\n                </Button>\n              </CardContent>\n            </Card>\n          );\n        }\n        \n        return (\n          <PaymentForm\n            sendAmount={state.transferData.sendAmount}\n            receiveAmount={state.transferData.receiveAmount}\n            exchangeRate={state.transferData.exchangeRate}\n            fees={state.transferData.fees}\n            rateId={state.transferData.rateId}\n            onSubmit={handlePaymentSuccess}\n            isLoading={state.isLoading}\n          />\n        );\n      \n      case 'status':\n        if (!state.transferId) {\n          return (\n            <Card className=\"w-full max-w-lg mx-auto\">\n              <CardContent className=\"py-8 text-center\">\n                <AlertCircle className=\"h-12 w-12 text-red-500 mx-auto mb-4\" />\n                <h3 className=\"text-lg font-semibold text-red-700 mb-2\">No Transfer Found</h3>\n                <p className=\"text-red-600 mb-4\">Transfer ID is missing.</p>\n                <Button onClick={resetFlow} variant=\"outline\">\n                  Start New Transfer\n                </Button>\n              </CardContent>\n            </Card>\n          );\n        }\n        \n        return (\n          <TransferStatus\n            transferId={state.transferId}\n            onRefresh={handleStatusRefresh}\n            autoRefresh={true}\n          />\n        );\n      \n      default:\n        return (\n          <Card className=\"w-full max-w-lg mx-auto\">\n            <CardContent className=\"py-8 text-center\">\n              <AlertCircle className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\n              <h3 className=\"text-lg font-semibold text-gray-700 mb-2\">Unknown Step</h3>\n              <p className=\"text-gray-600 mb-4\">Invalid step: {state.currentStep}</p>\n              <Button onClick={resetFlow} variant=\"outline\">\n                Start Over\n              </Button>\n            </CardContent>\n          </Card>\n        );\n    }\n  };\n\n  return (\n    <OnboardingGate requireVerification={false}>\n      <div className={`w-full max-w-4xl mx-auto space-y-6 ${className}`}>\n        {/* Progress Indicator */}\n        <ProgressIndicator\n          currentStep={state.currentStep}\n          completedSteps={state.completedSteps}\n          onStepClick={(step) => {\n            // Only allow navigation to completed steps or the current step\n            if (state.completedSteps.includes(step as TransferFlowStep) || step === state.currentStep) {\n              goToStep(step as TransferFlowStep);\n            }\n          }}\n        />\n        \n        {/* Back Button (except for calculator and status steps) */}\n        {state.canGoBack && state.currentStep !== 'status' && (\n          <div className=\"flex justify-start\">\n            <Button\n              variant=\"outline\"\n              onClick={goBack}\n              disabled={state.isLoading}\n              className=\"flex items-center gap-2\"\n            >\n              <ArrowLeft className=\"h-4 w-4\" />\n              Back\n            </Button>\n          </div>\n        )}\n        \n        {/* Global Error Display */}\n        {state.error && (\n          <Card className=\"border-red-200 bg-red-50\">\n            <CardContent className=\"py-4\">\n              <div className=\"flex items-center gap-2 text-red-700\">\n                <AlertCircle className=\"h-4 w-4\" />\n                <span className=\"font-medium\">Error</span>\n              </div>\n              <p className=\"text-red-600 mt-1\">{state.error}</p>\n              <Button\n                variant=\"outline\"\n                size=\"sm\"\n                onClick={() => updateState({ error: null })}\n                className=\"mt-2\"\n              >\n                Dismiss\n              </Button>\n            </CardContent>\n          </Card>\n        )}\n        \n        {/* Step Content */}\n        <div className=\"relative\">\n          {state.isLoading && (\n            <div className=\"absolute inset-0 bg-white/80 backdrop-blur-sm z-10 flex items-center justify-center rounded-lg\">\n              <div className=\"text-center\">\n                <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mx-auto mb-2\"></div>\n                <p className=\"text-sm text-gray-600\">Processing...</p>\n              </div>\n            </div>\n          )}\n          \n          {renderStepContent()}\n        </div>\n        \n        {/* Debug Info (only in development) */}\n        {process.env.NODE_ENV === 'development' && (\n          <Card className=\"border-gray-200 bg-gray-50\">\n            <CardContent className=\"py-4\">\n              <h4 className=\"font-medium text-gray-700 mb-2\">Debug Info</h4>\n              <div className=\"text-xs text-gray-600 space-y-1\">\n                <div>Current Step: {state.currentStep}</div>\n                <div>Completed Steps: {state.completedSteps.join(', ') || 'None'}</div>\n                <div>Has Transfer Data: {state.transferData ? 'Yes' : 'No'}</div>\n                <div>Has Recipient Data: {state.recipientData ? 'Yes' : 'No'}</div>\n                <div>Transfer ID: {state.transferId || 'None'}</div>\n              </div>\n            </CardContent>\n          </Card>\n        )}\n      </div>\n    </OnboardingGate>\n  );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 7138, "column": 0}, "map": {"version":3,"sources":["file:///home/faros/stealth-money/packages/web/src/components/ui/navigation.tsx"],"sourcesContent":["'use client';\n\nimport { useUser, UserButton } from '@clerk/nextjs';\nimport { Button } from '@/components/ui/button';\nimport Link from 'next/link';\n\nconst isClerkConfigured = process.env.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY && \n  !process.env.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY.includes('placeholder');\n\nfunction AuthenticatedNavigation() {\n  const { isSignedIn, isLoaded } = useUser();\n\n  if (!isLoaded) {\n    return (\n      <div className=\"flex items-center space-x-4\">\n        <div className=\"w-16 h-8 bg-gray-200 rounded animate-pulse\"></div>\n        <div className=\"w-8 h-8 bg-gray-200 rounded-full animate-pulse\"></div>\n      </div>\n    );\n  }\n\n  if (isSignedIn) {\n    return (\n      <div className=\"flex items-center space-x-4\">\n        <UserButton \n          appearance={{\n            elements: {\n              avatarBox: 'w-8 h-8',\n              userButtonPopoverCard: 'shadow-lg border',\n              userButtonPopoverActionButton: 'hover:bg-gray-50',\n            },\n          }}\n          afterSignOutUrl=\"/\"\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"flex items-center space-x-4\">\n      <Link href=\"/auth/sign-in\">\n        <Button variant=\"outline\" className=\"border-gray-300\">\n          Sign In\n        </Button>\n      </Link>\n      <Link href=\"/auth/sign-up\">\n        <Button className=\"bg-gradient-to-r from-blue-600 to-indigo-600 hover:from-blue-700 hover:to-indigo-700\">\n          Get Started\n        </Button>\n      </Link>\n    </div>\n  );\n}\n\nexport function Navigation() {\n  return (\n    <nav className=\"hidden md:flex items-center space-x-8\">\n      <a href=\"#features\" className=\"text-gray-600 hover:text-gray-900 font-medium transition-colors\">\n        Features\n      </a>\n      <a href=\"#how-it-works\" className=\"text-gray-600 hover:text-gray-900 font-medium transition-colors\">\n        How It Works\n      </a>\n      <a href=\"#pricing\" className=\"text-gray-600 hover:text-gray-900 font-medium transition-colors\">\n        Pricing\n      </a>\n      \n      {/* Authentication-based navigation */}\n      {isClerkConfigured ? (\n        <AuthenticatedNavigation />\n      ) : (\n        <Button className=\"bg-gradient-to-r from-blue-600 to-indigo-600 hover:from-blue-700 hover:to-indigo-700\">\n          Get Started\n        </Button>\n      )}\n    </nav>\n  );\n}"],"names":[],"mappings":";;;;AAEA;AAAA;AACA;AACA;AAJA;;;;;AAMA,MAAM,oBAAoB,oGACxB,CAAC,iGAA8C,QAAQ,CAAC;AAE1D,SAAS;IACP,MAAM,EAAE,UAAU,EAAE,QAAQ,EAAE,GAAG,CAAA,GAAA,4JAAA,CAAA,UAAO,AAAD;IAEvC,IAAI,CAAC,UAAU;QACb,qBACE,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAI,WAAU;;;;;;8BACf,8OAAC;oBAAI,WAAU;;;;;;;;;;;;IAGrB;IAEA,IAAI,YAAY;QACd,qBACE,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC,2KAAA,CAAA,aAAU;gBACT,YAAY;oBACV,UAAU;wBACR,WAAW;wBACX,uBAAuB;wBACvB,+BAA+B;oBACjC;gBACF;gBACA,iBAAgB;;;;;;;;;;;IAIxB;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC,4JAAA,CAAA,UAAI;gBAAC,MAAK;0BACT,cAAA,8OAAC,qJAAA,CAAA,SAAM;oBAAC,SAAQ;oBAAU,WAAU;8BAAkB;;;;;;;;;;;0BAIxD,8OAAC,4JAAA,CAAA,UAAI;gBAAC,MAAK;0BACT,cAAA,8OAAC,qJAAA,CAAA,SAAM;oBAAC,WAAU;8BAAuF;;;;;;;;;;;;;;;;;AAMjH;AAEO,SAAS;IACd,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAE,MAAK;gBAAY,WAAU;0BAAkE;;;;;;0BAGhG,8OAAC;gBAAE,MAAK;gBAAgB,WAAU;0BAAkE;;;;;;0BAGpG,8OAAC;gBAAE,MAAK;gBAAW,WAAU;0BAAkE;;;;;;YAK9F,kCACC,8OAAC;;;;qCAED,8OAAC,qJAAA,CAAA,SAAM;gBAAC,WAAU;0BAAuF;;;;;;;;;;;;AAMjH","debugId":null}},
    {"offset": {"line": 7299, "column": 0}, "map": {"version":3,"sources":["file:///home/faros/stealth-money/packages/web/src/app/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { TransferFlowContainer } from \"@/components/features/TransferFlowContainer\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Navigation } from \"@/components/ui/navigation\";\nimport { ArrowRight, Shield, Zap, Globe, CheckCircle, Star } from \"lucide-react\";\nimport { Calculator, UserPlus, CreditCard, Rocket } from \"lucide-react\";\n\nexport default function Home() {\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-slate-50 via-blue-50 to-indigo-50\">\n      {/* Header */}\n      <header className=\"border-b bg-white/80 backdrop-blur-sm sticky top-0 z-50\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex justify-between items-center h-16\">\n            <div className=\"flex items-center space-x-2\">\n              <div className=\"w-8 h-8 bg-gradient-to-r from-blue-600 to-indigo-600 rounded-lg flex items-center justify-center\">\n                <span className=\"text-white font-bold text-sm\">S</span>\n              </div>\n              <h1 className=\"text-xl font-bold bg-gradient-to-r from-blue-600 to-indigo-600 bg-clip-text text-transparent\">\n                Stealth Money\n              </h1>\n            </div>\n            <Navigation />\n          </div>\n        </div>\n      </header>\n\n      {/* Hero Section */}\n      <section className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 pt-16 pb-20\">\n        <div className=\"grid lg:grid-cols-2 gap-12 items-center\">\n          {/* Left Content */}\n          <div className=\"space-y-8\">\n            <div className=\"space-y-4\">\n              <a href=\"https://www.circle.com/\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"inline-flex\">\n                <div className=\"inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-blue-100 text-blue-800 border border-blue-200\">\n                  <Zap className=\"w-4 h-4 mr-2\" />\n                  Powered by Circle\n                </div>\n              </a>\n              <h1 className=\"text-4xl sm:text-5xl lg:text-6xl font-bold text-gray-900 leading-tight\">\n                Send Money\n                <span className=\"block bg-gradient-to-r from-blue-600 to-indigo-600 bg-clip-text text-transparent\">\n                  Anywhere, Instantly\n                </span>\n              </h1>\n              <p className=\"text-xl text-gray-600 leading-relaxed\">\n                The fastest, most secure way to transfer money globally. No hidden fees,\n                real-time exchange rates, and blockchain-powered security.\n              </p>\n            </div>\n\n            {/* Stats */}\n            <div className=\"grid grid-cols-3 gap-6\">\n              <div className=\"text-center\">\n                <div className=\"text-2xl font-bold text-gray-900\">$2.1B+</div>\n                <div className=\"text-sm text-gray-600\">Transferred</div>\n              </div>\n              <div className=\"text-center\">\n                <div className=\"text-2xl font-bold text-gray-900\">150+</div>\n                <div className=\"text-sm text-gray-600\">Countries</div>\n              </div>\n              <div className=\"text-center\">\n                <div className=\"text-2xl font-bold text-gray-900\">45s</div>\n                <div className=\"text-sm text-gray-600\">Avg. Time</div>\n              </div>\n            </div>\n\n            {/* CTA Buttons */}\n            <div className=\"flex flex-col sm:flex-row gap-4\">\n              <Button size=\"lg\" className=\"bg-gradient-to-r from-blue-600 to-indigo-600 hover:from-blue-700 hover:to-indigo-700\">\n                Start Transfer\n                <ArrowRight className=\"ml-2 h-4 w-4\" />\n              </Button>\n              <Button size=\"lg\" variant=\"outline\" className=\"border-gray-300\">\n                Watch Demo\n              </Button>\n            </div>\n\n            {/* Trust Indicators */}\n            <div className=\"flex items-center space-x-6 pt-4\">\n              <div className=\"flex items-center space-x-2\">\n                <Shield className=\"h-5 w-5 text-green-600\" />\n                <span className=\"text-sm text-gray-600\">Bank-level Security</span>\n              </div>\n              <div className=\"flex items-center space-x-2\">\n                <CheckCircle className=\"h-5 w-5 text-green-600\" />\n                <span className=\"text-sm text-gray-600\">Regulated & Licensed</span>\n              </div>\n            </div>\n          </div>\n\n          {/* Right Content - Transfer Calculator */}\n          <div className=\"lg:pl-8\">\n            <div className=\"relative\">\n              {/* Background decoration */}\n              <div className=\"absolute -inset-4 bg-gradient-to-r from-blue-600/20 to-indigo-600/20 rounded-2xl blur-xl\"></div>\n              <div className=\"relative\">\n                <TransferFlowContainer />\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Features Section */}\n      <section id=\"features\" className=\"py-20 bg-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center space-y-4 mb-16\">\n            <h2 className=\"text-3xl sm:text-4xl font-bold text-gray-900\">\n              Why Choose Stealth Money?\n            </h2>\n            <p className=\"text-xl text-gray-600 max-w-2xl mx-auto\">\n              Built with cutting-edge technology to provide the fastest, most secure money transfers\n            </p>\n          </div>\n\n          <div className=\"grid md:grid-cols-3 gap-8\">\n            <Card className=\"border-0 shadow-lg hover:shadow-xl transition-shadow\">\n              <CardContent className=\"p-8 text-center space-y-4\">\n                <div className=\"w-12 h-12 bg-gradient-to-r from-blue-600 to-indigo-600 rounded-lg flex items-center justify-center mx-auto\">\n                  <Zap className=\"h-6 w-6 text-white\" />\n                </div>\n                <h3 className=\"text-xl font-semibold text-gray-900\">Lightning Fast</h3>\n                <p className=\"text-gray-600\">\n                  Transfers complete in under 45 seconds with our blockchain-powered infrastructure\n                </p>\n              </CardContent>\n            </Card>\n\n            <Card className=\"border-0 shadow-lg hover:shadow-xl transition-shadow\">\n              <CardContent className=\"p-8 text-center space-y-4\">\n                <div className=\"w-12 h-12 bg-gradient-to-r from-green-600 to-emerald-600 rounded-lg flex items-center justify-center mx-auto\">\n                  <Shield className=\"h-6 w-6 text-white\" />\n                </div>\n                <h3 className=\"text-xl font-semibold text-gray-900\">Bank-Level Security</h3>\n                <p className=\"text-gray-600\">\n                  Military-grade encryption and blockchain technology keep your money safe\n                </p>\n              </CardContent>\n            </Card>\n\n            <Card className=\"border-0 shadow-lg hover:shadow-xl transition-shadow\">\n              <CardContent className=\"p-8 text-center space-y-4\">\n                <div className=\"w-12 h-12 bg-gradient-to-r from-purple-600 to-pink-600 rounded-lg flex items-center justify-center mx-auto\">\n                  <Globe className=\"h-6 w-6 text-white\" />\n                </div>\n                <h3 className=\"text-xl font-semibold text-gray-900\">Global Reach</h3>\n                <p className=\"text-gray-600\">\n                  Send money to 150+ countries with real-time exchange rates\n                </p>\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n      </section>\n\n      {/* How It Works */}\n      <section id=\"how-it-works\" className=\"py-20 bg-gradient-to-br from-slate-50 to-blue-50\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center space-y-4 mb-16\">\n            <h2 className=\"text-3xl sm:text-4xl font-bold text-gray-900\">\n              How It Works\n            </h2>\n            <p className=\"text-xl text-gray-600 max-w-2xl mx-auto\">\n              Simple, secure, and transparent money transfers in four easy steps\n            </p>\n          </div>\n\n          <div className=\"grid md:grid-cols-4 gap-6\">\n            <div className=\"text-center space-y-4\">\n              <div className=\"w-16 h-16 bg-gradient-to-r from-blue-600 to-indigo-600 rounded-full flex items-center justify-center mx-auto\">\n                <span className=\"text-2xl font-bold text-white\">1</span>\n              </div>\n              <h3 className=\"text-xl font-semibold text-gray-900\">Enter Amount</h3>\n              <p className=\"text-gray-600\">\n                Enter the amount and select currencies. Get real-time exchange rates instantly.\n              </p>\n            </div>\n\n            <div className=\"text-center space-y-4\">\n              <div className=\"w-16 h-16 bg-gradient-to-r from-green-600 to-emerald-600 rounded-full flex items-center justify-center mx-auto\">\n                <span className=\"text-2xl font-bold text-white\">2</span>\n              </div>\n              <h3 className=\"text-xl font-semibold text-gray-900\">Recipient Details</h3>\n              <p className=\"text-gray-600\">\n                Add recipient information and choose how they should receive the money.\n              </p>\n            </div>\n\n            <div className=\"text-center space-y-4\">\n              <div className=\"w-16 h-16 bg-gradient-to-r from-purple-600 to-pink-600 rounded-full flex items-center justify-center mx-auto\">\n                <span className=\"text-2xl font-bold text-white\">3</span>\n              </div>\n              <h3 className=\"text-xl font-semibold text-gray-900\">Secure Payment</h3>\n              <p className=\"text-gray-600\">\n                Pay securely with your card. Your payment is protected by bank-level security.\n              </p>\n            </div>\n\n            <div className=\"text-center space-y-4\">\n              <div className=\"w-16 h-16 bg-gradient-to-r from-orange-600 to-red-600 rounded-full flex items-center justify-center mx-auto\">\n                <span className=\"text-2xl font-bold text-white\">4</span>\n              </div>\n              <h3 className=\"text-xl font-semibold text-gray-900\">Money Delivered</h3>\n              <p className=\"text-gray-600\">\n                Funds are released via blockchain and delivered to your recipient instantly.\n              </p>\n            </div>\n          </div>\n        </div>\n      </section>\n\n\n      {/* How It Works -- UPGRADED SECTION */}\n      <section id=\"how-it-works\" className=\"py-20 bg-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center space-y-4 mb-20\">\n            <h2 className=\"text-sm font-semibold text-blue-600 uppercase tracking-wider\">\n              Get Started in Minutes\n            </h2>\n            <p className=\"text-3xl sm:text-4xl font-extrabold text-gray-900 tracking-tight\">\n              From Your Screen to Their Bank in 4 Simple Steps\n            </p>\n            <p className=\"text-xl text-gray-600 max-w-3xl mx-auto\">\n              We've redesigned international money transfers to be fast, fair, and incredibly easy. Here’s how your journey looks:\n            </p>\n          </div>\n\n          <div className=\"relative\">\n            {/* Desktop Connector Line */}\n            <div className=\"hidden md:block absolute top-1/2 left-0 w-full h-px bg-gray-300 transform -translate-y-1/2\">\n              <div className=\"absolute top-0 left-0 w-full h-full border-t-2 border-dashed border-gray-300\"></div>\n            </div>\n\n            <div className=\"relative grid md:grid-cols-4 gap-x-8 gap-y-12\">\n              {/* Step 1 */}\n              <div className=\"text-center\">\n                <div className=\"relative\">\n                  <div className=\"relative w-20 h-20 bg-white border-4 border-blue-600 rounded-full flex items-center justify-center mx-auto z-10\">\n                    <Calculator className=\"w-10 h-10 text-blue-600\" />\n                  </div>\n                </div>\n                <h3 className=\"mt-6 text-xl font-bold text-gray-900\">1. Calculate Your Transfer</h3>\n                <p className=\"mt-2 text-gray-600\">\n                  Tell us how much to send. You’ll instantly see our real-time exchange rate with zero hidden markups.\n                </p>\n              </div>\n\n              {/* Step 2 */}\n              <div className=\"text-center\">\n                 <div className=\"relative\">\n                  <div className=\"relative w-20 h-20 bg-white border-4 border-blue-600 rounded-full flex items-center justify-center mx-auto z-10\">\n                    <UserPlus className=\"w-10 h-10 text-blue-600\" />\n                  </div>\n                </div>\n                <h3 className=\"mt-6 text-xl font-bold text-gray-900\">2. Add Recipient</h3>\n                <p className=\"mt-2 text-gray-600\">\n                  Provide the recipient’s details. All we need is their name and bank information to ensure the money gets to the right person.\n                </p>\n              </div>\n\n              {/* Step 3 */}\n              <div className=\"text-center\">\n                <div className=\"relative\">\n                  <div className=\"relative w-20 h-20 bg-white border-4 border-blue-600 rounded-full flex items-center justify-center mx-auto z-10\">\n                    <CreditCard className=\"w-10 h-10 text-blue-600\" />\n                  </div>\n                </div>\n                <h3 className=\"mt-6 text-xl font-bold text-gray-900\">3. Fund Your Transfer</h3>\n                <p className=\"mt-2 text-gray-600\">\n                  Pay securely with your card. Your payment is protected by Circle's PCI-compliant infrastructure.\n                </p>\n              </div>\n              \n              {/* Step 4 */}\n              <div className=\"text-center\">\n                 <div className=\"relative\">\n                  <div className=\"relative w-20 h-20 bg-white border-4 border-blue-600 rounded-full flex items-center justify-center mx-auto z-10\">\n                    <Rocket className=\"w-10 h-10 text-blue-600\" />\n                  </div>\n                </div>\n                <h3 className=\"mt-6 text-xl font-bold text-gray-900\">4. Funds Arrive Instantly</h3>\n                <p className=\"mt-2 text-gray-600\">\n                  Our blockchain rails bypass traditional systems, delivering the funds to your recipient in under a minute.\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* How It Works -- OPTION 2: Focused Grid */}\n      <section id=\"how-it-works\" className=\"py-24 bg-gradient-to-br from-slate-50 to-blue-100/60\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-20\">\n            <h2 className=\"text-sm font-semibold text-blue-600 uppercase tracking-wider\">\n              How It Works\n            </h2>\n            <p className=\"mt-2 text-3xl sm:text-4xl font-extrabold text-gray-900 tracking-tight\">\n              A Radically Simple Way to Send Money\n            </p>\n            <p className=\"mt-4 max-w-2xl mx-auto text-xl text-gray-600\">\n              Three steps, under a minute. That's all it takes.\n            </p>\n          </div>\n\n          <div className=\"grid md:grid-cols-3 gap-8\">\n\n            {/* Step 1 */}\n            <Card className=\"text-center shadow-lg hover:shadow-xl transition-shadow duration-300 border-t-4 border-blue-600\">\n              <CardContent className=\"p-8\">\n                <div className=\"mx-auto mb-6 w-20 h-20 rounded-full bg-blue-100 flex items-center justify-center\">\n                  <span className=\"text-4xl font-extrabold text-blue-600\">1</span>\n                </div>\n                <h3 className=\"text-xl font-bold text-gray-900\">Calculate & See Rate</h3>\n                <p className=\"mt-2 text-gray-600\">\n                  Enter an amount and get a guaranteed real-time exchange rate.\n                </p>\n              </CardContent>\n            </Card>\n\n            {/* Step 2 */}\n            <Card className=\"text-center shadow-lg hover:shadow-xl transition-shadow duration-300 border-t-4 border-blue-600\">\n              <CardContent className=\"p-8\">\n                <div className=\"mx-auto mb-6 w-20 h-20 rounded-full bg-blue-100 flex items-center justify-center\">\n                  <span className=\"text-4xl font-extrabold text-blue-600\">2</span>\n                </div>\n                <h3 className=\"text-xl font-bold text-gray-900\">Add Recipient & Pay</h3>\n                <p className=\"mt-2 text-gray-600\">\n                  Provide recipient details and pay securely with your card in seconds.\n                </p>\n              </CardContent>\n            </Card>\n\n            {/* Step 3 */}\n            <Card className=\"text-center shadow-lg hover:shadow-xl transition-shadow duration-300 border-t-4 border-blue-600\">\n              <CardContent className=\"p-8\">\n                <div className=\"mx-auto mb-6 w-20 h-20 rounded-full bg-blue-100 flex items-center justify-center\">\n                  <span className=\"text-4xl font-extrabold text-blue-600\">3</span>\n                </div>\n                <h3 className=\"text-xl font-bold text-gray-900\">Money Arrives Instantly</h3>\n                <p className=\"mt-2 text-gray-600\">\n                  Our blockchain tech delivers funds directly, bypassing slow bank delays.\n                </p>\n              </CardContent>\n            </Card>\n            \n          </div>\n        </div>\n      </section>\n\n      {/* Social Proof */}\n      <section className=\"py-20 bg-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center space-y-4 mb-16\">\n            <h2 className=\"text-3xl sm:text-4xl font-bold text-gray-900\">\n              Trusted by Thousands\n            </h2>\n            <div className=\"flex items-center justify-center space-x-2\">\n              <div className=\"flex space-x-1\">\n                {[...Array(5)].map((_, i) => (\n                  <Star key={i} className=\"h-5 w-5 fill-yellow-400 text-yellow-400\" />\n                ))}\n              </div>\n              <span className=\"text-gray-600\">4.9/5 from 2,847 reviews</span>\n            </div>\n          </div>\n\n          <div className=\"grid md:grid-cols-3 gap-8\">\n            <Card className=\"border-0 shadow-lg\">\n              <CardContent className=\"p-6 space-y-4\">\n                <div className=\"flex space-x-1\">\n                  {[...Array(5)].map((_, i) => (\n                    <Star key={i} className=\"h-4 w-4 fill-yellow-400 text-yellow-400\" />\n                  ))}\n                </div>\n                <p className=\"text-gray-600\">\n                  &quot;Fastest money transfer I&apos;ve ever used. My family in Brazil received the money in under a minute!&quot;\n                </p>\n                <div className=\"flex items-center space-x-3\">\n                  <div className=\"w-10 h-10 bg-gradient-to-r from-blue-600 to-indigo-600 rounded-full flex items-center justify-center\">\n                    <span className=\"text-white font-semibold text-sm\">MR</span>\n                  </div>\n                  <div>\n                    <div className=\"font-semibold text-gray-900\">Maria Rodriguez</div>\n                    <div className=\"text-sm text-gray-600\">Small Business Owner</div>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n\n            <Card className=\"border-0 shadow-lg\">\n              <CardContent className=\"p-6 space-y-4\">\n                <div className=\"flex space-x-1\">\n                  {[...Array(5)].map((_, i) => (\n                    <Star key={i} className=\"h-4 w-4 fill-yellow-400 text-yellow-400\" />\n                  ))}\n                </div>\n                <p className=\"text-gray-600\">\n                  &quot;The transparency is amazing. I can see exactly where my money is at every step of the process.&quot;\n                </p>\n                <div className=\"flex items-center space-x-3\">\n                  <div className=\"w-10 h-10 bg-gradient-to-r from-green-600 to-emerald-600 rounded-full flex items-center justify-center\">\n                    <span className=\"text-white font-semibold text-sm\">JC</span>\n                  </div>\n                  <div>\n                    <div className=\"font-semibold text-gray-900\">James Chen</div>\n                    <div className=\"text-sm text-gray-600\">Software Engineer</div>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n\n            <Card className=\"border-0 shadow-lg\">\n              <CardContent className=\"p-6 space-y-4\">\n                <div className=\"flex space-x-1\">\n                  {[...Array(5)].map((_, i) => (\n                    <Star key={i} className=\"h-4 w-4 fill-yellow-400 text-yellow-400\" />\n                  ))}\n                </div>\n                <p className=\"text-gray-600\">\n                  &quot;Finally, a money transfer service that doesn&apos;t have hidden fees. What you see is what you pay.&quot;\n                </p>\n                <div className=\"flex items-center space-x-3\">\n                  <div className=\"w-10 h-10 bg-gradient-to-r from-purple-600 to-pink-600 rounded-full flex items-center justify-center\">\n                    <span className=\"text-white font-semibold text-sm\">SP</span>\n                  </div>\n                  <div>\n                    <div className=\"font-semibold text-gray-900\">Sarah Patel</div>\n                    <div className=\"text-sm text-gray-600\">Freelancer</div>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n      </section>\n\n      {/* CTA Section */}\n      <section className=\"py-20 bg-gradient-to-r from-blue-600 to-indigo-600\">\n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 text-center space-y-8\">\n          <h2 className=\"text-3xl sm:text-4xl font-bold text-white\">\n            Ready to Send Money Globally?\n          </h2>\n          <p className=\"text-xl text-blue-100 max-w-2xl mx-auto\">\n            Join thousands of users who trust Stealth Money for their international transfers\n          </p>\n          <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n            <Button size=\"lg\" className=\"bg-white text-blue-600 hover:bg-gray-100\">\n              Start Your Transfer\n              <ArrowRight className=\"ml-2 h-4 w-4\" />\n            </Button>\n            <Button size=\"lg\" variant=\"outline\" className=\"border-white text-white hover:bg-white/10\">\n              Learn More\n            </Button>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}