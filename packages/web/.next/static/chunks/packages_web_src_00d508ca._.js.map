{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/faros/stealth-money/packages/web/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 26, "column": 0}, "map": {"version":3,"sources":["file:///home/faros/stealth-money/packages/web/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n"],"names":[],"mappings":";;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,yIAAA,CAAA,KAAE,AAAD,EACV,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;KAXS;AAaT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,yIAAA,CAAA,KAAE,AAAD,EACV,8JACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,yIAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAoC;IAC3E,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,yIAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,yIAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,yIAAA,CAAA,KAAE,AAAD,EAAE,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,yIAAA,CAAA,KAAE,AAAD,EAAE,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf;MARS","debugId":null}},
    {"offset": {"line": 141, "column": 0}, "map": {"version":3,"sources":["file:///home/faros/stealth-money/packages/web/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,+bACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF;IACD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,yIAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf;KAnBS","debugId":null}},
    {"offset": {"line": 204, "column": 0}, "map": {"version":3,"sources":["file:///home/faros/stealth-money/packages/web/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants } "],"names":[],"mappings":";;;;;AACA;AACA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,6LAAC;QAAI,WAAW,CAAA,GAAA,yIAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE;KAJS","debugId":null}},
    {"offset": {"line": 252, "column": 0}, "map": {"version":3,"sources":["file:///home/faros/stealth-money/packages/web/src/components/ui/progress.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-2 w-full overflow-hidden rounded-full bg-gray-200\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-gradient-to-r from-blue-500 to-indigo-600 transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG9B,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,GAAG,OAAO,EAAE,oBACjC,6LAAC,uKAAA,CAAA,OAAsB;QACrB,KAAK;QACL,WAAW,CAAA,GAAA,yIAAA,CAAA,KAAE,AAAD,EACV,gEACA;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,uKAAA,CAAA,YAA2B;YAC1B,WAAU;YACV,OAAO;gBAAE,WAAW,CAAC,YAAY,EAAE,MAAM,CAAC,SAAS,CAAC,EAAE,EAAE,CAAC;YAAC;;;;;;;;;;;;AAIhE,SAAS,WAAW,GAAG,uKAAA,CAAA,OAAsB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 298, "column": 0}, "map": {"version":3,"sources":["file:///home/faros/stealth-money/packages/web/src/app/mvp-demo/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect } from \"react\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Progress } from \"@/components/ui/progress\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { \n  CheckCircle, \n  User, \n  CreditCard, \n  Send, \n  ArrowRight, \n  ArrowLeft,\n  Shield, \n  Globe,\n  DollarSign,\n  Clock,\n  AlertCircle,\n  Calculator,\n  ArrowRightLeft,\n  Euro,\n  RefreshCw\n} from \"lucide-react\";\n\ntype DemoStep = 'verification' | 'selection' | 'payment' | 'results';\n\ninterface MockUser {\n  id: string;\n  name: string;\n  email: string;\n  country: string;\n  acceptedCurrencies: string[];\n  firstName: string;\n  lastName: string;\n}\n\nconst mockUsers: MockUser[] = [\n  {\n    id: '1',\n    name: 'María González',\n    firstName: 'María',\n    lastName: 'González',\n    email: 'maria@example.cl',\n    country: 'Chile',\n    acceptedCurrencies: ['CLP', 'USD']\n  },\n  {\n    id: '2',\n    name: 'Carlos Rodriguez',\n    firstName: 'Carlos',\n    lastName: 'Rodriguez',\n    email: 'carlos@example.cl',\n    country: 'Chile',\n    acceptedCurrencies: ['CLP']\n  },\n  {\n    id: '3',\n    name: 'Ana Silva',\n    firstName: 'Ana',\n    lastName: 'Silva',\n    email: 'ana@example.cl',\n    country: 'Chile',\n    acceptedCurrencies: ['CLP', 'USD', 'EUR']\n  },\n  {\n    id: '4',\n    name: 'Diego Morales',\n    firstName: 'Diego',\n    lastName: 'Morales',\n    email: 'diego@example.cl',\n    country: 'Chile',\n    acceptedCurrencies: ['CLP']\n  },\n  {\n    id: '5',\n    name: 'Isabella Torres',\n    firstName: 'Isabella',\n    lastName: 'Torres',\n    email: 'isabella@example.cl',\n    country: 'Chile',\n    acceptedCurrencies: ['CLP', 'USD']\n  },\n  {\n    id: '6',\n    name: 'Roberto Fernandez',\n    firstName: 'Roberto',\n    lastName: 'Fernandez',\n    email: 'roberto@example.cl',\n    country: 'Chile',\n    acceptedCurrencies: ['CLP', 'EUR']\n  }\n];\n\ntype CalculatorMode = 'send' | 'receive';\n\n// Currency definitions\nconst SUPPORTED_CURRENCIES = {\n  CLP: { flag: '🇨🇱', name: 'Chilean Peso', symbol: '$', minAmount: 1000, maxAmount: 10000000 },\n  USD: { flag: '🇺🇸', name: 'US Dollar', symbol: '$', minAmount: 1, maxAmount: 10000 },\n  EUR: { flag: '🇪🇺', name: 'Euro', symbol: '€', minAmount: 1, maxAmount: 10000 },\n  GBP: { flag: '🇬🇧', name: 'British Pound', symbol: '£', minAmount: 1, maxAmount: 10000 },\n  MXN: { flag: '🇲🇽', name: 'Mexican Peso', symbol: '$', minAmount: 20, maxAmount: 200000 }\n};\n\nconst SEND_CURRENCIES = ['CLP', 'USD', 'EUR', 'GBP'] as const;\nconst RECEIVE_CURRENCIES = ['CLP', 'USD', 'EUR', 'GBP', 'MXN'] as const;\n\ntype SendCurrency = typeof SEND_CURRENCIES[number];\ntype ReceiveCurrency = typeof RECEIVE_CURRENCIES[number];\n\n// Mock exchange rates\nconst EXCHANGE_RATES: Record<string, Record<string, number>> = {\n  CLP: { USD: 0.00105, EUR: 0.00095, GBP: 0.00082, MXN: 0.021, CLP: 1 },\n  USD: { CLP: 950, EUR: 0.85, GBP: 0.78, MXN: 20, USD: 1 },\n  EUR: { CLP: 1050, USD: 1.18, GBP: 0.92, MXN: 23.5, EUR: 1 },\n  GBP: { CLP: 1220, USD: 1.28, EUR: 1.09, MXN: 25.6, GBP: 1 },\n  MXN: { CLP: 47.6, USD: 0.05, EUR: 0.043, GBP: 0.039, MXN: 1 }\n};\n\ninterface TransferCalculation {\n  sendAmount: number;\n  receiveAmount: number;\n  sendCurrency: string;\n  receiveCurrency: string;\n  exchangeRate: number;\n  fees: number;\n  rateValidUntil: string;\n  breakdown: {\n    sendAmountUSD: number;\n    fees: {\n      cardProcessing: number;\n      transfer: number;\n      payout: number;\n      total: number;\n    };\n    netAmountUSD: number;\n    exchangeRate: number;\n    receiveAmount: number;\n  };\n  estimatedArrival: string;\n  rateId: string;\n}\n\nexport default function MVPDemo() {\n  const [currentStep, setCurrentStep] = useState<DemoStep>('verification');\n  const [selectedUser, setSelectedUser] = useState<MockUser | null>(null);\n  const [paymentAmount, setPaymentAmount] = useState<string>('');\n  const [verificationProgress, setVerificationProgress] = useState(0);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [filteredUsers, setFilteredUsers] = useState<MockUser[]>([]);\n  const [showUsers, setShowUsers] = useState(false);\n  const [verificationMessages, setVerificationMessages] = useState<string[]>([]);\n  const [currentMessageIndex, setCurrentMessageIndex] = useState(0);\n  const [verificationStep, setVerificationStep] = useState<'form' | 'sending' | 'waiting' | 'verifying'>('form');\n  const [microDepositSent, setMicroDepositSent] = useState(false);\n  \n  // Calculator state\n  const [calculatorMode, setCalculatorMode] = useState<CalculatorMode>('send');\n  const [sendCurrency, setSendCurrency] = useState<SendCurrency>('CLP');\n  const [receiveCurrency, setReceiveCurrency] = useState<ReceiveCurrency>('CLP');\n  const [calculation, setCalculation] = useState<TransferCalculation | null>(null);\n  const [isCalculating, setIsCalculating] = useState(false);\n  const [calculationError, setCalculationError] = useState<string | null>(null);\n\n  const steps = [\n    { id: 'verification', title: 'Bank Verification', icon: Shield },\n    { id: 'selection', title: 'Select Recipient', icon: Globe },\n    { id: 'payment', title: 'Payment Process', icon: CreditCard },\n    { id: 'results', title: 'Results', icon: CheckCircle }\n  ];\n\n  const verificationSteps = {\n    sending: [\n      'Connecting to Chilean banking network...',\n      'Validating RUT with Registro Civil...',\n      'Preparing micro-deposit of 1 CLP...',\n      'Sending verification deposit to your account...',\n      'Micro-deposit sent successfully!'\n    ],\n    verifying: ['Account verified!']\n  };\n\n  const canGoBack = () => {\n    if (currentStep === 'verification') return false;\n    if (currentStep === 'selection') return true;\n    if (currentStep === 'payment') return true;\n    if (currentStep === 'results') return !isProcessing;\n    return true;\n  };\n\n  const handleGoBack = () => {\n    if (!canGoBack()) return;\n    \n    if (currentStep === 'selection') {\n      setCurrentStep('verification');\n    } else if (currentStep === 'payment') {\n      setCurrentStep('selection');\n    } else if (currentStep === 'results') {\n      setCurrentStep('payment');\n    }\n  };\n\n  const getCurrentStepIndex = () => steps.findIndex(step => step.id === currentStep);\n  const progressPercentage = ((getCurrentStepIndex() + 1) / steps.length) * 100;\n\n  useEffect(() => {\n    if (verificationStep !== 'sending' || !isProcessing) return;\n\n    const currentSteps = verificationSteps.sending;\n    const timer = setTimeout(() => {\n      if (currentMessageIndex < currentSteps.length) {\n        setVerificationMessages(prev => [...prev, currentSteps[currentMessageIndex]]);\n        setVerificationProgress(prev => prev + (100 / currentSteps.length));\n        setCurrentMessageIndex(prev => prev + 1);\n      } else {\n        setIsProcessing(false);\n        setMicroDepositSent(true);\n        setVerificationStep('waiting');\n        setVerificationProgress(100);\n      }\n    }, 1200);\n\n    return () => clearTimeout(timer);\n  }, [currentMessageIndex, verificationStep, isProcessing]);\n\n  // Handle payment processing timeout in results page\n  useEffect(() => {\n    if (currentStep === 'results' && isProcessing) {\n      const timer = setTimeout(() => {\n        setIsProcessing(false);\n      }, 23000); // 23 seconds for pending state\n\n      return () => clearTimeout(timer);\n    }\n  }, [currentStep, isProcessing]);\n\n\n\n  const handleSendMicroDeposit = () => {\n    setVerificationStep('sending');\n    setIsProcessing(true);\n    setVerificationProgress(0);\n    setVerificationMessages([]);\n    setCurrentMessageIndex(0);\n  };\n\n  const handleVerifyDeposit = () => {\n    setVerificationStep('verifying');\n    setIsProcessing(true);\n    setVerificationMessages(['Account verified!']);\n    setVerificationProgress(100);\n\n    setTimeout(() => {\n      setIsProcessing(false);\n      setCurrentStep('selection');\n    }, 1500);\n  };\n\n  const handleSearch = (query: string) => {\n    setSearchQuery(query);\n    if (query.length >= 2) {\n      const filtered = mockUsers.filter(user => \n        user.name.toLowerCase().includes(query.toLowerCase()) ||\n        user.email.toLowerCase().includes(query.toLowerCase())\n      );\n      setFilteredUsers(filtered);\n      setTimeout(() => setShowUsers(true), 300);\n    } else {\n      setShowUsers(false);\n      setFilteredUsers([]);\n    }\n  };\n\n  const getProfileColor = (firstName: string, lastName: string) => {\n    const colors = [\n      'bg-blue-500', 'bg-green-500', 'bg-purple-500', 'bg-red-500', \n      'bg-yellow-500', 'bg-indigo-500', 'bg-pink-500', 'bg-teal-500'\n    ];\n    const index = (firstName.charCodeAt(0) + lastName.charCodeAt(0)) % colors.length;\n    return colors[index];\n  };\n\n  const getInitials = (firstName: string, lastName: string) => {\n    return `${firstName.charAt(0)}${lastName.charAt(0)}`;\n  };\n\n  // Mock calculation function with currency support\n  const calculateTransfer = (amount: string, mode: CalculatorMode, fromCurrency: SendCurrency, toCurrency: ReceiveCurrency) => {\n    if (!amount || amount === '0' || amount === '') {\n      setCalculation(null);\n      return;\n    }\n\n    const numericAmount = parseFloat(amount);\n    const minAmount = SUPPORTED_CURRENCIES[mode === 'send' ? fromCurrency : toCurrency].minAmount;\n    if (numericAmount < minAmount) return; // Minimum amount check\n\n    setIsCalculating(true);\n    setCalculationError(null);\n\n    // Mock calculation with realistic fees and exchange rates\n    setTimeout(() => {\n      const exchangeRate = EXCHANGE_RATES[fromCurrency]?.[toCurrency] || 1;\n      \n      let sendAmount: number;\n      let receiveAmount: number;\n      \n      if (mode === 'send') {\n        sendAmount = numericAmount;\n        receiveAmount = Math.round(numericAmount * exchangeRate);\n      } else {\n        receiveAmount = numericAmount;\n        sendAmount = Math.round(numericAmount / exchangeRate);\n      }\n\n      const mockFees = {\n        cardProcessing: Math.round(sendAmount * 0.029), // 2.9% card processing\n        transfer: fromCurrency === 'CLP' ? 2500 : fromCurrency === 'USD' ? 3 : fromCurrency === 'EUR' ? 2.5 : 2, // Currency-specific transfer fee\n        payout: Math.round(sendAmount * 0.01), // 1% payout fee\n        total: 0\n      };\n      mockFees.total = mockFees.cardProcessing + mockFees.transfer + mockFees.payout;\n\n      // Adjust receive amount for fees if in send mode\n      if (mode === 'send') {\n        receiveAmount = Math.round((sendAmount - mockFees.total) * exchangeRate);\n      } else {\n        sendAmount = sendAmount + mockFees.total;\n      }\n\n      const mockCalculation: TransferCalculation = {\n        sendAmount,\n        receiveAmount,\n        sendCurrency: fromCurrency,\n        receiveCurrency: toCurrency,\n        exchangeRate,\n        fees: mockFees.total,\n        rateValidUntil: new Date(Date.now() + 10 * 60 * 1000).toISOString(), // 10 minutes\n        breakdown: {\n          sendAmountUSD: sendAmount * (EXCHANGE_RATES[fromCurrency]?.USD || 1),\n          fees: mockFees,\n          netAmountUSD: (sendAmount - mockFees.total) * (EXCHANGE_RATES[fromCurrency]?.USD || 1),\n          exchangeRate,\n          receiveAmount\n        },\n        estimatedArrival: new Date(Date.now() + 5 * 60 * 1000).toISOString(), // 5 minutes\n        rateId: `rate_${Date.now()}`\n      };\n\n      setCalculation(mockCalculation);\n      setIsCalculating(false);\n    }, 800); // Simulate API delay\n  };\n\n  // Handle calculator mode toggle\n  const handleModeToggle = () => {\n    const newMode = calculatorMode === 'send' ? 'receive' : 'send';\n    setCalculatorMode(newMode);\n    \n    // If we have a calculation, preserve the amount by switching to the opposite field\n    if (calculation) {\n      if (newMode === 'receive') {\n        setPaymentAmount(calculation.receiveAmount.toString());\n      } else {\n        setPaymentAmount(calculation.sendAmount.toString());\n      }\n    }\n  };\n\n  // Effect to calculate when amount or currencies change\n  useEffect(() => {\n    if (paymentAmount && paymentAmount !== '0' && paymentAmount !== '') {\n      calculateTransfer(paymentAmount, calculatorMode, sendCurrency, receiveCurrency);\n    }\n  }, [paymentAmount, calculatorMode, sendCurrency, receiveCurrency]);\n\n  const handlePayment = () => {\n    setIsProcessing(true);\n    setCurrentStep('results');\n  };\n\n\n\n  const renderVerificationStep = () => (\n    <Card className=\"w-full max-w-2xl\">\n      <CardHeader>\n        <CardTitle className=\"flex items-center gap-2\">\n          <Shield className=\"text-blue-500\" />\n          Bank Account Verification - Chile\n        </CardTitle>\n      </CardHeader>\n      <CardContent className=\"space-y-6\">\n        {verificationStep === 'form' && (\n          <>\n            <div className=\"bg-blue-50 p-4 rounded-lg border border-blue-200\">\n              <div className=\"flex items-center gap-3\">\n                <DollarSign className=\"text-blue-600\" />\n                <div>\n                  <h3 className=\"font-semibold text-blue-800\">Micro-Deposit Verification</h3>\n                  <p className=\"text-blue-600\">We'll send 1 CLP ($0.01 USD) to verify your account ownership</p>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"space-y-4\">\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div className=\"space-y-2\">\n                  <label className=\"text-sm font-medium\">Bank Name</label>\n                  <select className=\"w-full p-2 border rounded-md bg-white\">\n                    <option>Banco de Chile</option>\n                    <option>BancoEstado</option>\n                    <option>Banco Santander</option>\n                    <option>Banco BCI</option>\n                  </select>\n                </div>\n                <div className=\"space-y-2\">\n                  <label className=\"text-sm font-medium\">Account Type</label>\n                  <select className=\"w-full p-2 border rounded-md bg-white\">\n                    <option>Cuenta Corriente</option>\n                    <option>Cuenta Vista</option>\n                    <option>Cuenta de Ahorro</option>\n                  </select>\n                </div>\n              </div>\n\n              <div className=\"space-y-2\">\n                <label className=\"text-sm font-medium\">RUT</label>\n                <input \n                  type=\"text\" \n                  placeholder=\"12.345.678-9\"\n                  className=\"w-full p-2 border rounded-md\"\n                  defaultValue=\"12.345.678-9\"\n                />\n              </div>\n\n              <div className=\"space-y-2\">\n                <label className=\"text-sm font-medium\">Account Number</label>\n                <input \n                  type=\"text\" \n                  placeholder=\"Enter your account number\"\n                  className=\"w-full p-2 border rounded-md\"\n                  defaultValue=\"****1234\"\n                />\n              </div>\n            </div>\n\n            <Button \n              onClick={handleSendMicroDeposit} \n              disabled={isProcessing}\n              className=\"w-full\"\n            >\n              Send 1 CLP Verification Deposit\n              <DollarSign className=\"ml-2 h-4 w-4\" />\n            </Button>\n          </>\n        )}\n\n        {(verificationStep === 'sending' || verificationStep === 'verifying') && (\n          <div className=\"space-y-4\">\n            <div className=\"bg-blue-50 p-4 rounded-lg border border-blue-200\">\n              <div className=\"space-y-2\">\n                {verificationMessages.map((message, index) => (\n                  <div key={index} className=\"flex items-center gap-2 text-sm text-blue-700\">\n                    {isProcessing && index === verificationMessages.length - 1 ? (\n                      <Clock className=\"w-4 h-4 animate-spin text-blue-600\" />\n                    ) : (\n                      <CheckCircle className=\"w-4 h-4 text-green-500\" />\n                    )}\n                    <span>{message}</span>\n                  </div>\n                ))}\n              </div>\n            </div>\n            <div className=\"space-y-2\">\n              <div className=\"flex justify-between text-sm\">\n                <span>Verification Progress</span>\n                <span>{Math.round(verificationProgress)}%</span>\n              </div>\n              <Progress value={verificationProgress} className=\"w-full\" />\n            </div>\n          </div>\n        )}\n\n        {verificationStep === 'waiting' && (\n          <>\n            <div className=\"bg-green-50 p-4 rounded-lg border border-green-200\">\n              <div className=\"flex items-center gap-3\">\n                <CheckCircle className=\"text-green-600\" />\n                <div>\n                  <h3 className=\"font-semibold text-green-800\">Micro-Deposit Sent!</h3>\n                  <p className=\"text-green-600\">1 CLP has been sent to your account. Check your bank statement.</p>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"bg-yellow-50 p-4 rounded-lg border border-yellow-200\">\n              <div className=\"flex items-center gap-3\">\n                <Clock className=\"text-yellow-600\" />\n                <div>\n                  <h3 className=\"font-semibold text-yellow-800\">Waiting for Confirmation</h3>\n                  <p className=\"text-yellow-600\">Please check your bank account and confirm you received the 1 CLP deposit.</p>\n                  <p className=\"text-sm text-yellow-500 mt-1\">This usually takes 1-2 minutes to appear in your account.</p>\n                </div>\n              </div>\n            </div>\n\n            <Button \n              onClick={handleVerifyDeposit} \n              disabled={isProcessing}\n              className=\"w-full\"\n            >\n              I've Received the 1 CLP Deposit\n              <CheckCircle className=\"ml-2 h-4 w-4\" />\n            </Button>\n          </>\n        )}\n      </CardContent>\n    </Card>\n  );\n\n  const renderSelectionStep = () => (\n    <Card className=\"w-full max-w-2xl\">\n      <CardHeader>\n        <CardTitle className=\"flex items-center gap-2\">\n          <Globe className=\"text-purple-500\" />\n          Select Recipient\n        </CardTitle>\n      </CardHeader>\n      <CardContent className=\"space-y-4\">\n        <p className=\"text-gray-600\">Search for a user to send money to:</p>\n        \n        <div className=\"space-y-2\">\n          <input\n            type=\"text\"\n            placeholder=\"Search by name or email...\"\n            value={searchQuery}\n            onChange={(e) => handleSearch(e.target.value)}\n            className=\"w-full p-3 border rounded-lg focus:outline-none focus:ring-2 focus:ring-purple-500\"\n          />\n          {searchQuery.length > 0 && searchQuery.length < 2 && (\n            <p className=\"text-sm text-gray-500\">Type at least 2 characters to search</p>\n          )}\n        </div>\n        \n        {showUsers && (\n          <div className=\"space-y-3\">\n            {filteredUsers.length > 0 ? (\n              filteredUsers.map((user) => (\n                <div\n                  key={user.id}\n                  className={`p-4 border rounded-lg cursor-pointer transition-all ${\n                    selectedUser?.id === user.id \n                      ? 'border-purple-500 bg-purple-50' \n                      : 'border-gray-200 hover:border-gray-300'\n                  }`}\n                  onClick={() => setSelectedUser(user)}\n                >\n                  <div className=\"flex items-center justify-between\">\n                    <div className=\"flex items-center gap-3\">\n                      <div className={`w-12 h-12 rounded-full flex items-center justify-center text-white font-semibold ${\n                        getProfileColor(user.firstName, user.lastName)\n                      }`}>\n                        {getInitials(user.firstName, user.lastName)}\n                      </div>\n                      <div>\n                        <h3 className=\"font-semibold\">{user.name}</h3>\n                        <p className=\"text-sm text-gray-600\">{user.email}</p>\n                        <p className=\"text-sm text-gray-500\">{user.country}</p>\n                      </div>\n                    </div>\n                    <div className=\"text-right\">\n                      <div className=\"flex gap-1 flex-wrap justify-end\">\n                        {user.acceptedCurrencies.map(currency => (\n                          <Badge \n                            key={currency} \n                            variant=\"secondary\" \n                            className={currency === 'CLP' ? 'bg-blue-100 text-blue-800' : ''}\n                          >\n                            {currency}\n                          </Badge>\n                        ))}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              ))\n            ) : (\n              <p className=\"text-gray-500 text-center py-4\">No users found matching your search</p>\n            )}\n          </div>\n        )}\n\n        <Button \n          onClick={() => setCurrentStep('payment')} \n          disabled={!selectedUser}\n          className=\"w-full\"\n        >\n          Continue to Payment\n          <ArrowRight className=\"ml-2 h-4 w-4\" />\n        </Button>\n      </CardContent>\n    </Card>\n  );\n\n\n\n  const renderPaymentStep = () => (\n    <div className=\"w-full max-w-2xl mx-auto\">\n      <Card className=\"shadow-2xl border-0\">\n        <CardHeader className=\"pb-4\">\n          <CardTitle className=\"flex items-center space-x-2 text-center justify-center\">\n            <Calculator className=\"h-5 w-5 text-blue-600\" />\n            <span>Calculate Your Transfer</span>\n          </CardTitle>\n          <p className=\"text-sm text-gray-600 text-center\">\n            Get real-time exchange rates and see exactly what you'll pay\n          </p>\n        </CardHeader>\n        <CardContent className=\"pt-0 space-y-6\">\n          {selectedUser && (\n            <div className=\"bg-gray-50 p-4 rounded-lg\">\n              <h3 className=\"font-semibold mb-2\">Sending to:</h3>\n              <div className=\"flex items-center gap-3\">\n                <div className={`w-10 h-10 rounded-full flex items-center justify-center text-white font-semibold text-sm ${\n                  getProfileColor(selectedUser.firstName, selectedUser.lastName)\n                }`}>\n                  {getInitials(selectedUser.firstName, selectedUser.lastName)}\n                </div>\n                <div>\n                  <p className=\"font-medium\">{selectedUser.name}</p>\n                  <p className=\"text-sm text-gray-600\">{selectedUser.email}</p>\n                </div>\n              </div>\n            </div>\n          )}\n\n          {/* Calculator Mode Switcher */}\n          <div className=\"flex items-center justify-center\">\n            <div className=\"bg-gray-100 rounded-lg p-1 flex\">\n              <button\n                onClick={handleModeToggle}\n                className={`px-4 py-2 rounded-md text-sm font-medium transition-all ${\n                  calculatorMode === 'send'\n                    ? 'bg-white text-gray-900 shadow-sm'\n                    : 'text-gray-600 hover:text-gray-900'\n                }`}\n              >\n                <div className=\"flex items-center gap-2\">\n                  <DollarSign className=\"h-4 w-4\" />\n                  You Send\n                </div>\n              </button>\n              <button\n                onClick={handleModeToggle}\n                className={`px-4 py-2 rounded-md text-sm font-medium transition-all ${\n                  calculatorMode === 'receive'\n                    ? 'bg-white text-gray-900 shadow-sm'\n                    : 'text-gray-600 hover:text-gray-900'\n                }`}\n              >\n                <div className=\"flex items-center gap-2\">\n                  <Euro className=\"h-4 w-4\" />\n                  Recipient Gets\n                </div>\n              </button>\n            </div>\n          </div>\n\n          {/* Transfer Calculator Interface */}\n          <div className=\"space-y-6\">\n            {/* Input Amount */}\n            <div className=\"space-y-4\">\n              <div className=\"flex items-center justify-between\">\n                <label className=\"flex items-center gap-2 text-sm font-medium text-gray-700\">\n                  {calculatorMode === 'send' ? (\n                    <>\n                      <DollarSign className=\"h-4 w-4\" />\n                      You send\n                    </>\n                  ) : (\n                    <>\n                      <Euro className=\"h-4 w-4\" />\n                      Recipient gets\n                    </>\n                  )}\n                </label>\n              </div>\n              \n              <div className=\"flex gap-3\">\n                <div className=\"flex-1\">\n                  <input\n                    type=\"number\"\n                    placeholder={calculatorMode === 'send' ? \"50,000\" : \"47,500\"}\n                    value={paymentAmount}\n                    onChange={(e) => setPaymentAmount(e.target.value)}\n                    className=\"w-full p-4 pr-16 border-2 rounded-lg text-xl font-bold focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                  />\n                  <div className=\"absolute right-4 top-1/2 transform -translate-y-1/2 text-sm font-medium text-gray-500\">\n                    CLP\n                  </div>\n                </div>\n                <div className=\"w-20 flex items-center justify-center\">\n                  <div className=\"p-3 border rounded-lg bg-white flex items-center gap-2\">\n                    <div className=\"w-6 h-6 rounded-full bg-blue-500 flex items-center justify-center text-white text-xs font-bold\">\n                      $\n                    </div>\n                    <span className=\"font-medium text-sm\">CLP</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* Currency Exchange Arrow */}\n            <div className=\"flex justify-center\">\n              <div className=\"bg-gray-100 rounded-full p-2\">\n                <ArrowRightLeft className=\"h-4 w-4 text-gray-600\" />\n              </div>\n            </div>\n\n            {/* Output Amount */}\n            <div className=\"space-y-4\">\n              <div className=\"flex items-center justify-between\">\n                <label className=\"flex items-center gap-2 text-sm font-medium text-gray-700\">\n                  {calculatorMode === 'send' ? (\n                    <>\n                      <Euro className=\"h-4 w-4\" />\n                      Recipient gets\n                    </>\n                  ) : (\n                    <>\n                      <DollarSign className=\"h-4 w-4\" />\n                      You send\n                    </>\n                  )}\n                </label>\n              </div>\n              \n              <div className=\"flex gap-3\">\n                <div className=\"flex-1\">\n                  <div className=\"h-16 px-4 py-4 border-2 border-input bg-gray-50 rounded-lg flex items-center text-xl font-bold text-muted-foreground\">\n                    {isCalculating ? (\n                      <div className=\"flex items-center gap-2\">\n                        <RefreshCw className=\"h-4 w-4 animate-spin\" />\n                        <span className=\"text-sm\">Calculating...</span>\n                      </div>\n                    ) : calculation ? (\n                      calculatorMode === 'send' \n                        ? calculation.receiveAmount.toLocaleString()\n                        : calculation.sendAmount.toLocaleString()\n                    ) : (\n                      <span className=\"text-sm\">\n                        {calculatorMode === 'send' \n                          ? 'Amount recipient will receive'\n                          : 'Amount you need to send'\n                        }\n                      </span>\n                    )}\n                  </div>\n                </div>\n                <div className=\"w-20 flex items-center justify-center\">\n                  <div className=\"p-3 border rounded-lg bg-white flex items-center gap-2\">\n                    <div className=\"w-6 h-6 rounded-full bg-blue-500 flex items-center justify-center text-white text-xs font-bold\">\n                      $\n                    </div>\n                    <span className=\"font-medium text-sm\">CLP</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* Calculation Results */}\n            {calculation && !isCalculating && (\n              <div className=\"bg-gradient-to-r from-blue-50 to-indigo-50 border border-blue-200 rounded-xl p-6\">\n                <div className=\"space-y-4\">\n                  {/* Recipient Amount Highlight */}\n                  <div className=\"bg-green-50 border border-green-200 rounded-lg p-4\">\n                    <div className=\"flex items-center justify-between\">\n                      <div className=\"flex items-center gap-2\">\n                        <span className=\"text-lg\">🇨🇱</span>\n                        <span className=\"text-sm font-medium text-green-700\">Recipient gets</span>\n                      </div>\n                      <div className=\"text-right\">\n                        <div className=\"text-2xl font-bold text-green-700\">\n                          {calculation.receiveAmount.toLocaleString()} CLP\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n                  {/* Exchange Rate */}\n                  <div className=\"flex items-center justify-between\">\n                    <span className=\"text-sm font-medium text-gray-700\">Exchange rate</span>\n                    <div className=\"text-right\">\n                      <span className=\"text-lg font-bold text-blue-600\">1.00000</span>\n                      <p className=\"text-xs text-gray-500\">1 CLP = 1 CLP</p>\n                    </div>\n                  </div>\n                  \n                  {/* Fee Breakdown */}\n                  <div className=\"border-t border-blue-200 pt-4 space-y-3\">\n                    <div className=\"flex justify-between text-sm\">\n                      <span className=\"text-gray-600\">Card processing (2.9%)</span>\n                      <span className=\"font-medium\">{calculation.breakdown.fees.cardProcessing.toLocaleString()} CLP</span>\n                    </div>\n                    <div className=\"flex justify-between text-sm\">\n                      <span className=\"text-gray-600\">Transfer fee</span>\n                      <span className=\"font-medium\">{calculation.breakdown.fees.transfer.toLocaleString()} CLP</span>\n                    </div>\n                    <div className=\"flex justify-between text-sm\">\n                      <span className=\"text-gray-600\">Payout fee (1%)</span>\n                      <span className=\"font-medium\">{calculation.breakdown.fees.payout.toLocaleString()} CLP</span>\n                    </div>\n                    <div className=\"flex justify-between text-sm border-t border-blue-200 pt-2\">\n                      <span className=\"text-gray-600 font-medium\">Total fees</span>\n                      <span className=\"font-bold\">{calculation.fees.toLocaleString()} CLP</span>\n                    </div>\n                    <div className=\"flex justify-between text-sm\">\n                      <span className=\"text-gray-600\">Processing time</span>\n                      <span className=\"font-medium text-green-600\">2-5 minutes</span>\n                    </div>\n                  </div>\n                  \n                  <div className=\"border-t border-blue-200 pt-4 flex justify-between\">\n                    <span className=\"font-bold text-gray-900\">Total you pay</span>\n                    <span className=\"font-bold text-xl text-gray-900\">\n                      {(calculation.sendAmount + calculation.fees).toLocaleString()} CLP\n                    </span>\n                  </div>\n                </div>\n              </div>\n            )}\n\n            {/* Empty State */}\n            {!paymentAmount && !isCalculating && (\n              <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4\">\n                <div className=\"flex items-center gap-2 text-blue-700 mb-2\">\n                  <Calculator className=\"h-4 w-4\" />\n                  <span className=\"font-medium\">Get Started</span>\n                </div>\n                <p className=\"text-sm text-blue-600 mb-3\">\n                  Enter an amount above to see how much your recipient will receive and the total cost including fees.\n                </p>\n                <div className=\"space-y-2 text-xs text-blue-600\">\n                  <div className=\"flex items-center gap-2\">\n                    <span className=\"w-2 h-2 bg-blue-400 rounded-full\"></span>\n                    <span>Real-time fee calculation</span>\n                  </div>\n                  <div className=\"flex items-center gap-2\">\n                    <span className=\"w-2 h-2 bg-blue-400 rounded-full\"></span>\n                    <span>Transparent fee breakdown</span>\n                  </div>\n                  <div className=\"flex items-center gap-2\">\n                    <span className=\"w-2 h-2 bg-blue-400 rounded-full\"></span>\n                    <span>Fast domestic transfers</span>\n                  </div>\n                </div>\n              </div>\n            )}\n\n            {/* Payment Method */}\n            <div className=\"space-y-3\">\n              <label className=\"text-sm font-medium text-gray-700\">Payment method</label>\n              <div className=\"p-4 border-2 border-green-200 rounded-lg bg-green-50\">\n                <div className=\"flex items-center gap-3\">\n                  <CreditCard className=\"text-green-600 w-6 h-6\" />\n                  <div className=\"flex-1\">\n                    <p className=\"font-semibold text-gray-900\">Banco de Chile</p>\n                    <p className=\"text-sm text-gray-600\">Cuenta Corriente •••• 1234</p>\n                  </div>\n                  <Badge variant=\"outline\" className=\"text-green-600 border-green-300 bg-green-100\">\n                    <CheckCircle className=\"w-3 h-3 mr-1\" />\n                    Verified\n                  </Badge>\n                </div>\n              </div>\n            </div>\n\n            {/* Continue Button */}\n            <Button \n              onClick={handlePayment} \n              disabled={!paymentAmount || parseInt(paymentAmount) < 1000}\n              className=\"w-full h-14 text-lg font-bold bg-gradient-to-r from-blue-600 to-indigo-600 hover:from-blue-700 hover:to-indigo-700\"\n            >\n              Send {paymentAmount ? parseInt(paymentAmount).toLocaleString() : '0'} CLP\n              <Send className=\"ml-2 h-5 w-5\" />\n            </Button>\n\n            {parseInt(paymentAmount || '0') > 0 && parseInt(paymentAmount || '0') < 1000 && (\n              <div className=\"bg-red-50 border border-red-200 rounded-lg p-3\">\n                <p className=\"text-sm text-red-600 text-center flex items-center justify-center gap-2\">\n                  <AlertCircle className=\"w-4 h-4\" />\n                  Minimum transfer amount is 1,000 CLP\n                </p>\n              </div>\n            )}\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n\n  const renderResultsStep = () => (\n    <Card className=\"w-full max-w-2xl\">\n      <CardHeader>\n        <CardTitle className=\"flex items-center gap-2\">\n          {isProcessing ? (\n            <Clock className=\"text-yellow-500 animate-spin\" />\n          ) : (\n            <CheckCircle className=\"text-green-500\" />\n          )}\n          {isProcessing ? 'Processing Transfer...' : 'Transfer Completed Successfully!'}\n        </CardTitle>\n      </CardHeader>\n      <CardContent className=\"space-y-6\">\n        {isProcessing ? (\n          <div className=\"space-y-4\">\n            <div className=\"bg-yellow-50 p-6 rounded-lg border border-yellow-200 text-center\">\n              <div className=\"w-16 h-16 bg-yellow-100 rounded-full flex items-center justify-center mx-auto mb-4\">\n                <Clock className=\"w-8 h-8 text-yellow-600 animate-spin\" />\n              </div>\n              <h3 className=\"text-xl font-bold text-yellow-800 mb-2\">Processing Your Transfer</h3>\n              <p className=\"text-yellow-600\">Please wait while we securely process your payment</p>\n            </div>\n            \n            <div className=\"bg-blue-50 p-4 rounded-lg border border-blue-200\">\n              <div className=\"space-y-3\">\n                <div className=\"flex items-center gap-2 text-sm text-blue-700\">\n                  <CheckCircle className=\"w-4 h-4 text-green-500\" />\n                  <span>Payment authorized</span>\n                </div>\n                <div className=\"flex items-center gap-2 text-sm text-blue-700\">\n                  <CheckCircle className=\"w-4 h-4 text-green-500\" />\n                  <span>Funds debited from your account</span>\n                </div>\n                <div className=\"flex items-center gap-2 text-sm text-blue-600\">\n                  <Clock className=\"w-4 h-4 animate-spin\" />\n                  <span>Transferring to recipient...</span>\n                </div>\n              </div>\n            </div>\n          </div>\n        ) : (\n          <div className=\"bg-green-50 p-6 rounded-lg border border-green-200 text-center\">\n            <div className=\"w-16 h-16 bg-green-100 rounded-full flex items-center justify-center mx-auto mb-4\">\n              <CheckCircle className=\"w-8 h-8 text-green-600\" />\n            </div>\n            <h3 className=\"text-xl font-bold text-green-800 mb-2\">Payment Successful!</h3>\n            <p className=\"text-green-600\">Your money has been sent successfully</p>\n          </div>\n        )}\n\n        <div className=\"space-y-4\">\n          <div className=\"bg-gray-50 p-4 rounded-lg\">\n            <h3 className=\"font-semibold mb-3\">Transaction Details</h3>\n            <div className=\"space-y-2 text-sm\">\n              <div className=\"flex justify-between\">\n                <span>Transaction ID:</span>\n                <span className=\"font-mono\">TXN-CLP-{Date.now().toString().slice(-8)}</span>\n              </div>\n              <div className=\"flex justify-between\">\n                <span>Amount Sent:</span>\n                <span className=\"font-semibold\">{paymentAmount ? parseInt(paymentAmount).toLocaleString() : '0'} CLP</span>\n              </div>\n              <div className=\"flex justify-between\">\n                <span>Transfer Fee:</span>\n                <span>2,500 CLP</span>\n              </div>\n              <div className=\"flex justify-between\">\n                <span>Total Charged:</span>\n                <span className=\"font-bold\">{paymentAmount ? (parseInt(paymentAmount) + 2500).toLocaleString() : '0'} CLP</span>\n              </div>\n              <div className=\"flex justify-between\">\n                <span>Recipient:</span>\n                <span>{selectedUser?.name}</span>\n              </div>\n              <div className=\"flex justify-between\">\n                <span>Status:</span>\n                <Badge variant=\"outline\" className=\"text-green-600\">Completed</Badge>\n              </div>\n              <div className=\"flex justify-between\">\n                <span>Completed At:</span>\n                <span>{new Date().toLocaleString()}</span>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"bg-blue-50 p-4 rounded-lg\">\n            <h3 className=\"font-semibold text-blue-800 mb-2\">What's Next?</h3>\n            <ul className=\"text-sm text-blue-600 space-y-1\">\n              <li>• {selectedUser?.name} will receive a notification</li>\n              <li>• Funds will be available in their account within 2-5 minutes</li>\n              <li>• You'll receive an email confirmation shortly</li>\n              <li>• Track this transfer in your transaction history</li>\n            </ul>\n          </div>\n        </div>\n\n        <div className=\"flex gap-3\">\n          <Button variant=\"outline\" className=\"flex-1\">\n            View Receipt\n          </Button>\n          <Button \n            onClick={() => {\n              setCurrentStep('verification');\n              setSelectedUser(null);\n              setPaymentAmount('');\n              setVerificationProgress(0);\n              setSearchQuery('');\n              setShowUsers(false);\n              setFilteredUsers([]);\n            }}\n            className=\"flex-1\"\n          >\n            Send Another Transfer\n          </Button>\n        </div>\n      </CardContent>\n    </Card>\n  );\n\n  const renderCurrentStep = () => {\n    switch (currentStep) {\n      case 'verification':\n        return renderVerificationStep();\n      case 'selection':\n        return renderSelectionStep();\n      case 'payment':\n        return renderPaymentStep();\n      case 'results':\n        return renderResultsStep();\n      default:\n        return renderVerificationStep();\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-slate-50 via-blue-50 to-indigo-50 p-4\">\n      <div className=\"max-w-4xl mx-auto\">\n        {/* Header */}\n        <div className=\"text-center mb-8\">\n          <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">\n            Stealth Money MVP Demo\n          </h1>\n          <p className=\"text-gray-600\">\n            Complete Payment Flow - From Account Creation to Final Results\n          </p>\n        </div>\n\n        {/* Progress Indicator */}\n        <div className=\"mb-8\">\n          {canGoBack() && (\n            <div className=\"mb-4\">\n              <Button \n                variant=\"ghost\" \n                onClick={handleGoBack}\n                className=\"flex items-center gap-2 text-gray-600 hover:text-gray-900\"\n              >\n                <ArrowLeft className=\"w-4 h-4\" />\n                Back\n              </Button>\n            </div>\n          )}\n          <div className=\"flex justify-between items-center mb-4\">\n            {steps.map((step, index) => {\n              const StepIcon = step.icon;\n              const isActive = step.id === currentStep;\n              const isCompleted = getCurrentStepIndex() > index;\n              \n              return (\n                <div key={step.id} className=\"flex flex-col items-center\">\n                  <div className={`w-12 h-12 rounded-full flex items-center justify-center mb-2 ${\n                    isCompleted \n                      ? 'bg-green-500 text-white' \n                      : isActive \n                        ? 'bg-blue-500 text-white' \n                        : 'bg-gray-200 text-gray-500'\n                  }`}>\n                    <StepIcon className=\"w-6 h-6\" />\n                  </div>\n                  <span className={`text-xs text-center ${\n                    isActive ? 'text-blue-600 font-semibold' : 'text-gray-500'\n                  }`}>\n                    {step.title}\n                  </span>\n                </div>\n              );\n            })}\n          </div>\n          <Progress value={progressPercentage} className=\"w-full\" />\n        </div>\n\n        {/* Current Step Content */}\n        <div className=\"flex justify-center\">\n          {renderCurrentStep()}\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}